%!PS-Adobe-2.0
%%Creator: dvipsk 5.86 p1.5d Copyright 1996-2001 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.86 Copyright 1999 Radical Eye Software (www.radicaleye.com)
%%Title: dsn03_pulse.dvi
%%Pages: 19
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMSY10 CMMI10 CMMI8 CMR10 LASY10 CMMI9 CMMI6 CMSY8 CMR8
%%+ Helvetica Helvetica-Bold Helvetica-Oblique Times-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Pwww -t letter -o dsn03_pulse.ps
%+ dsn03_pulse.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.04.03:1825
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texnansi.enc
% @psencodingfile{
%   author = "Y&Y, Inc.",
%   version = "1.1",
%   date = "1 December 1996",
%   filename = "texnansi.enc",
%   email = "help@YandY.com",
%   address = "45 Walden Street // Concord, MA 01742, USA",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for fonts in Adobe Type 1 format for use with TeX."
% }
%
% The idea is to have all 228 characters normally included in Type 1 text
% fonts (plus a few more) available for typesetting.  This is effectively
% the character set in Adobe Standard Encoding, ISO Latin 1, plus a few more.
%
% Character code assignments were made as follows:
%
% (1) The character layout largely matches `ASCII' in the 32 -- 126 range,
% except for `circumflex' in 94 and `tilde' in 126, to match `TeX text'
% (`asciicircumflex' and `asciitilde' appear in 158 and 142 instead).
%
% (2) The character layout matches `Windows ANSI' in almost all places,
% except for `quoteright' in 39 and `quoteleft' in 96 to match ASCII
% (`quotesingle' and `grave' appear in 129 and 18 instead).
%
% (3) The character layout matches `TeX typewriter' used by CM text fonts
% in most places (except for discordant positions such as hungarumlaut
% (instead of braceright), dotaccent (instead of underscore) etc.
%
% (4) Remaining characters are assigned arbitrarily to the `control character'
% range (0 -- 31), avoiding 0, 9, 10 and 13 in case we meet dumb software
% - similarly one should really avoid 127 and 128 if possible.
% In addition, the 8 open slots in Windows ANSI between 128 and 159 are used.
%
% (5) Y&Y Lucida Bright includes some extra ligatures and such; ff, ffi, ffl,
% and `dotlessj,' these are included 11 -- 15, and 17.
%
% (6) Hyphen appears both at 45 and 173 for compatibility with both ASCII
% and Windows ANSI.
%
% (7) It doesn't really matter where ligatures appear (both real, such as ffi,
% and pseudo such as ---) since these should not be accessed directly, only
% via ligature information in the TFM file.
%
% SAMPLE USAGE (in `psfonts.map' file for DVIPS):
% 
% lbr LucidaBright "TeXnANSIEncoding ReEncodeFont" <texnansi.enc <lbr.pfb
%
% This tells DVIPS that the font called `lbr' in TeX has PostScript 
% FontName `LucidaBright.'  It also asks DVIPS to expand the file `lbr.pfb'
% into PFA form, to include the attached `texnansi.enc' encoding vector,
% and to then actually reencode the font based on that encoding vector.
%
% Revised 1996 June 1 by adding second position for `fl' to avoid Acrobat bug.
% Revised 1996 June 1 by adding second position for `fraction' for same reason.
%
/TeXnANSIEncoding [
/.notdef /uni20AC /.notdef /.notdef % 0, 1, 2, 3
/fraction %	4
/dotaccent %	5
/hungarumlaut %	6
/ogonek	%	7
/fl	%	8
/.notdef % /fraction %	9	not used (see 4), backward compatability only
/cwm	%	10	not used, except boundary char internally maybe
/ff    %	11
/fi    %	12
/.notdef % /fl    %	13	not used (see 8), backward compatability only
/ffi   %	14
/ffl   %	15
/dotlessi %	16
/dotlessj %	17
/grave %	18
/acute %	19
/caron %	20
/breve %	21
/macron %	22
/ring  %	23
/cedilla %	24
/germandbls %	25
/ae    %	26
/oe    %	27
/oslash %	28
/AE    %	29
/OE    %	30
/Oslash %	31
/space %	32	% /suppress in TeX text
/exclam %	33
/quotedbl %	34	% /quotedblright in TeX text
/numbersign %	35
/dollar %	36
/percent %	37
/ampersand %	38
/quoteright %	39	% /quotesingle in ANSI
/parenleft %	40
/parenright %	41
/asterisk %	42
/plus  %	43
/comma %	44
/hyphen %	45
/period %	46
/slash %	47
/zero  %	48
/one   %	49
/two   %	50
/three %	51
/four  %	52
/five  %	53
/six   %	54
/seven %	55
/eight %	56
/nine  %	57
/colon %	58
/semicolon %	59
/less  %	60	% /exclamdown in Tex text
/equal %	61
/greater %	62	% /questiondown in TeX text
/question %	63
/at %	64
/A %	65
/B %	66
/C %	67
/D %	68
/E %	69
/F %	70
/G %	71
/H %	72
/I %	73
/J %	74
/K %	75
/L %	76
/M %	77
/N %	78
/O %	79
/P %	80
/Q %	81
/R %	82
/S %	83
/T %	84
/U %	85
/V %	86
/W %	87
/X %	88
/Y %	89
/Z %	90
/bracketleft %	91
/backslash %	92	% /quotedblleft in TeX text
/bracketright %	93
/circumflex %	94	% /asciicircum in ASCII
/underscore %	95	% /dotaccent in TeX text
/quoteleft %	96	% /grave accent in ANSI
/a %	97
/b %	98
/c %	99
/d %	100
/e %	101
/f %	102
/g %	103
/h %	104
/i %	105
/j %	106
/k %	107
/l %	108
/m %	109
/n %	110
/o %	111
/p %	112
/q %	113
/r %	114
/s %	115
/t %	116
/u %	117
/v %	118
/w %	119
/x %	120
/y %	121
/z %	122
/braceleft %	123	% /endash in TeX text
/bar   %	124	% /emdash in TeX test
/braceright %	125	% /hungarumlaut in TeX text
/tilde %	126	% /asciitilde in ASCII
/dieresis %	127	not used (see 168), use higher up instead
/Lslash	%	128	this position is unfortunate, but now too late to fix
/quotesingle %	129
/quotesinglbase %	130
/florin %	131
/quotedblbase %	132
/ellipsis %	133
/dagger %	134
/daggerdbl %	135
/circumflex %	136
/perthousand %	137
/Scaron %	138
/guilsinglleft %	139
/OE    %	140
/Zcaron %	141
/asciicircum %	142
/minus %	143
/lslash %	144
/quoteleft %	145
/quoteright %	146
/quotedblleft %	147
/quotedblright %	148
/bullet %	149
/endash %	150
/emdash %	151
/tilde %	152
/trademark %	153
/scaron %	154
/guilsinglright %	155
/oe    %	156
/zcaron %	157
/asciitilde %	158
/Ydieresis %	159
/nbspace %	160	% /space (no break space)
/exclamdown %	161
/cent  %	162
/sterling %	163
/currency %	164
/yen   %	165
/brokenbar %	166
/section %	167
/dieresis %	168
/copyright %	169
/ordfeminine %	170
/guillemotleft %	171
/logicalnot %	172
/sfthyphen %	173 % /hyphen (hanging hyphen)
/registered %	174
/macron %	175
/degree %	176
/plusminus %	177
/twosuperior %	178
/threesuperior %	179
/acute %	180
/mu    %	181
/paragraph %	182
/periodcentered %	183
/cedilla %	184
/onesuperior %	185
/ordmasculine %	186
/guillemotright %	187
/onequarter %	188
/onehalf %	189
/threequarters %	190
/questiondown %	191
/Agrave %	192
/Aacute %	193
/Acircumflex %	194
/Atilde %	195
/Adieresis %	196
/Aring %	197
/AE    %	198
/Ccedilla %	199
/Egrave %	200
/Eacute %	201
/Ecircumflex %	202
/Edieresis %	203
/Igrave %	204
/Iacute %	205
/Icircumflex %	206
/Idieresis %	207
/Eth   %	208
/Ntilde %	209
/Ograve %	210
/Oacute %	211
/Ocircumflex %	212
/Otilde %	213
/Odieresis %	214
/multiply %	215	% OE in T1
/Oslash %	216
/Ugrave %	217
/Uacute %	218
/Ucircumflex %	219
/Udieresis %	220
/Yacute %	221
/Thorn %	222
/germandbls %	223 % SS in T1
/agrave %	224
/aacute %	225
/acircumflex %	226
/atilde %	227
/adieresis %	228
/aring %	229
/ae    %	230
/ccedilla %	231
/egrave %	232
/eacute %	233
/ecircumflex %	234
/edieresis %	235
/igrave %	236
/iacute %	237
/icircumflex %	238
/idieresis %	239
/eth   %	240
/ntilde %	241
/ograve %	242
/oacute %	243
/ocircumflex %	244
/otilde %	245
/odieresis %	246
/divide %	247	% oe in T1
/oslash %	248
/ugrave %	249
/uacute %	250
/ucircumflex %	251
/udieresis %	252
/yacute %	253
/thorn %	254
/ydieresis %	255	% germandbls in T1
] def

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin 0 1 255{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}for Metrics/Metrics currentdict end def[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /beta put
dup 59 /comma put
dup 61 /slash put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueXX 5087385 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930da4f8d58abefd45db119b10eb409dd89792
3c6e705479464a4b310b58348c4b42393988fef4925cf984423aaf65fea9f0e6
4629953bcf50b919d968d99bd185f83112b2759cc411764e9bde677f57c5ee5a
c555448d5f81a16259ded1e11bf4119d53e8ab07a802df900d3a2d5ccc1c6876
d29c5e9effb7af3ef83400b0910c07873a8c56fa7b1eb1ba426043b00cc95dbe
dc6e136cbbbcb3f67509964f9f281ebf81fe5b018122eaf66c4a838487e82e18
6e006093042848a903efb3469ab6b4049767aadb95c30408dfd58d8a10f4cb22
168decd9f3ee100f07b49aa44c92139b669cc312ba20192454eb2375be6284b0
26659d964b96ae82d4942e758027fcf23c25ed01115af27ce7f20efe2a822bb6
84004f20243a49c9e93301fc21b80815c033c3e2ba58ef53da2157d524b395f2
b37abca13bc6a2f42e824ab7e47106176b0d6db267fbb795ac7425582df2e3dc
55863468a9200742bd7b552c48f8cf58bc21343bd3b95abfa140f33f37c6f3f7
8b0d8a5154eb7c1f62ec598267f13e841a3e64172663935ac8b665d86540d316
ddece329c008049c5e74b27d59022c5515059bc3b89370b1bc6a169c888bb325
e0b74282d6f053a50da4024ed1e433271a32ab8c17d41c632b41cf9f3ecd5fe1
24daf7aea7ce8a63047b245822930d517df7baaafa69d2d17f7d93cebd47deb8
5405d720de0bb4dcae731a8e27bdbb6e6be38d168b7daff815acfc32ce367374
bf9fd98c0ae5ba1bccdb84d94b5c173abc92f7d18e19a68f64a2241a0a163910
8dc46b8a04ead17662b7bbff3d3d9a95d5937698573bfac64973dc8d8b8d9f68
c52d0c133119eca4fae72f7553d276c817003234a98337d7c037c0f1bce8a804
57113bcd97515c002d20f836fa086a3277727873ec2b64a92bedb01193491134
b6692a08de4a201a3f11dbe070d797f7629ad487d2b8dbf89a0631956c93864a
46c560f440d67570eff56a14c3a10afe2ad577df50a80fb5e7359ce84429bf71
bbf8f8e73407f1ab9a8ad91aebac95d89a2558e306d9eb2191a43cc29cd6c8f7
9fa3484dce7173352db8e91ced8a9a1b82a084c9a192409010c9088c7e3611b1
07cb72787705372ea5b7e9eb0e115e67d5dc21b5f13f21c0ebe2a214ce6b6046
7d6ca9c4848089db55c1c74818fd99aba0423fd0e61318066c368353bb3dcb05
d145137d7f5517e049b696a5bda485a3353906ea41e135e5e6389cbdc07c0467
b6d0a4f6babe3a3f39d015dfe8a63918c280d0bb36bdedcc17414b1436a5d6af
8df00e59687d8268e9238118feccecc637ac5d3049505050d1a02d4b23632bd1
2581810075bc596c022c67610781c6670f4d8636e865dfebaee2ba6ede8f55a0
3e715aa3e0735076d3eb7a76ef96ae5ed81ff3100851b06f9b7ca785844a1d36
ecaff3e9aa6573e8713f428d4b025cffaf02d6ec13df06bdf775dfee84db02b9
a177f17e29c37bd1989ebdb14784eaabc29d1d3b8c6909cd179efbac0d5d069b
780e49b8f872795bd68adae77d84356b07d91114a5953dc9c62b1b5f7570cd02
1a4296023f09dfa1c664c4559e85286326bedda6846a7e8285f68229b543ab02
5d05c137c38dd92cc7b3bb2c37fb81032bd0ea6ec76f4ebf830b5104de7d41fb
b14f9e4743ba9c39fd5656dfcb8ad4d8e884250002f5b597ce32cfbc1478b9e4
63c3accca54cd68e2c0727e67549d036dc408c7c48f855400c660906b7074ba1
a379485c4f55a04fc9e07ed7c3ebf27f7b29ac9438159160987c80f5b4d0ef7e
9c5b3be7445b2a158f6b4e012cd148e592d2593159b06a143a364fd228b51a63
350f03cda119e3f37dc9757b72190566f5aa07d070521bcd767ddb8d802f39b1
5b31c7460b4e15a3e4d6984ca8dc5e61099cd251539902b622baafe22ddd7d04
13506478313286c37460a6f517d4bdfeb3c54dd004a688d7e396235295a9281f
cf4b76222e35c0653b916f142dc63dd438c40b294ad32ce19b1a0080b8f1265d
0f549d00e7517b860d0f3bfacec5c0b167d97522083400d7a8540f15f8224603
256aa81b7a5167c3906adcdb7758e22e146cd327261de92a04fbf6476490a074
c0659880249632f42b8efb0331767968fa41033f82243bf1a879cccb75d5f7b6
8e8cbc6acd71dad0082e71403279e37697b8b0796d338a0be4b56b6db35ad331
ef2c014cb75e2adcfd9a5f25ff6937e2ec9b8373b5d3b83d0a570699e8d69077
ab1723c7ce8e2a49d6d4ac601191a8b77ef5d83bfadab40d9af677fcba4908f7
bdffd9ac37d7c91b5010c8cfdbc0fb79eff5b0b6d97513b00bfdd9744448d977
64720f1fe92f482068b7dc3152283277c19e0351f577ffce2bb1890fda5745f5
bb28c0ef92045d40451fd0187dfdc4fefcf95c2c7330c767a5b2e6478874f48b
92dcfd77eee0bbabf3be59f5a4cccf3fa3dc73b14d8393fe9f714d4411dbfb4c
7de7b9e310e98bf1387b1f262155de6af3b68dbb581e175920803aa4529e8ca8
2c369dd7b87371c0e43a196f4e22c03d1f1998b61e6ae07244e53534a48fe91b
0f3c4a7dd1116bffe6f89035f1a6455def21f7abaa24fe6555f5d123a6e8c228
52d3a5ac04641d0304b917551d0701caaaaabb57c6a4b02994fdd3525b0c25e6
1f47edad9432e7fa4c5fa4d78d96152bf57f87471235179508d761cabea5d16c
e66cf6448d7c180db6378c48aeee733796739c55e7896b5b76b3feb3ba9e0cc4
bde970e7ff9c86056fe62d1ee568dce5293af76f96fadeefc23af18e37937cb7
c3f13eb8bea8b600f5782d24367cbc33357392684ae4b33fe6a8007efcd3b9a8
80dcbfb537ced26e1ea1c27dd3a2b02b9d071080ae1c98edb294f6b457f4cea0
9844d1a33d3371fbe440d2474d47cd3c994e3bc957866fc848f824fe596f48c6
684d2baf812adc3970e52b18208d8ddd0a79900d372d15fe15eeb9cf161db17c
71968b43a93d51eaee1728ae19516719e6db39d3062f884f409248a9df1d1409
0af8edeb2dc537ef7679b06149fc22060690d05e65b4aa2a2b1893807a8fccbc
7142bfa33e05f4f9bd13e921acb027b5c48b78d4d489ac610c4ab622323f397b
24ccf4339355ab8cf1114a5d164f4b0636913d73520855b51d31858e439b8776
c49196548e7c6f2e14287ad710dba437ccc56b88a873de3c7b993c89ad7cddb5
c8ba3e4b0a314dad1383514ead1d7d9312891a2c5524d75f83c91356f1b3e3c7
16b3170bbf91dd9143910e7831d4c643a016a19b6a0ef254ff225d6c0d0980f4
dc6e5a3acf5d554c194ce73bd235235cb16e342f2fbc99110cf253e2ba2fa845
b12b3b2677dd80d00dc5bd2611ef4a4e74e34ea12c6f61fb40bb48ca9d403bcc
b5c6f4f05f197308aa4ffbe6e635592161d6240ae9791db1f186b1bda37c0674
4beb234db121b41c5463aa68fa9a0eef7bca14b98afe852e0bf34d77884e7379
1b57e775988f6abdefc81f5ea7a129b06a2d05b737c06bc90542bdefe60b0fea
94b062de53278de033bd7e62bffe221740671f29a867e63813fd9dcf23585199
6653f0ffa6d08728fcd7a32edc1ea6c5840a433f4f29cd89acab6cbac4f3798e
1e559d6a6b75bc064b47f3bb64b4f8b4dbe5072ae6179e13e7d09b805b2169db
997d383d31ba643aeeb92e196da4999439a40ac95c55438d1b05922b50cfc634
9ee3358af28d7595b2bccb5ff98b4c117b42e94493adef1bec7fad3b27f2fba0
6622981f6369f595cac21469cc44fad65b2d09bba86f9cb3f3f393eff89fe1f4
9e1851fb52d9011a69249e3757ad4571b5d71725e61261c585bed8e8bac7fd58
e96547bf3dd682bbe1ca1dc96a17060a7d2daab81d65a15b324987e503d1fae6
0dc63de8b6d2c17c10c00622ece6477bfe0d8a6be46fce5ca56fd7e462c55c03
0043d6e02f27891f94900639b01faa5db67fe7bba24cd4c909ac70e993ff1600
57f9eb7ac836149c9ba28c036b097a23f0365de2d8530ed255c0d0806f05645e
b2a5c3cbb3471d9dd219ffd16ba96c5c3af45315313810902b89ea7dca7bd1d6
9963e4ef5bf4c1f5636868187a58a353a6d4ef173297d7efed4c3f67149e8627
d848b6b07b7498ffe7e1288d0bf3a432c4ed9a7aee5869ca0b036e6c81656f42
3a61199f55f8d6c98722a3676877e22b2fbac9f1f4528864a9ec63c49be99803
675806bbf2f2efba6b84281b2cb66fa69126bf19e7ed3585d0e84674a7be34b9
c0ff78fc5957ff3e5e25e41c20b4a85029ea08dae4432b0f4b44e6807056be60
acf0ed2f78ee899523242533f1cfc5f9082c8572044b08e4b561825bf1fe15b6
a2b9c5a9f8fd67db0bdd689ed1e6768dd61d604e6990b546dd806715d5c7c557
347048127b5d4c2fa421656640ce177fbcdf42b3138b218aafdfc9c44106aea8
5f542a187165a458940b3a459dea1926a273021eea45ce200c26fd9038ee019e
2013e38bfbdf85880c2a019347b51b295134c626324d55b1567990f42436f4f0
63fc17f8d1e81877633bed038f231e14c1d94dfef488d721c5b986fe7bd9c13a
82eef4498685a809e9402349f36ad88e8d0498159862976b73b0abe584a1d2b5
7dbf21599ff3ec626682796cd38ecd0c87b029426098677f5eb55064d8297127
ce547133800ae19e463e8a84b039f50e691c007cecd471c05a3161f4bca720bb
c137da90c22ee612e67c0c5191bcf2f689cdd30484fbfa31a2cc7b1c2b196bf6
86215a1a5d1f692b147d5b85da60d4cb25604c753daf9aefa0dee3c927f2024a
c3c571f1b436bab8a5e27ed0df76237268e5f11e66e70ab86e914454e5728c6e
0cb7575d6a2db4369e6b7a2f28353a35c175583fe608b9600c7b6bb54e61d244
acc2f8cb18898c231386b123f945b2369c78c4433c170bd385848bcbe20dec6e
ae11b08d69a3d29531365dddf139a243c3ecb4339f995683c7500d6b1376413f
aa230678415c1c7038955a3b54bb35ab44c9285bb81f7469940793d1550fd658
5360d67456b553df7d8ca3f163d107b3b2d91391f85b22807fff8bc89ce2b3aa
8da2cb9575defb1d0cad46263ea8a498c84167724ee9485eb8fefc4319499bd7
32afd833c5cf52c59ec0d934de578469f719d305caf810a94475d5f5655ececb
1ffc1f47782811d85dfab635afd60b0363c18bb2def16520bfaf2e6d9a32a3f4
4de3fd3bc5ee3709ab5b865ce25b328fa36d2e4af617d017fa3004e1a9d9735f
852e4458c7147956d9301411ea98dab5abddc495c3e295d77ce4c6b1f825d6b3
92dd37750ba6fb8d9d875d7c1460e956fee3497aff095afb5b450b3da181c635
141ffd38b58771967244acfd5590d3195cd28f44dbc59b62f4b2efebbf09fa45
ee05133c01d0d29c12f2736a825b3ca6d340c28b768af2722166c27b6c5c9b59
b9de760e3a12902aaba9509b6439682d5c5b1be7a08bb68636104db2596180ea
718bc0827149c1f9ead1d871ed65cbb2ae45afc4179458dce9f39584dfe1bee3
6f2d49d810c6c128645a47ff2e36265c363ffa1d37b1173bd4766201aa7f5c41
971427edc31dac276983d452ac9578f0c1ccd8482ea2cdb5a0176c5a6d305700
f21c28ed67232c0cad7911d51719c81f420bacfeb57932ba73662c4aa3e18691
c32e29d28c699e2bd6139578e5a0c38d49932135633e6c2609a7e53955eebcd2
ef3614adb7b4806d10ff46112d39f3e704392c21d76bc6e75d074d81e3da669a
0b8270635c3f0fbae889de2032a720336a7b2eef14203206d81d0682bf534e18
5e1696a493df01c1f0ed86a89c4dbc4759925d1d476dd23b3c6ce97489a289bc
9d60aa89e361a363e3a17b385e0ced7e2d48e1378cc630cf29fdc846312d4b0e
ff1f31b52fc95c2107947bb297403147ab2bf28ae805860e12b6ca9204288558
b8bfaa757a3aa76b5c2e5c26da383d86a9405e43c1d44e18a2947da81d65406f
bea0bfef8f36caed02f70ba371b5058d91de7bca021b648cc911da326046630b
af1255b9fec3c0b59a8316f2734485d3fcf944bb6e197c23c8f3eb70a23fa825
ec1b5643e5d6e151b535f934a8e7653af5766d20cb8f150a33fe360eac13aef7
d06b4619fc7614bfd45aa0d6d1ebbb041de7b29ce2cbe3503eacbf4a8482beff
3eb11c114ffbf390f9f56c6c730d98c82fc956ba3aae3fc37836f081bf70632c
1b39d3d170b0d7c53ed5be9ee3093f185ec19925159a89328b018c5e046be8f0
e08a6fb1739782f9347272606564625f0eb737d7c1b0a070ec436647c35932b9
3130ab66080af961a0bdddbc3e1a0fb9ec8303235b7b0b894bbe6e001986eee3
7224258424086f1ae7d96e2db50f79e4a91d0ee365d3e943f00351f8a5ce8789
59115cd0ac52098dbd2a4d090009d9a9aed47fca3b9a51834b66f7cd3a3282b3
f549a461706c7e28af18d84d4156360f8f60be8ccbbcaa0794c161b63de28e19
7bf9f55365bdf8e17d50a0ed65e52f53cadce78704e62a7e5540907ac3a9c98f
413b27db51360edbc9f455320c2d09e543e8bddcf59ce59328a253863ed72071
51d53da859d6e092db6db208a5ffab22fecaa9c3ac4db6da95c777df902ac42f
71a0da0f1703bc23716aed789f7924fdc40fb4d06c4ad370b5e3fde11a87358f
f3f7ddea9ecb2404773834e2a56b0eca30f97759ee3dcaa5d76315fc9465741d
60d00ffeed5efc815ab309c941631c0ec89881f1af878434b70cb5ee6b72aa24
adbfc89db3f294537ed1d0c758ea82b1a42489cdc243d1b13f3a6550f3ebe1a6
b791b97897339b5e35632ed73eec457df24009a88338ba8937ddbaa89f2c0ac1
448f95a44b2a150294ae7d2985315c2cd2587fc9217875a534f7e343ba372e23
7e61b261cd7f3d4caf35fb1f55891abbab109334449c42578c839ca5042ccb7b
b816adf9a0f3f15d62bc7ea6b92a1f50d85cacdc27b792aee113300f45620582
65a5345a9c70803e0d64dc60e4ee88d5c2c438533a2cf8467e620f86d014e8df
17a87b10c6b8585788ceaff50ebc9d234dbbf4310277ecbe4993f58400ea9354
8db0401292bdb8a3d962a95a71d5cafd6a8a58981b980a90579835c93fae7f33
f3990c1224351f6bbfeefd6ba4b946a0e671e1259c447d862a396f0013dc5262
788cbb199065f31d829fd54d8ae64c75ecef4c4877a5e318c8450baaea9c2368
6f12b07d6bb30a621cf0520634a9d15840c4c1b859969057a9f25e7469dc23e8
fc014b088861267c87b508ec926167f4d28b7ac22d6ddb3578d023756127f856
9ddb7e7dcf598e54cb0dce50430f3049d5389bd46f14afd4c7e8e65d1549ecb2
17b9cd5f2c7a0b0d8ff998d4f6370523c1b77799517d190dea31990d834dd137
ef5fe7ae58c07caa29bb9d2794108ae5bff3c9e235acc8c5d2b458bcd89e602e
75288124123eb4632e6d3be5669243f47fc79661aa77e2f29218e74dec9d765d
940b85dd591b6fc15d12467813795fc2806da657fb1568198763cf60823f9929
46db305044496dcabb1d2de0820d7284ca98c2f5d836e6c74c60de385a447c5e
17a6bad5c5068a7457cfb3f0cf6ca05447e1da2e368780483364c2e8d9ae9de1
ff9c858cdb74a6cb7b615c0dbd6524420e1900af666e2719ed3ccb02a34dfcd3
3dd94fdc4e5e12794dc70bd036b1071bb13bfaee2cce19c238e074f96c87a47b
87e781c6106478c2ffddadaeeb6bc9dc1f34a33cb7b92652b9a35ae1f5b344c0
f1b628b6ba91bd49b512b8653572e0e91f65d89881c4a3291d1212657312885b
7c76b2b41aa9c0bac0b5f773bdee979805a2f22c1aa3be63b55aaf8ccf7288ac
ba5941c6404c29d41cf821425dc6b94966d1170f440f807787fde369d7cf6ede
c3b01deb43912a37dabec4979e1c3f95b221539b3458143de334b671d32aaf5b
98785db19dc511315691ddfc4df73777d69872b654480c0d425b9b271318738d
efde2fbad7d246a4c5714f56bf53ee201b503b876e86497fb0e925d45b82962f
be2498eb884f51aa42735a77117b57e7fe5abaca3e2bd543596859e900957acb
f03a42990a08c1e7531c2d8cd9eb469302093ff861d2ff6352d59e1ad8d8c8a6
b80ae8129dd36198af5aad8e20176febde70bd4c46465f287551ad8618549de1
a06cf7e8380f58f23e82fed7eff930d8a53a17cf7d17e408d7935df68dfd5d8d
61ed4eaac7ac104ed8447d4f41f8938397d873fff00380a27e8a3f6cbd9c5448
6fbdd78b35dcadb41dec91adce6cb3cf2fbb59678c0bfbc305f4c0841db7c8e8
4c04c94d7cec79b704afd2c14c0c4bc1ba819b377187e5ddd13ae0c195c1b751
67ec0177c8a0a05451b15291d02066c06fef8fd8ae9df53416859a2633b14e06
fe67c3230c1ee9519d0c866ae752e3dc901c7257b1f4416ffa883ad0d506de71
9e24aeb9b0b0a7e7283bb5b264442c796adef0ca5375035b3f76f91eca34d323
8e42b02de23ac4600897c974f2a7d56774d5c8450c46a4899fdb920a2dbbe4cd
ee59bbfb2876423b7835b610cec1320a9cb50e446821f63922225a2e45f7026a
fa83e008aa0ff12be7c0d83081168f7e49d7b53466302ac7750ff39632c0012d
17465bf81cadb1906e14d522962e81af40cbec4a592a2eba32a1847efc105e17
d1e1e0ce4dfa56d4c090c3a74e59b35f0288ee345bba211b6ca24d6a21645cc6
1d93b5b55f9102a74e26729a3d828b9b982ba0f4ebf12e53dac1530dd2d3f1e9
0cb978f62f5f29cbd8475651e5ba9f5c282a34a7afc5612884d78e0d0f30dd27
1d5608d4a352ddfc1b3d6ac9e8ed5763ed8b5d70fbb6f1475680f6d52f748795
0c03390d8b218ff75d50466039de090f1e47fbb70981b3a19da6bf60fd80d815
6c5035d2480f682a810000b4a3946435c9187a37ec3b498d63be77ae5e49c9d5
e3156636dc47315116e41e52845aa7f3847337156e3803274f6567eb50bebe2a
1f4a7402cfb8634dae24c6bea445edfc6cc842b080c8b73a6462b7d31ca98648
be3ef35269f9ac4ad093e024053fd6a73d0e7fab7e8c91e2b5f0268243d7ad96
a28b0d0aff5d5c543a99e8770dcc33dbfdb8352162dfce187111664b8df4f0ab
1d9ca6d0f6816c0b01f0b1b783ef83a9e8ba5b7bb0ae22ad5462adcee0145809
68ef99eeda04f2728d222b9f8924feaeeb89c037848a13783167fde9400720f4
96032cad545f7480572c1094b9b54aebf1c2649dbcebabf481aad4b551475c3e
40e5227bb3c69b8e626c6550f9982561e5810c3673a76de90ef43699cf51e946
4b4216bb09ea1431731f812887836273fde701cb81c131b53c5d482bb61e1858
d236b8be3ab8c70da49b64d1d241d8b3131adf74d20dcf653c98daeaffea2cf2
80d597924b6c3d91b35d1989e677b86bca58e4030c5397765c5b6a9fea2c46c2
56e047803fa16c7c72cfdb60e092cefadae962da081aec24718e00112aaba9ff
1d793c81ead165dcb49b2e980f495fece3cb62e68fe62464dcb50cf8bf00afbc
b6b11dd4c505bbf8d80a04c56051f117dc7892668cc62a20c13f0b564b6038ab
163dc3944212c4e97eb82fd0e628abafa48c3dc192ef9e3e7d391cf95f68efe6
b231c33bd182dada2aaf76a8b5f1d0e522a11682509f0edea0abbfa1d1ed50d5
26e86d3eca203adedd59a3c3dc19ddcd27086354c17a840098c55be4c56d3c6e
3730cefeb08a246c5852ad94dc64e42ab3b880585b6779542e4ebddecfedb52d
6ab19f6530f8cb3bcc439b17d847b844dad843f9cf2110895406e3932807113d
c5fe58dd0252dc3d6429c2ae5dde6229f9cc9b7bf7107b361b6e22e151644b5d
b36d093623a64d9ffcb4678e1fe1d79b4ec7e9e3c20c8fa7c7e30b8c763e5557
e1525dfa3a4f25447eaaaf8aa6d5841e7944ef437ac7968d5c238b43e7fbfb4d
4f29dac16d726aa246207b1523399368beba3ff5fb7a5a316c56eb98cfba9644
472a658f098ba6087e94a5b1c4337a7c541bfd07b774527fde7f62fa1f7ef1a6
b0b4331ae4cd0e334357e7ffb763451bb6593666e40e529a90f4ed7a7c918056
a7d91ba788e9972c5e34429cad3a912a1516bad9df5e7e29d98ade0877c32a07
df3999e6b23a5f15049255d75bf7e170d49df03f3ad43344d9271e0156f1eb15
983a4f48b886eb989f119f008af0998b284396b892863ac9701b59a3bf88bfe0
27212ce9cf55356e8ee139575e284b4270d0d179dc8671715a435a6948bec6ae
e4a4f1f26148d6778256bdda2f16839fcd99b08d7bfef2fbeb20e88bf609f7b9
4e53d1f94e4b8cc4076fbc51cb0d45c569bd7651c22b5f91c080f11cf9fa905b
9397f223674ede309cf1fad5068f8813ea6b3409db63d5f17e568c367e097d46
9ee982e831bb130f1c017fbaa63e46aebb08f7e92ddc022534c96a96b26b8f32
291946601f718c15a4d58296922d43ad4e5186e338fed7ea8f03e2427aa5a49a
376d6dd5572f6ef9445339c14c84d784050f2f8b69499ae61120ca1b2e5b586c
d27e83b0b6ded5545ddea3669f07c9fd4a5777595a87c0842656983df0d9dad9
bbc3b6bf616a0607899392b146a9f7ec89c9c8ff77d84c6f7902855502391284
81ffb0679e396168f12a35db9245c77cdf65f34168625ab295fd3a876fb9bdac
355b54f50607e283f3a17c9a0b5b9bb57e59de553494eda328d263091f258ba9
127c90ab3ba0836a666e92431c1eca5e367853a281ea1064426331dc9210942d
1d6faa9b8736d944ad28196b7219323c2cbf1855
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 10 /Omega put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 49 /one put
dup 50 /two put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 103 /g put
dup 108 /l put
dup 111 /o put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueXX 5000793 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3fca78881823c5537fe6c3dda8ee5b8
97e17cb027f5c73fdbb56b0a7c25fc3512b55fe8f3acfbffcc7f4a382d8299cc
8fd37d3cea49dabdca92847af0560b404ef71134b0f3d99934fc9d0b4e602011
b9cfb856c23f958f3c5a2fbe0ef8587d1f5774879c324e51fcb22888b74f2415
50d7401eb990d4f3a7af635198422283cac1b6cd446ddbcbd915db9bff88844e
784c6bf7389803d9450b0c21756a017306457c7e62c1d269f306bd3402e266de
fc3b5e7d8a8d2f5bf0fe6ddd40d07391df4fad4a6018dce29a2b8f692b29f202
3a7c0e66de8ed85c14f1f8492167357f51a7e84cc5d92e0fee4d81cf7fbc8de5
2d2e7bb57142033993f9c08c315abade8dbc4a732e84e142d3bee51557910e12
cd8aa37c459a5e6b7f5269f59078aba3be4641a11ac48d0b625c8325b38ec08e
4c9e5e7fed976a5650d99d82114f449b9ca14c4ec957702295a39a93ef93f618
99b8ea06b092c3c1e503e6e436e0a9fa22576c8930ab3dc8c20f5d82b69cddf8
ff4dacfa9c54bed5a3aa3ea5b129fe96be632843b9b6bc91b615581a985db56b
1e01ca60ee69ca92cf5c0882ece62edad3e106d835348822400f0b66af658f2a
e56ed08f8b0010571807009b73ab12a8cf14ca6c71f03c2a48c500f9d62266af
154a6375ff600d9bac3f05ce34142d6867a79581c533176bb2f3117336671e2e
44638a97167e2ea9644e31ea16c2ad2990ea33c54001e0c8156e6de8ab6a4d40
a7137ba275f39589fea2e2db8256adc103d6f9cc038037a47e8fd469c5f98a5e
3c15bd4ace40d340018b1cff7d1ed8abb0ac57b5b5a2c20a51957b96c453edb7
dae5affd91a46d938fe0a13363001d844ded4323f1ee6d30012aea19b024a552
315505535c85dc26bad31e09c50e6512802976d298c4e90d0044c362e6bf3ab3
62a454ee93de25ce54411090c29e9d75c80ce26a84404bd9de3aee0e3f921ac5
87f907572b8354a5c3165eea7e8b2ba4e33a65d5b6ebd471f04a101d1ce222b2
2fb7e92a2386f4799f30783a02cad18250df7bf413106fb48097d8dcda6e12a5
13ea4ce016435652a955bc4da26ca0d77a3cda667c3008da41bc041a3247cb3c
fa9d66e8e085eaf8a594e3e6b60d8f01132c9e7b202917eec9a0407a7838c939
6cafe072d902ea4d5c70cc4e759354d7f487e5d102b95ecc5df22da41405dbb3
04b08e99bfc2003a3e52259208c5214f2a73fe1c9847d4492011f856edad2d97
bf7079d732de9701b9c821c32777210c047f8cb77d23a761368452cbfc448fca
c64deb29be1f58bf867846ec08782be06f828ec06691564891707040e4d2c7c4
4e25e5addb423b47f7b500193799147d9997dd0156ace55ab431b8a11a118044
29ed70555227538702312f1e0e6502d49ff91a0cca79f09f8b5af5de12c7b68f
ba523b5b32c1c1ab4a0dba3851e53eff4e91b1238b1d79b9a3e8f32f2642894b
b0d272733747993fa29f8f6d435b52380f0d1351cdc959517014e584c5e0fe80
31c31b6a339a999a3cb47ab58ab4ec4595ab88167f4ddf3a1f54dbaf6b5639fe
2489bdc98382640eab0525b0acf9bed2be4d48e7643588403e6cd10da549891b
b30626fd4eef2abdaaea9a53046dac3fd23c298435fbb4573b11c02abdbaf630
2926d0c327f044161792837f8f3b13b461638f75ad6244a9275042f3dde8c1fb
6baccfdf88531e221e62e713b3b1373cf60d435772787351579931460579683d
0b019c0770a42dd31da7603bad60ed80ece04af4adb7041c074af679eea15ad8
4af9516f76305cf3941057ec77bcafd9ffa745115b28c46e8ee35d75567e621b
ac02d9a244731ac67ee43f025980b16b4a2fae8275de778da5dd6941f0732298
fba9c154bc4f757fac55d4a85efb8826c052acc886a3fdcd5e83b70c3fc449f4
8a1cbc92258e435a7ba25fea06a706a2f69b638aa36facab2122d0ded7495e76
336689238809787f611b01d05159b10573f004caf9f67eb37914fa6232f6cbb5
80593e034bee735bad6a0e9c72bcf8ff393f6cb21c70529ebfa8a3ab518fb277
61fd29538e74944d8883addeab921e41878804398e4c4c1e1f83c5ad4e7de000
579fbbe922c906b2c64dbc1a19dcefc2958d1f6d49ea7e13b78810d15f34e857
f07bcf7bb239ac830819a7222834d8b5442ce35f6a760cbf21440e861d0057b1
2db515230e085e9fb383c0719771776397e9dab61e82a0946ea1fd31d7374a98
64561d44722f62b9d20bd7a3707de49c8610e0bb386320a8fc412fa30c150151
b88beaced5e8bae6ddc48b4a115d6650ca2ca6ca086cab9e86373e5363f07283
815d6e501fd5b7525f4195d943b06ddf35690a6660000db38ee3ebd63756347e
2a6c067c91613cb87677b3f914cf81b435ba4b572de3adca9d6ce1eb3e232df9
b801d305b3f12d948d9974a60cf99caadd81d00cf9c60c35d83c9040b55ac0dd
48c0582d7ec42796d331e67e4d700db1d5b7acb0cbee8f8ca795647959666d92
050f072fd89ae14ce1f9a260c2c33fb40f8684c821e3d765e5d2f548c86d87b2
5923535cfb7e25c6dd54ab0243018bbf768f5c5618a622e821eb9a32523f7f65
d7e3e9c582ee98f16913f0390e0d937a03f590bc7f6cacb24b715424ff4975fe
95d427b8b273f1473463b6b2224153f1c52aeac40028b91ec328335bbb3dcf75
f73ba6cc46038f6614f2fdb82e946efd58e394681a53cbe9114173ff90319806
e6877d015ec7aa1105cd1d3e4c1af1aed8d1fa90f7b4fdbf7d8ffa3319919230
b3e850b3c188939d1c335295de0e86447764af1efffb62d42854e08b748eef9e
d02817f67c1c6ca17f5c62c0a534e764ece2fcb04375964d8ffc7971a9a448c2
483a3fe95cefe8b37e209e2c69bfff1e2e4e4da0b347365b8815057a173bacc7
4c3e8474ae353ac13bcaa8bac16ee8bd5a500ad1280835a23d9db1825e939922
6199f4025c65e112cb801f2448054602dce0d11e5e0658cb91a94c168b37ed08
7b0578bdcfad751dc444968890ae74ff93975bea0719da606f5dcdd93ca6b139
8544baeba59f37f7865db52499ba370a3d12edfa79c2f521ebf303081d388e8e
1e277c6f70b414a2d50cedfe8a35ccc9a2ff1ac643988dacebb99bb002357819
26f8b1634603cd358c3ea94470683067ed9b3d65b1e19e9f4025a69ba909e6fc
9b9db449dca289d8314e0e005948d0bd2e624f3cc89c4b0c0d0437d62a6a74e2
617bdd47294e7aa947c517456be10c1e9c4417bb7beb1b19a9f08d18fea26c9c
b61f2029728cbe1cc42236c7dd4a8322cf2d0d770995d0fa341886a3436ccecc
a1c1f604f3adaaf9af734392909120f8d99cb0b16b3b19538bdd213f071ae057
d029299ea2dc4205715dca1a529d677831a6cf4d39a5a72811aabd26c063b1d9
4c389aac12e8faa50dc63fd307b7f6ee5bd3379ce25dc857cbdde315b099304f
0e57502d34bd98da8f2b65014e57bae1a2587f26fe7c0271aff8a4d6f1a8af69
4782031c8f32df5f8d4cf55da08eaee19797b0488cf827a09fb8082941093bd4
f48d64ea4024f22fb589999bb69d3c821553f65f2fde9aa716f3fa61164b5eba
15f31d54618da3b958fbd465491b7bff2363be2bf9fcda06454f91692dc849e5
cd0191655991865231096207e325d0ebced7b5619d6eafc9cb5ca1070dc939bc
9e7c479f433f4e45c46b2467f78bd93c36cc72243755b045f3341c4706e874ad
f2c7d1e2ebd34ea67242151a94c78bf235ebf6c453bf6f29ec1f14538fa0799f
e4cfb613e4dfda54c90f273a951907b2cb441053f42d86ae3c76897aee735fd3
4c7185785f39935ad5a9b38a758da6abb1b6a12fbfe9247bd4610d149840dcb6
a74b59da4c79df511b69a73addbe4e84b3f6e84089d9f60131836247bed8d67a
303a65aad30afff2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 55 /seven put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueXX 5000791 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486858b2a4b5a0cc2e1bf4e2a4a0e748483c3bcf
5de47cc5260a3a967cac70a7a35b88b54315191d0423b4065c7a432987938c6b
edad3b72ad63c2918b6e5a2017457e0d4ebc204b094541f345ec367ae85ca9bd
24568a01d3b9f8095f7420e6c423c414b3dcce6da48dd1c89a56d078e0d0e2f2
62a13640a06d17e44ee3866c3471fb58fedf5a3b77294517651c16bdd7267d39
a54e7171752dbde63ac19bb4b3021ce95eb5fe67390b09ae4d9ed4d704a67443
f55dce17acd996c1f5e023c9e5a18cbeecc3097f23763acb86cdd7cd13381ae7
4e48495ec7fa520539d87f8a8dcb3c826275469b6800876a457e7d1e5be867c7
b1ccad69742a8c9b0ad943482bf2a4ad0aed40baeb69a0233bad36b4ca2d2da7
322956c70375d152653500b2f22d2ab6990cadde2da14b4917f7515e64bc3d96
bf775258fc7dae4e42a4c9b6da8eddec4a800c8aadc8d75e48cae52137e05c03
677f5d6a82fa46d9f2fc7f56d62e5c605a1b7898b8d1401c2cac1a0122a2c8a7
aae09607f2c5f29293a09b9959399283be89051452898238b777db9830ff4318
a298b221c4a820c700ca964fc99e6b1d9eb0bafc39be9aa9dffa2fa326b2a466
1e67261bb3dbc85844e76f9313ab533ee16bcb478166de5502b68e6ec1ea6110
f53206cf1cfea419571b0243244b32ea38b828a01e62b03bcf476a32c2341cec
b8a0fa2a3f3f339315d5f3aa7704408f6617d026ffee4925aa48537a4b2e556d
225be09392546ad561cd46cf766f0ba14c6854c5af1a528c3842b0c5aeefefcf
19f19cbce5d967153c4f88e51c776cfbe10d39328466f7a3b83d85601ef4d1ce
0cc136610fa6a74d9676e4e99291d565cad27b9eb2337b0eba4148efd0eb2866
ebf0a4209ba135ad1376cf9cc2d4110f36121055caa3f2e2f42804093a2ac86a
a595eb7693b72348a4f55b3105611b06c4b7e77cce2d7123026e9cbe3bbd01cc
681d1eb7accddf88de6451cb492378b194cb4680865206b347b1541a2975062f
69c037af6d55d1bb4b23390a9fdac4b28342f8215c78394460e59ae3b5f8271a
406ef089c66d4783739ae86e887c29c8d5026a43e88aab4a286be3860d12319f
0b875d14ee48bd878aa80f833139db7f14c51ab3bb20c1cca9a4977a25854cde
0fd6466bc4d3cbd59b14f20507328f45d7019eb5a1ddba9496a5a69a63c73145
343450f66286b0dc1428a19ffb3a3d199ad35956bcb57d81a44cdd0e56a3578e
f37d18464ebfa3217ee0a8ab58b644a679bcf2a203010e3636738c36e12ed329
d694d7fa5d16048e22dff716698527aead9cfc9aed6209b61e5847ef9be8af06
99d4173282ea88dac8ff417895ba376c0db5ef47a6dec1ec9535c1a19039e76a
d45193881f92a2fd4e1af3cb5047372c83db4e868666e6678acf6acfce5c3b77
9ff1723c85cb3f296a0c7f37af3caa01f73aa625f7d752589c0b9341043fd7e4
8049c4061bd48e07d54e8366ca7812cdb9204a8b0f5ba99c0dce2d11dfef4c6e
5323d041e7fb4ba3300281847a5b6e1eddadc1d124eecb9e7c015ddb08c73f99
d154c8504f72075dc594e16c532c0d595f6ade8fdf6b625e0941848bdd1458d9
598dc3eec4b7849c30e28f2e6d954c0a5d58ffda798a5e6c022e97e3b3d1c80e
86058168bc7c473acafe156a96ece634b27a772adb96a81578387f467480546a
734087470d11b10c38abcca60b3ba413cae21447a09f8136a40a23507ab8ef10
2d8573355ea44783cbc0287d3f4d9525f5de8c314fb0b439595472697f621fac
cd62fc8e92cd4fb3a6568efa917852e18b7d10965460a4c3e588c3ed46157212
15dc5d2943a62f66b4d6f90966abe3f269e82663abaf07e995ed8f89d72f7d2c
b023b1e91c7398ea99a03496d73b40b383da4eecafe0145af7f396b77f336cd7
244170fa88a828713e7d8b27c93f726a9f02c0a364cfc14420a997cf262addf1
8711d40c24932589f15eca274c572f91b643db24d7964b76bb774085b8bbe112
5a289d3f044742d2e29172a5725d2892b0effdd5ef69c90fd0818bb49a31aba6
4e0b5cdafdb90e10c7884092ff3a3cedbfd13d24a98d1e4d7fc3ac69935d20cd
9c84e2cb14a40dd80199d975cf1066f951c52f44f7f3422ca9fac9103b2772f0
ccc5958f65
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueXX 5000818 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f059084178f5ab59e11b66566ca5ba42b1911a
5d7f1bf343015eece988b7a93bce0c7aa61344d48aed9c92c8698d4b7c9951c8
7d103f2414b39e1437f9d2e50c4ee5f218f2e6716926a79ea978f13b1f855345
191dd7d31d8f82c2e3343c7a5894d95bdc492c28226834efcb5c12fea36ac5cc
430e0aa604961e34888adf6c1f3954cbc2498e225d953cf5685852162346f474
5a2a7087d5d7ad486de16d2ca8e15cee26e012671ba3bdc7d95cc8c98bb774f5
08625e968aee27ff7d1a06e63bcfb5aa4876c3f8f13b30ccccee73c3caf4e70d
98e6ed2f422dbb4950bf789680e064150995941a9f4dd68a575949847a7d012b
b910bf03a7a227d51386469ec9ef415f3bb849d30411890d9c6f5b9ee172e351
8cba2ea47be683900e1c23554cfb193067c35d0813c4bc68f817ef9f0206f08d
1d8be63236cb2d08f42c4a0b73a147cc7baf1a212637a7b9c3243332a162b8d4
955e17a50b678c6a322c4eccd28fd709ccef5f4a0c7f542c5ee8fec88895af93
48d3cc99e31f083e3f3d6be883803f7d3f4c4519360fc6d925a31d854e764f79
403b30ae39e581fb941615aa3c86287f7cf79b84e95db76ec8f15c8b43029a6c
e93ae76e0320d0daece8c62f7f4d189fefdbb7bbdb43cb87
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 112 /p put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueXX 5087381 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7a1e67ed7e41cc25acc04702f6
8ef703e3d45722c1a91fdef7100a48631a02a6f02a08c6b1f9b4df8310385b86
8632718fd87119a233f219d9411383b7fa9f3e4780d8c27e2e89e0cae883d664
c3eac57a3aef8988a2e9f0f8c7f53e0a80bdfc4620e21287d0390e1975398544
7f3ea66401024bea75e1b4c4437b7bb188f76f96b918ac7c6ad7e8ae7f21d8c2
790f08cccec904fe48ef39e597ed4d4237c1d1f596f5906b19ea308020f7a35c
168e327ec3246b1dfabe912f6b6daac09974876d3996e57d180261110db05f15
e3e8eebba3d90b5764c03df3033a1ed678ebc679569a2fb297378b25434c0f20
5313ecb8a952f07242d3ee731b0cdc086a4481178a3d65129c47c09b22e9c431
e11b3747b94c26a757c38d06001798c6a568303d541385244b967d3b1786edea
f65bb53c4c2fe75e4b1b15c2c78d930b4296c80f08bad86012451edc8e9f0854
c3b390a16e27b11b3d45a9f72eff8baded2242dc928a61685d79e09681c97425
5b90a498614cf560fa5b1718981388268ba206a96989e6d0b5d485d9aca5594a
e67dd7b34d8a369adb06647f8aff8814d6d9cdc04a4835918e557174c5bc0f3f
bcea9907a04cf93c12727ec40db3f2f77596dca477862747435bdedacd9b2311
6cc97fa47ffdd7d897fb6bdd5572e35d34e7e1cb5e7273a4ffd86525323ace4a
84e1297028c2bd5469baa2e75d19360c2c9042139d5e7dd4390a6a3935424711
de21910126d750ae279916ceb71da3591d60dc62db333c5021e2c1cd61ade51e
9391472f46a58f4d47b46f95c41dbec5e45184464817cbd9392cf9193246a39d
1eb8a745efa4e1dfe40ac10ff82661b87acc30daf4ef21ad02b57228ad43585e
b3548e5eabf772e0cac4bed51fab6fffecac98a5623ff3ccbb29c368a2a17e34
648c9f4c1de57c82339961bcb51eb5f31303c23ff8c350b661f876a6ab9f5e0d
413170cc7150e859fb754ca67d3d24e4182a58cb7ab4b2dafab111c65274f42d
8a250c275a1ec80c3682527ea91817e69293b8cbf78a81dce6a376d279abc2dc
c0548319e2a04cd5eead9b8a01f82023d0127301f51ee940e4cc4dc3b75751e0
cc266fbf1ee6547f1df99c7a88e4acc04c509745c699c0796a8c79ab16bb3de8
75f958a7572e64281f7a63b2acad8fe39097d27bb309919b0941e2925b56c70b
6bbe9a7264c069d79bb5948729214c0da385bb8968d49505aaac756583bb6a34
43c127b392ad4bbcf73620e3fb36506bdb8d5ecadc97899c0b089c45514d062d
ec6aa6e4b2a48765e17001795706601c524bc7f254deb1eb628339d0317d1747
b5312e0d61fab16d85e0e50a5b24743b5c8e0e40adfb4d31d635b2d2d155d98e
db
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /beta put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
/UniqueXX 5087384 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930da4f8d58abefd45db119b10eb409dd89792
3c6e705479464a4b33ae3d31bfe98efe259f07f7950237bbaee4f7b64ffea83a
757fa717d50c3298392891bfd60e34a056b0d6021da3fd9b8b01bf78b0b23dc4
ea3b0605150d20b27ff9ea5f2524661019d982a2e47cd7c21ee5ca9ed9227821
f8d07119397de26838c11d7b35bcedc43e011626e300f8249ed846d7b5ccbd89
02550cda17ddf113df658fb13f8162681013766863784efac128e01ef997e1a4
30312afac8f3d948edecd7d5090ab5c864b91d7f6e80256f0e1fc99f1102b74c
61cc456e2e1bedf0e627d5f70f738f963a13666405c51ebf23ca077e97570a2f
1118536b92e585cf1dbd5fbf36a0a5d197538c05304e93a15f3c931168d91d42
483ef428b1a3f1b7e548fd1d23b80f5523c8b8bf450b02804fb689f915c86693
f7dfb1c43f681627c7f027021aa3a8179148f1819cd94b8890a9ac63dc1e8a68
f254b64f6f173c3d02e3ebc037da05074017c8b113e94f4e2d26b467ef9da07e
afd7ea7c86e025af52c5ceeb835951e67e02a38daf1e9e698bd21996c1071e84
ff7fbe77f6ddf9d06fa92b16ecebcbe0370b5cd9d450d0f2906a105cadf93ed0
0abc7fcf2c996e7c15e452006e35390d99b9cfc59925f1444c20d9c3e1fc2910
32cf9fa9d580eac1bc956334da391b870a757c3bee6aa3e005b20988d8587876
3ced20c6edf2ac2b22890e37ff7aedeb0986d85ae05bc84339bf2116df48c5d1
cc888bb33d409b06dd70ffd0618b2080442aac439aeb39c20a87ad74ef10629c
f1604db8611e8e4224c5b21ab0c7ebddc77fe9a283b3a8c6a2a9508f6836e3fc
3eae1366b4da4f44cb7a77fd81d278c17775d56cb28b70f18d894bfd1ec1827f
fb16b0d4c1a4ce155da066810170fea53e0d24874d6e2b4bdc2cbb542d994c0d
b82e8d34467c56bd7b315e1edba38e2f4e739768b47435119376a1a2c15c594e
a91f416e86f2ca4d8405e62840043e08277066f8a3ba7f0e02e685952064d7ad
cef8dd121e4938a3fd76d56dc32835f84781ee1da40e710a11eaeb3fe74737ba
932718d68effda83982a7a0d054cfe3a1a28ff8b15ffb400c3e07c4b4be04aaf
af8f853f798829c5176b83c33bc415c7c403344b33e1d8927d89fba62f6efc09
2763c435b42925d01247febb0d98d2caa5fdc26680ea1b77fde3e7f1c9dcdd08
9057d720bb8b7cf8520589061b6320f353a28acf37980914a2ca879fefa984cd
1776a59919189e72b5e5a6297cdbe2bb3aa045bfaa179e149b9b39fff8f26d9b
645fa877992d6a58eaaf2a05bc65a9d167ef12c1c6a328f2842e4324f52a3ff8
32de6ca467f713f9aa568a272058eef02dd27bf1321dde492f5759bd37e40bd7
ff528e32f6d4a50760e8cbc9e7ec5a4db63491cb2698d1ca9a0096811d437d49
eed76734a92bfc12f53a3e4f4b17696e263cf5e4a017c46b49c2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: LASY10
%!PS-AdobeFont-1.1: LASY10 1.00
%%CreationDate: 1992 Oct 23 20:19:17

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (LASY10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /LASY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /a50 put
readonly def
/FontBBox{-19 -192 944 683}readonly def
/UniqueXX 5011949 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192e3f6620e5383410
9c674a944e5ff85290c767088ede1e6835bf2aaf7a0e947193d98442808fc3dd
148069ab44a71076493a05cbf836aeb3dd5c78829d1482b3c40c2f4cf5fdd0be
c3c3c1e08cd5d21db9363551e5ea23a95a928a532e09d2b59879067059a5974e
4912c690ee71858bbf009a75913237a9ab9eb9d8d683ea3fe066fb2ecd3df7b5
c7cb950bdefac7931a3501dd1dd59c10d45f8f91ff07c7c41361e1fafb605c38
0431bdf3b1e44d21d351cf80d8dc6fbb5131fb8ad1a0e9a9a5fdea6432ec1d59
bee32029965fb5c141768d6f2c624b2dae5c9ede58cb4f522099a96749094f15
07e9a6b977ebc86c877b8c4a0758b69dca966be63e606c8efde1f65b295997e5
1205bef471d087f51dc9ff816ef9f6a4a23226f9305feba8da8baa909e515d85
b60901cd8e958e0c94d2a64c1d9510e66d37d18fdf08c5408032c63ae7a667bd
1ca377a9eab6b0bfd434ccc71b779a6cbab2183016bddbc05f171719794bf19d
0118b9e708296d876e7ebd011b0d49e51b56e10bae4b5f2d07b16e0c83df55ab
42cf85da87350d752cd4522682b02f82c49d08a2e0d47d58374443a63831e432
c48f945cc5e42d807ba86cf3e7b3b09f636c17360c5c9bd7717f7e4909e8bb4a
7efb7a580cc9357613467b64fd0161dc026602cc382bdc1779ce8ebc0587f172
654aff1ed908166f3755ccdc64a183e50dc8ff8b9d8ea9ab556615ce390b4660
1749955a3ac5f7c061d6b9948677ca68373ee7c6738abdd0856c90a91d904c91
914f3ba09a3a8b54fa319b1ba9bbd7441b69f0431716a4156816329b7e09b57f
495591d0d9c9049cd0475c7d2b75a8105b99f34816c75f82922b2ff19f835843
adf237dbe7d8fe6c10f1a7886b55baabf55cb33784653da0ac3b49692b348e26
0e2995ae562bf8fce2a4754886dfaac090986bb50eeff294d171eff1b12356d2
e67a7040f2ac7eaa0fde3cce8808b041589918d213923d556f42dbf5c27a062b
4885c544d36fb68419aa660bc55824a647ee56d3a4f4c48ee9b6168c721b54fc
e8c202833282c38447a03eebad4a0098fabff640b27298f9e63dbca777a37849
d70d0ae5436463a8d8272bfbab7dee85243e4046f8af3fb02dfbf7fc9fd59837
9b3af8cb2faf3a58d7aed120e3c05f5fc69074b299057f821eab
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueXX 5087383 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7a196cf14c95a4e02f9cd2da8c
db2546c6df52e524745992e18d9ff87aa25e4e1800bbe4ebb357c6ef55ed6d03
6d3a00c1ee8073266c21d2f0ac85d656abf61d7e5a4fa87da8ec3b5329e434d0
d2adab706b42a2e5331be5295399d803ccac03f631f01f39a022fcdf63486b68
7d15ef284a77def7fde4898543e7b5f7ec267756103e477f547cfb8d2311c4b0
09deff56085f5d419697af1846c8b88c1bbbae149f0f19ca3c8dafe19cec48fe
6b38357246d8b5cef80b53bab4cbbbe8bc8318cc462a4158258f456e697f6058
86010493f252073ee4e4c9531f23485415ad6bc901bbaea659ef701f825f4b6d
5c9bed0dce7b63810f906b33ea4955531ca1ed1fc120cc56dc1e277a33222cc6
c3a97552607b865783faf0895cbeccd0df54f57bd162a88494768435eda71a39
69718c0c5912d3167bb0971546d733e735aa9bcd89f5aa154656031ab3f6fe41
94ec225ad03ab8b67a9da43ab365c4df17c23e79f685c3b6fd5b654e4a6f2603
6cec3a8641b0b57f93eb95f9e238832aeac2061f3153e0f375513c974f1c38f7
b59edcc94716f2862cf71c9a2be8430985da1cd813b1e1c1b9310564a2eb1aff
52c190f50fc981dccb64bb2c1f7a62c216f211c162c2ed1c554ef49fbaf12b31
aa3b2a80fee259dc0a2a4242869ddec7c29e2941792b28bba7f2c6f77ef69638
12b07d6843f33b51e01c8626b26edc34e1e0fffadede5fb468e8cd5de7e5a64c
366967578f415484d122834de4a647541d66989f7d8b25d1712d8d16729bd9a6
472de3a5361df402265e212fcdda5763944f19dd6fa667b49f8e2e42d4d0599b
848d6f4fa99295efedb3579987dd9636943216e7763ba55d19ad7cdafd8b4899
d864138f37fcb321f2b588224a7f9ff211ed3742429bf5f094b1e0193e526500
0d3433c3565a083df44f8b0183b885997a6a20dafd90ff3cc87242f444311c3c
3dca4921794bc88893773b6c00cd1dbf5c0288f33b324cc55b46470b5af12b50
48d1dd04f3a2f9c31f59fbb4f938f467ec0242b97ad7627b0c38853b5dd1e6f6
b62b2c49779cb6f97031b5f211023904e3f60abe8d63083a3c8358a2b7152e2f
1f12ac077e53d6c8b88e145bc381d11ec21ba67ffda48db096f4bd08ce02aa5f
04a5f687f3c6c84c64267f7665816938fa9d755474b7962c8cf1e93307a6c00c
4c5eaf70e599788643c43d05594730070a890ffa7bed45720bbc6552d20e303f
f12591d06a6856f59a87c8672c8a46ac84a90090cf12a45f749e244cd75d5b75
07101f77f0c37e573440375a5321c6a1c7fd679c978c4af2f5ae805d803f565a
6a6088e6148fe9d7bd6d99f550e1187c97ecb8be0b0fde5be719169fdecbe1e9
aafb98f4517faa0eae71ac741770e5c100d5159cc30b8dd52d38d7a8d50a9e73
7c095708e656364fa20fb85a75ef59962ce34529d5d402cf561d7fc12d46d35e
6e7409c846babc1b6d6af0bb05e55e8b7937b747f8b8a2e615c7cf335e0b517a
01f46a2fad8a554a042041fe6723bf38d8061709e01a0c3504a4dbc2ad35ff4c
de14cb2750873bf0a4c22de00deabc6c91d3628c133990b2a45bef210a8b7003
88d058e0cf4dd5237f88978ae1c2affeeff704c90c817303b9485c7915c62a83
41331d3a3c118e06e5364f8c4207faa018202b10bd6f2eb010e2e24139142783
b8e181286f17cd16324f1c6548d736f9a2e57cd98cddf6e98215421c16268549
7c9440178e543f88e4b46e64bfe2e093eb763c312727ee5d2bb894ab7946abbb
88db508f72161e3a018bacb6a1ffdcd7b6db11e91f6f307a881e25fc7838a68e
89ead8d38135574f4fa8e3d120c2e81bf11a4fd850280ea58cf4727f5843c7d0
be37e03ac429d516a142d398bf2483214a29ee2fb3e12529be628c65ce041b87
3c5c083dd490542916cc501bfc6f5bcaea1b110ba9ccaa7a768f10455cd539a2
45457f399b2097ac54415c6b36d75038c96eeae566efc79d27daf6936dc6635a
055cfe45e0767df94566b3513cedb957d42c8008869d7a635ba762331a16b40a
a9bf15e073f928d22313a21f3221f9b457571085ca5976afaec437c77bca388b
fedf624be3c86ff83c63db1c7b2a4affea4ac2ab12bb647692f87e2721aa5ec3
3d8ba925143c7b6b4c0fb7d9a79a771efd4c19cf8396f867a837637c57f411a2
f95767b72c617e017ddb308aa06e4932ae8c532ea17a10dc363e24930f665a82
bcf4e60df76d5d968f644e325af78adad9a7baa6a26b57707832c5c260117b57
3dbfb4b91e7aba0cbfaf784a370c60f58ce8e62d2e6982e2668a6f9b074ba347
c30066702babc07e7d395f4bc3fb433e2bb0138e4605a3ca437f362cd8e6ffe5
841ca46fc64ba5af87800bfe0683a77bdcebba2e2c6083f5897fee0caf2f8f51
c129558fb6372a852e05f0468f7c32704cf434d203cd0dd6e08dccc66a2cf6a5
78d3d62f74f8e477c640989e57f0ac942aeec841134efc3b2e86aaf065af0345
73413d76fd95629c758fc6ccd7fc0cc09ad7f5e9a4359593b75443918eb63dd0
08e86dae482fb926eaab42d4e4001e2dd860a4b5f45107dae767339181002702
8e906a7b8f34569916f0880b3d63a436b6a9b3306325656337f8352638ad658f
5801e5cffc948676659eff89e3b1f5810b9abb953209eeebf5efea56f83e4e82
5f282624d830fcc50becfaafb9d0d3489b440f7d02c9f2f3ded5167db96b3cc6
0a7bde1f8324f01ea1f0a45802c25afd501759a395ffb2141bd3f41a52d30a3c
950f2b93ff24adb0b7e779fc7e066b9c56401f9cc6224c12472aeaa85ed28163
d7ec3c6246d4b3c24b354a793a954bf2edc98f9e4c4d89756997b418b8df82cb
9135808f0c2df788e5e83c81599445269137cc1bc5bdf597ee2bfe4852415260
4248bc1086b65cfe6e7c0a94c0d0807822f7d20a57d4ac57796cdf8447ab17dc
63bbc6651edaaf4462e2cbdf439cdfb62c27652cd338bb4b2e37940e1a44c290
bed6cd2f62b7362f029b9c42c9b998e2267efc17ea23010ca7c7d64d655be0a2
873217369e6566903c117589a8cec4ac8c5ca29e32766a901a3224e97fb043b3
1698299d35402ff10a4d0e0a0e340cab4dd21e34002f9fca19772f11dd3684e3
9834e62a77a7a1322d28d229a6762f3541db6fedaa715fb6d17c5fdd067e4cb1
401ea30b06b2850078d8264fb6d027146d26c13a2806172aec6c2d083d38c0ff
2fa1676a415ec37706dd67737dc6bf7fd6ba102be5eb1054a89acf59b6ca01e8
6ef3a7a50f15f6c1d9e90b295b76acd868133762545559d7cb77ab8318b5c6d3
cf0190c77e88f219fc351e49e221fcc7d0bcf05740964c389c44329169bbef5e
cb91ecb5eb57e3bcee1c9b6b7dc68c7cc79847fa6a0ccba6168da5afdfa4e24e
1ad64b931f3abbcf7ed1a79c7867aebd0179d6e0e24cb8c859d6a1b514d3c081
4f42890fb113db469939b724a3fbc88b7f5c1201d48072f0115674fe18298f6a
164268c10c0de3cbd4c150f91dcbd72d7dc68a2a54ae5956f8317d35c1eeed0a
6292459592b985446121dde3be0532c08bd1449063627372f19285b9083c3b8e
5bbe03708ca9e4b9d7d1cd59ae9e6477aaeea2701d1e70015881a455987311fc
cb2c5a4b7ad2db69e59961f33ec9e69cebb389d4b4d98d86e9228fd0a2e6d07c
204d327838ac60dd8dace1eb0d0dfd8160b10a6682b8bc42b89520ebbc4b8d61
7618aa59c7bfb0ce8f34029d146152da758b194ab4c654bda595980e60dd4fd2
7709a65e2c813ff516e421957172b69e5ebcdb7600a3736107f554960baf775f
b32d71c0a77fb5e3dfc773add2695a2c42163ade4b621a420824a44719a01d21
5b6658e2192187e7891dec513c45f119b85269d1d7f6e0724441bc405a2d66fa
17e82d2455aa748fa46636d3200f7fa0ee4124cd3c7eb2355299ff0d498405b1
04454c3764cdf2e67a699d59e59828bd24cb6130de0465a77cb33acfa150e702
8aec127fd98edce2b3aee2b92121745171f7efd737b573a56977b992ffed4ee5
c2ccfe6af4d3757631d03fd667e3b2124a2ff6ccdd88fe89a184d8cd50239c42
12faf95c55adaef9bcb977e268265fce5e23fe3fb9fb494a2fc9d04bdfcb35bb
00948bd6a64a8eba8a96569c76eeedd424f22a0f82677718dcdb6acee1d6c3c0
9cb22b5d6b6fd4eecf3279afd894805b9d5b2587ed0e66eac6ad8dfeab036891
5d72dddb1a4e9cae7428d66b1f972fe328e388709b7914f0fefa9765980de849
c42045d2fd5e1baed4a1572280ecf5cc7cfbbda5e788cdd25bf8a6ca6789376f
c1e36669d309dbbd93b74a891210a63053e1c0f6b9ba07016263a81809df1e29
d139ebd3acfc38ff117cef14682206c911fd465b93fb2e5a9cf3163c5d31ed10
f989d3b5f892bfa4ee601285dfa74ca27fabde9d0613089e047ef76db224312c
a2e9c4dfafdeb2c7edf9148ae88cac7b0eb821a444e308a96b601836ac8b87e9
ae5f5977cc21ee1f9fee8e72c1a9a99a8c611cc95ef516c1f65aea793c080f98
9d017c0d239943cae7be36f34a9d23a11eef0491cacfd834587400996ea8e8b8
3eb4a08003679ab917d7e5b46eaf474e3be329b70481c0ab226027964e4cd03a
2c3e99c3b50b495ce288ae053aaa9142f5e0a285710c587d824b88db692cb023
f9123c09c4a961ba44d29979c2e3e59f1963f502eb454157eaa9291e91ad1fe2
f9be6517e28b4b7afaaec898c464a15c074c28388d3290d3174cc6c6556f0c43
cf6b7d533f467737fbae5bd50eb904f76e180316d957d39d8d69180a7c2347fe
1d26ab6fe67841a58e3fd4d4650d856fa3a25ccf05aa8966152246d73cf9ae6d
fda767b730c278fb28eeb90446c08b472125e7352ed3c714054163f91ed7419e
c0466ad5f03d74e6dfc8244706d3ecb2aa64bca0deaf4701819790ddb06a7e89
45772a55b0e5c00cce3446171fec187782fbaf7420c0070570f39329012c6b52
cbd8415f8d8f4537f4535301ad036868a175aba1ff116cc8d17d3f04ec54622d
55f46ba93d3985705a25d781f71a702b759de63868c057189244ba0786fdcab4
7d4a10d419c02130e35c2029b1f72d7360a59f4973c962b66935f2bcadfcf831
fa26e17c6069661b353729ffb8c45ef495b3695ed415097f405415dec2afbd4d
f4e91d943c29835fd377e02ac8e0f81fcb5f423a003382b3138ed3d7bb43c99a
eb78ac09275d6bcb3087093a31dfcb7e46806b350b960503b1d99edcb3f4dddf
b2f2de83e725a838dc7f4e593ba8021f2171f06e2e4a1f40de5c67a20d8022c2
10c6d0440a8074d478a127c1519735680dbd9819eaeca023818868b301ba1185
151cff4b20c0e177918bba4bc5797af7cfa5b5e1672483634060f6a94883388d
48f409fedc6c2af11dcf64fb3ec8b8550ce432b55cfb8815d21f485135b4e4bd
6dc5246ede6b52602f74c9dc55cadab759ef5f5509cd46317f060ffe62223cc8
f7420f5b8384205a26f6ec7cf05052fba555446a8f2e6da38b660ae4eb352ffe
d6b0fcdd7f79f1c53882bc1dc3dffd6fb25630e0c692a0e5f399fe826633911b
9639ce4eb1d550caace69e7531ee3e6a2954ad7fd6d87f3dcd11c7680c1806a1
653c2b19f9a7abdf5c8110ade187a0d31cd2a97bc2ce53acdfe31ee52c685e25
93bbb87f7f8398aa3bbc452877b90e6323c3cf857d4026e01f88562f69571cb9
b8d24ab6e7678981d3518bd034e30db861b25c37138f8d2466321885cc2f91f2
af347ee477bffec3011a0af3c07d1fdd85d131fca85f6671adae5c339414399c
5ad7799e83c5cf6ea4e511bc1108cec643d2a54d683b1722fadbc367d35049ca
ab24d4213aea6d82be34702ff4b48478e5ffcdafcc0338c8f4269b46a79c6b3b
96265608f49f6ceaa73fbefdf7a8da7dc8d77bcb9e3159326bc82bc64e547e42
c749bc3edae1c6f4671e58e94b7ee7af00f6e8539c2b8feef863415c5e6a4a20
c677e81fd60c67057f2a4400b4dbcc9bbd1dfce679eb237940a04d511329b6c4
d7d98d02b95172f76f94cf3321a87e01cf477b6116416f55631335902b302835
504d171dc84bc0ee3ddc75285ba338ed89e0f1b47ba874fe200419fb9b870282
481620fbc4f057ca7ae8d950ed38e4fa435e56aacb9abfc77e868a2df9c803fe
1bb878e7b92bddfabf99b618f4a95b5848e2ccbfee7d5d4944ab17049c9fb7c8
c19a71c57ebab50c8ff10fdd9d2af0832ae2bcfad858f269826cc8f014b8878e
ce07a02fbd11854f4bc15d07706db941ca31147dca6e1a2619c87cddb4c316ad
f06e5787930a84ba0d1cafdcb7b544e18abcf459a76190da0a44a75cdedda5c0
e7cbc4c3c492cc2887c3cf8a797f04ab302c1a84c282e6f711adc743311d9ccd
fc24459d1e655f2425f0ef5d05f2b601a682e575a15cd794d3563571f8d92e81
a6ea684835de435295b1ce01490a5084af07cb7da7c58833e24ef7818a5f939b
e8e8bdef728fe3882a88c3aede2f744b733d8b8f663ee1fcee18ef8b5400a811
6dcfbe37dcc9b00db2c12fa28102359e6dc5dc89f73498c2fd593c4a20d0377a
234eb34b7d60f9f4c33c996695b768c54914ad20aad03408f44be9af1e9e3566
1f6cf4b3320093e7ec8081a9292e7ba2a2e3890edc6080de940ecc542438edc5
c9a1af4754d6f4061d03b3684bfd9098d405cf91470b3e033b7587184b2206b2
8d9d004b39acd1dec9446ecb7e9c68298d9651ad645bff2bf293e0587fb6e6c1
b63a8239589a32e50b554ec81f15eb871a1b9929583105d40b5ef39e7304e8fa
fe03b1008e9f468c96884b6575909a9050c53c0fb3c2e527f0c7b7de19f77208
c1bc1b16ea42c3f75a11d6721bc53b72844f38e029f71842fe192a1872bce52e
e7452d3cd51172bcae48d6131b7767df4dd4e5c6be2f601c5edf243907bc9432
953e84b490c7498a3394b1c21a6af96d9566cf93a251ac5753f44b80ed8f1cbf
8f7dded3447ee6fc8e6bb16011e810d9ce3806a6b5fc2cb8aa4e21fd35c61c56
577a07c26148b9dd3559be96c4c7f8740b7b90a4cec380c48edd6ef99e9d45b3
e9d45b9ad728d03a3cc067c372bfe95db20111e067ffdd8c6d2ad63337a247d8
48b026c7c3247424917c5c9f7925b6c5d8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 5 /diamondmath put
dup 15 /bullet put
dup 17 /equivalence put
dup 32 /arrowleft put
dup 54 /negationslash put
dup 56 /universal put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueXX 5000820 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddd32f3a54a912a443fcd44f7c3a6fe3956b0
aa1e784aaec6fce08dae0c76da9d0a3eba57b98a6233d9e9f0c3f00fcc6b2c6a
9ba23af389e6dfff4efec3de05d6276c6be417703ce508377f25960ef4ed83b4
9b01b873f3a639ce00f356229b6477a081933fef3bb80e2b9dffa7f75567b1fa
4d739b772f8d674e567534c6c5bbf1cf615372be20b18472f7aa58be8c216dbd
df81cc0a86b6d8318ca68fe22c8af13b54d7576fe4ca5a7af9005ea5cc4edb79
c0ab668e4fec4b7f5a9eb5f0e4c088cd818ecc4feb4b40ec8bd2981bf2336074
b64c43046fe6e8a202c241f339425066bbc9f56c37232c6359508024c00c193a
8f8f194f15a5c80a9ed16a36528227e542122950522c9069ae9f64c1ba01f6f4
06bb2a3cdc261c8689fa38aa0c142f76a8cde4d4b6fef09438a32f83e8b238b7
e250f6dcf3114434b4aac508897ccc85380dec697a6a0a3dc78282ae82613bf1
365f9e17e1a3f5d60d0e309375d5cd067d68fadd6f61b50c832d1da232fa2c77
b58a5efd843b9b63445cd78eedf6197a63856875e403d1250b73db580f2f2e3c
394972535d11728f53a48a8f808c1b4c3190c6685dcb4717464f092156e2420a
3d69f2c068961f8f0dfc219b7bd0ce29ab0ab6cec2b9f7defb9c8bc9504e11c2
e1d0eb08c3be26aed272f8d9620ea99320609145e619d6a315b734582be40a15
8b2fd2507ddbbcd5af3ce18fdc4feab4e8995f339389c1f10730a269cf13dd2c
1fab556f9ea3186eb818f1d35f23eb0693437045352c3552c45112cff31b2a8f
6c149ceda538a22fd639bda9242a9c189f518a8646d93d558390ad59ad3049f5
07f74e237d2fed79c63850b5445425903b272ddb51a0e23c4c270c36c34c83fb
e6b371b49b88eb5a18e234013df5d95c6cb973f4e49c07451247b095665c01a4
3315f268b4901b839917db96b1461c65056937d61fc1eb97dd75f767042bed25
a907db10fd47d0c199543ea5ff8cea8df423da6bf6c9820cc81789173ad9026e
802cb6682e6b6cec2db2062ef268fb7a3a6b28c48b4bad26fba5ff2fc1c89a66
55cb7c2fdf5a6657a428b97b99bdeb0ac4dc057f786e0baaa9da0e3d64c3a864
e057d45de304063d52882db6d771aedd26f0f3995ff1ae5d0f4f4c3cc74e1489
ad6ef3176ae68e16f8f36ffcd833c218bcceb32d3576c6e199da40d44ea54215
dea49c63577bdf4d00bf54c5303d7cf8351201567337589eef3cf2f1ee1cf50e
9499b1d7173c8e2d31568f6f55a68c1f758ae300d09de8f9ce9ae62c60289e16
52ea3ab64ebe998a7ccbe8f2eb104eb2c931d24dfd65c194862f0dbcae32c264
7eb38725ed42798ffbf178ca38a3ddd49fb5d1956ee5cd3a37dfb917df916287
63cf5db1c1620769dfa032dc1da49b4deb3f3cdba1ed161b54562506e5f24879
454c13031a13411f56b36e0bac51a44c856ecbee9a4b6cd19236ca077097a572
4867236fa4f8b5cff7ef133abe2dc9d6a00596e81951cbe0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (dsn03_pulse.dvi)
@start /Fa 145[ 50 30[ 63 17[ 42 61[{ } 3 83.022 /CMMI10
rf /Fb 144[ 42 2[ 23 4[ 42 52[ 42 42 5[ 65 1[ 32 32 29[ 60
8[ 69 1[{ } 10 83.022 /CMR10 rf /Fc 200[ 35 1[ 35 2[ 35
35 47[ 59 1[{ } 5 66.4176 /CMR8 rf /Fd 255[ 55{ } 1 66.4176
/CMSY8 rf /Fe 143[ 32 112[{ } 1 49.8132 /CMMI6 rf /Ff
243[ 43 12[{ } 1 74.7198 /CMMI9 rf /Fg 205[ 68 50[{ } 1
90.9091 /LASY10 rf /Fh 144[ 45 2[ 25 4[ 45 9[ 25 1[ 25
29[ 71 10[ 45 45 5[ 71 1[ 35 35 29[ 66 8[ 76 1[{ } 13
90.9091 /CMR10 rf /Fi 135[ 40 51 1[ 41 25 33 1[ 32 36
34 43 62 21 37 29 24 41 34 1[ 33 36 31 1[ 37 29[ 50 67[{ } 21
66.4176 /CMMI8 rf /Fj 136[ 65 1[ 52 33 43 41 1[ 46 44
55 1[ 27 47 37 31 52 43 45 42 47 39 1[ 48 9[ 86 1[ 62
53 1[ 69 1[ 58 1[ 73 1[ 62 2[ 40 3[ 67 1[ 65 1[ 68 5[ 25
46[ 51 12[{ } 32 90.9091 /CMMI10 rf
%DVIPSBitmapFont: Fk ecbx1095 10.95 52
/Fk 52 123 df<1407140F143E147C14F8EB01F01303EB07E0EB0FC0EB1F80A2EB3F005B
137E13FE485AA2485AA212075B120FA25B121FA25B123FA4127F5BA512FFB0127FA57F12
3FA4121F7FA2120F7FA212077F1203A26C7EA26C7E137E137F7FEB1F80A2EB0FC0EB07E0
EB03F01301EB00F8147C143E140F1407185A77C328> 40 D<12E07E127C7E7E6C7E7F6C
7E6C7E6C7EA26C7E7F137E137FEB3F80A2EB1FC0A214E0130F14F0A2130714F8A2130314
FCA414FE1301A514FFB014FEA5130314FCA414F81307A214F0130FA214E0131F14C0A2EB
3F80A2EB7F00137E13FE5B485AA2485A485A485A5B48C7FC123E5A12F05A185A7AC328>
I<1606160E161E161CA2163C163816781670A216F016E0150116C015031680A215071600
5D150EA2151E151C153C1538A21578157015F05DA214015D14035D140792C7FCA25C140E
141E141CA2143C143814781470A214F05C13015CA213035C130791C8FC5B130EA2131E13
1C133C1338A21378137013F05BA212015B12035BA2120790C9FC5A120E121E121CA2123C
123812781270A212F05AA2275B7AC334> 47 D<140F5C147F495A130F48B5FCB6FCA213
F7EAFE071200B3B3AA003FB612F8A4253C79BB34> 49 D<903803FF80013F13F890B512
FE00036E7E2607F80F7F260FC00113F048486C7F48C76C7ED87FC06D7E7F486C6D7E7FA2
6F1380A46C5AA2EA1FC00007C7FCC814005DA25E153F5E4B5A5E4B5A4A5B5E4A90C7FC4A
5AEC0FF84A5A5DEC3F804AC8FC14FED901F8EB0780495A495A4948EB0F00495A013EC7FC
5B495C485A90B7FC485D5A5A5A5A5AB7FC5EA3293C7BBB34> I<ECFFE0010F13FC013FEB
FF80D9FF0113E03A01F8007FF0D803E06D7E484880D80FF06D7E13FC486C80A47F5BA212
0F6C485CD803F0133FC85BA24B5A5E4B5A4A5B4A90C7FCEC0FFC903807FFF05D15FE9039
0001FF809138007FE0ED3FF86F7E826F7E17806F13C0A3D8078015E0EA1FE0EA7FF8A248
7EA417C0A2495B007F1680491500D83FC05B001F4A5AD80FF0495A3A07FE01FFF06CB65A
C61580011F01FCC7FC010113C02B3D7CBB34> I<ED01F0A215031507150F151FA2153F15
7F15FFA25C5C5CEC0FBF153F141E143C147C147814F0EB01E0130314C0EB0780EB0F005B
133E133C5B5B12015B485A485A120F48C7FC121E5A5A12F8B812F8A4C8387FF000AB49B6
12F8A42D3C7DBB34> I<000E1518D80FC014F801FC131F90B65AA25E5E5E93C7FC15FC5D
15E092C8FC14F80180C9FCA9903881FFC0018F13F801BF13FE9039FF01FF809039F8007F
E001E06D7E4980496D7E6CC7FCC87F150F82A31780A2120FEA3FC0487E487EA41700A25B
6C48495A5B007CC75B6C143F003F5D6C6C495AD80FE0495A2607FC075B0001B6C7FC6C14
FC013F13F0010790C8FC293D7BBB34> I<EC03FE91383FFFC091B512F0903903FE01F890
390FF8007CD93FE07F90397FC001FE4948487E485C4813005B1207120F5B001F6E5A6F5A
003F91C8FCA25B127FA3EC3FFC00FF49B47E01F9B57E9039FBC03FF09138800FF8D9FF00
7F6F7E49806F13805B17C0A34915E0A5127FA5123FA217C0121F7F000F16805D6C6C1500
00035D6D495A6C6D485A6C9038E07FF0013FB55A010F1480010349C7FC9038007FE02B3D
7CBB34> I<121E121F13F090B712F0A35A17E017C0178017005EA2485D007CC7EA01F84B
5A00784A5A5E150F4B5A484AC7FC157E5DC85A14014A5A4A5AA24A5A141F5D143FA24AC8
FCA25CA2495AA21303A313075CA2130FA5131FAA6D5A6D5A6D5A2C3F7ABD34> I<EA0780
EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0780C7FCACEA0780EA1FE0EA3F
F0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA07800E2879A71D> 58
D<16F84B7EA24B7EA34B7EA24B7FA34B7FA24B7FA34B7F157D03FD7F15F8A2020180EDF0
7F020380EDE03FA2DA07C07F82020F814B7E021F811500824A81023E7F027E81147C8202
FC814A7F0101825C91B7FC4982A2498202C0C7123F83010F834A80011F8391C8FC834983
013E81017E83137C83D801FE83B500FC49B612F8A4453F7CBE4E> 65
D<B812F8EFFF8018F018FC26003FFCC7EA3FFEEF0FFF7113807113C019E08319F0A27113
F8A74D13F0A34D13E019C04D13804D13004D5AEFFFF891B712E095C7FC18F002FCC7EA3F
FE943807FF807113C07113E07113F0F07FF819FCA2F03FFEA219FFA819FEA2187F19FCF0
FFF85F4D13F04D13E0053F13C0BA120018FC18F095C7FC403E7DBD4A> I<922607FF8013
1C92B500F8133C020702FE137C023F9138FF80FC91B538003FE1010301F0EB07F74901C0
EB01FF011F90C8FCD93FFC153F4948151F495A4849150F481707484915035C48170191C9
FC481700A2485AA2197C127FA2491700A212FFAC127FA27F193C123FA36C7E197C6C1878
806C18F86E16F06C6D15016CEF03E06C6DED07C06D6C150FD93FFEED1F806D6CED3F0001
0701C014FE6D01F0EB03F8010001FFEB1FF0023F90B512C0020792C7FC020014F8030713
803E407ABE4B> I<B812F8EFFF8018F018FC26003FFEC76CB4FC050F13C005037F05007F
F03FF8727E727E85721380841AC0A27213E0A21AF084A21AF8A41AFCAD1AF8A41AF0A260
1AE0A24E13C0A24E13801A00604E5A4E5AF0FFF84D13E0050F5B057F5BB948C7FC18F818
C005F8C8FC463E7DBD50> I<B912F8A426007FFCC713FC171F170717011700A2187C187E
183EA2181EA4041E131F180FA31800A2163EA2167E16FE150391B5FCA4ECFC031500167E
163EA2161EA693C8FCAEB712C0A4383E7CBD41> 70 D<922607FFC0130E92B500F8131E
020702FF133E023FEDC07E91B539801FE0FE499039F80003FB010701C0EB00FF011F90C8
127F4948153F4948151FD9FFF0150F481707484915034A1501485B48170091CAFC48187E
A2485AA2193E127FA24994C7FCA212FFAB0407B612FC127FA27F93C7383FFE00123FA36C
7EA26C7FA26C7F7E806C7F6C7F6D6C157F6D7E6D6C15FF010701C05B010101F85B6D9039
FF801FF1023F90B5EAC07E0207ED001E020002FC1306030701C090C7FC46407ABE52> I<
B71280A426003FFEC7FCB3B3B2B71280A4213E7DBD27> 73 D<B600FE91387FFFFEA426
007FFCC83803FE00F001F84E5A4E5AF01F804EC7FC187E604D5AEF07F0EF0FC04D5A4DC8
FC177E5FEE03F04C5A4C5A4C5A4CC9FC16FF5D4B7F4B7F4B7F153F4B7F92B57EDAFDF97F
ECFFF04B6C7E03807F4B6C7F4A7F4A6D7F84707F82707F84707F177F717E8583717F8571
7F83717F85717F187FF1FF80B600FE011FB6FCA4483E7CBD51> 75
D<B712C0A426007FFCC9FCB3AF1878A418F0A41701A31703A2EF07E0A2170F171F173F17
FF1603161FB912C0A4353E7CBD3E> I<B500FE033FB5FC8081A2C66C6D9138003F006F15
1E81017B7F01797F8113786E7E6E7F6E7F6E7F82806E7F6E7F6E7F6F7E6F7F83816F7F6F
7F6F7F6F7F8381707E7013807013C07013E07013F018F8827013FC7013FEEF7FFF71139E
19DE7113FE8383838383A2187F183F181F180F1807A21803180101FC1600B500FC167E19
3E191EA2483E7CBD51> 78 D<ED3FFE0203B512E0021F14FC913AFFF007FF8049D98000
7F010790C7EA7FF0D90FFCEC1FF8D93FF8EC0FFE49486E7E49486E7F48496E7FA248496E
7F48844890C96C7EA2488449163FA2003F84A34848707EA400FF1980AD007F1900A26D5E
A2003F60A36C6C4C5AA26C606E15FF6C606C6D4A5B6E5C6C606C6D4A5B6D6C4A90C7FC6D
6C4A5A6DB4EC7FFC01079039C001FFF06DD9F0075B010090B61280021F02FCC8FC020714
F09126003FFEC9FC41407ABE4E> I<B812F017FF18E018F828003FFE00017F9338003FFE
94380FFF80837113C019E0A27113F0A319F8A719F0A34D13E0A219C04D13804D1300EF3F
FE4CB45A91B712F018C005FCC7FC4ACAFCB3A6B77EA43D3E7DBD47> I<ED3FFE0203B512
E0021F14FC913AFFF007FF8049D9C0017F010790C7EA7FF0D90FFCEC1FF8D93FF8EC0FFE
49486E7E49486E7F48844A8048496E7F4884488491C9127F4884A249163F003F84A3007F
844982A300FF1980AD007F1900A36D5E003F60A3001F606D167F6C60ED07F06C9026801F
FC495A6C4A6C5C9139C07C1F016C9027E07007835B6C9126F003C35B90287FF0E001E790
C7FCD93FF8ECEFFED91FFC6DB45A902607FFF014F06D4A5B0100D9FC071380021FB548C7
12800207EE01C09139003FFE7F92C7138094383FC003F0F01F95B5FCA2711480A31A0083
A2715B61715B715B715BF03F8042517ABE4E> I<903A01FF8001C0011FEBF803017FEBFE
0748B6128F489038007FDFD807F8EB0FFF4848130348487F4848EB007F163F127F49141F
160F12FF1607A27FA26D1403A27F01FC91C7FC13FF6C13F8ECFF8015FC6CECFF806C15E0
16F86C816C816C816C16806C6C15C0131F010715E0EB007F020314F0EC001F1503030013
F8167F163F12F0161FA2160FA27EA217F07E7EEE1FE07E6DEC3FC013E06DEC7F8001FE90
3801FF003AFEFFE007FED8FC3FB512F8D8F80F5CD8F003148027E0001FFCC7FC2D407ABE
3A> 83 D<003FB912F8A4903BFC007FFC007F01E0160FD87F80EE03FC90C71501007E17
00A2007C187CA20078183CA548181EA5C81600B3B1011FB712F0A43F3D7CBC48> I<B76C
90B61280A426003FFEC96CC7FC193EB3B3A5011F5FA2806D17FC616D6D1401616D6D4A5A
6D16076D6DEC1FC0DA7FF84A5ADA3FFE49B4C8FC913A0FFFC00FFC020390B55A020015E0
031F1480030101F8C9FC493F7DBD50> I<007FB912F8BA12FCA46C18F83E06776851> 95
D<903807FF80013F13F048B512FC3903FC03FF2607E00013C0D80FF86D7E001F6E7E7F6F
7EA26F7EA26C5A6C5AEA01C0C8FCA3EC03FF49B5FC130F017F138F3901FFF00F00071380
481300EA1FFC485A127F5B12FF5BA3151FA26D133F127F6D49B4FC273FFC01F713FC391F
FE07E30007B5128100019038FE007F26001FF890C7FC2E2B7DA932> 97
D<13FFB5FCA412077EB0ED7FE0913807FFFC021F13FFDA7F0013C002F8EB3FF04A6D7E4A
6D7E02806D7E8391C77E1880A218C082A318E0AA18C0A35E1880A24C13006E5C6E130F6E
5CD9FDF0495AD9F8F8EB7FE0903AF07F01FFC0D9E01FB5C7FCD9C00713F8C813C033407D
BE3A> I<EC7FF00103B5FC011F14C090397FE01FE09039FF8003F0489038000FF8484814
FC0007141F485A121F5B123FED0FF8007FEC07F049EB01C092C7FC12FFAB127FA27FA200
3F151E7F001F153E000F153C6D147C6C6C14F86C90388001F0C69038C003E090397FF00F
C0011FB51200010713FC9038007FE0272B7DA92E> I<EE07F8ED07FFA4ED003F161FB0EC
7FE0903803FFFC011F13FF90397FF00FDF9039FFC003FF000390C7FC4848147F000F153F
49141F121F485AA2127F5BA312FFAA127FA37F123FA2121F6D143F000F157F6C6C14FF6C
6C497F6CD98007EBFFE03A007FE01F9F90391FFFFE1F010713F89026007FC0EBE0003340
7DBE3A> I<ECFFE0010713FC013F13FFD97FE013803A01FF803FC0489038001FE04848EB
0FF0484814F8ED07FC485A003FEC03FEA3485A16FFA200FF80A390B7FCA301F0C8FCA512
7FA36C7E160F121F6D141F000F151E6C6C143E0003157C6C6C14F86C9038C003F090397F
F01FE0011FB512C00107EBFE009038007FF0282B7DA92F> I<EC07FCEC7FFF49B512C090
3907FE1FE090381FF83F90393FF07FF0EB7FE0A2EBFFC0A2481380ED3FE0ED0F8092C7FC
ABB612E0A400010180C7FCB3AE007FEBFF80A424407DBF20> I<903A03FF8003F0013F90
38F81FFC90B538FE7FFE0003903801FFFC3A07FC007FE1000F15E04848EB3FF0003FEDF8
7C49011F1300A2007F81A7003F5DA26D133F001F5D6C6C495A00075D9039FF01FF80DAFF
FEC7FCD80F3F13F801031380001ECAFCA2121FA37F7F90B6FC6C15F016FC6C15FF17806C
16C017E0120F271FC0000113F04848EB001F48C8EA0FF8160712FE1603A46C15076C16F0
6D140F6C6CEC1FE06C6CEC3FC0D80FF8ECFF803B03FF800FFE00C690B512F8011F14C001
0101FCC7FC2F3D7DA834> I<13FFB5FCA412077EB0ED3FF0EDFFFE02036D7EDA0FC07F91
391E007FE04A6D7E5C5C4A6D7E5CA25CA391C7FCB3A5B5D8FC07B512E0A4333F7CBE3A>
I<EA01F8487E487E487E481380A66C13006C5A6C5A6C5AC8FCA913FFB5FCA412077EB3AD
B512F8A415407CBF1D> I<13FFB5FCA412077EB1923803FFFEA4030013804CC7FC4B5AED
03F04B5AED1FC04B5A037EC8FC5DEC03F8EC07E04A7E4A7EEC7FFC14FF818102E77F0283
7F1401496C7F826F7E6F7E151F6F7E826F7F6F7F816F7F83B5D8F807EBFFC0A4323F7DBE
37> 107 D<13FFB5FCA412077EB3B3B1B512FCA4163F7CBE1D> I<D801FED93FF049B47E
00FFDAFFFE010713F002039026FF801F13FCDA0FC09039C07E07FE913C1E007FE0F003FF
00074990273FF1E0011380000349ECF3C04AECF7806D486DB4C713C04A5CA24A5CA391C7
5BB3A5B5D8FC07B5D8E03F13FFA450297CA857> I<D801FEEB3FF000FFECFFFE02036D7E
DA0FC07F91391E007FE00007496D7E00035B5C6D486D7E5CA25CA391C7FCB3A5B5D8FC07
B512E0A433297CA83A> I<EC7FF0903803FFFE011FEBFFC090397FE03FF09039FF800FF8
48496C7E48486D7E48486D7E48486D1380001F16C0A2003F16E049147F007F16F0A400FF
16F8AA007F16F0A46C6CECFFE0A2001F16C0000F16806D5B6C6C4913006C6C495A6C6D48
5A3A007FE03FF0011FB512C0010791C7FC9038007FF02D2B7DA934> I<01FFEB7FE0B538
07FFFC021F13FFDA7F0113C09139F8007FF00007496D7E6C496D7E02806D7E8391C77E18
808218C0A38218E0AA18C05EA34C1380A218006E495A6E131F6E5C6E495A6EEBFFE0DA7F
035B021FB5C7FC020713F8020013C092C9FCADB512FCA4333B7DA83A> I<3901FE01FC00
FF903807FF804A13E091383F1FF0143C00079038783FF8000313F014E013FF14C0ED1FF0
9138800FE0ED038092C7FCA291C8FCB3A4B6FCA425297DA82B> 114
D<90381FF80E48B5123E000714FE380FE007381F800148C7FC007E147E007C143E12FC15
1EA27E7E6D90C7FC13E013FF6C13FCECFF806C14E06C14F86C80000380C680133F010314
80EB000F020113C000F0EB007F153F6C141FA2150F7EA26C1580151F6C15006D5B01E013
7E9038F803FC00FCB512F0D8F03F13C026E007FEC7FC222B7DA929> I<EB0780A5130FA4
131FA3133F137FA213FF5A1207001FEBFFFCB6FCA30001EB8000B3A2151EA96C143C14C0
A290387FE07890383FF0F090381FFFE0010713C0010013001F3B7EB928> I<01FFEC07F8
B5EB07FFA40007EC003F6C151FB3A6163FA3167F6C15FFA26E487F6C913907DFFFE09039
7FE01F9F90391FFFFE1F010713F8010001E0EBE000332A7CA83A> I<B500F890381FFFC0
A400030180903803F8006CED01E06E13036C5E80017F4A5A80160F013F92C7FC6E5B011F
141E6E133E010F143C6E137C010714786E13F86D5C15816D5C15C16DEBC3C015E315E702
7F5B15FF6E90C8FCA26E5AA26E5AA26E5AA26E5AA26E5A32287EA737> I<B53CF83FFFF8
01FFFCA4000390C7903980001F80F10F006E017F5C6C70131E16FF6C6D6E5BA26E48157C
017F6F13785DD93FF0D9CFF85BA29126F807871301011F03FC5B150FD90FFC903903FE03
C0A29126FE1E011307010703FF5B153E902703FF3C00018FC7FCA203F8EB7F9F6D16DEA2
6D49EB3FFCA24B131F027F5DA26E486D5AA24B1307021F5DA26EC76C5A46287EA74B> I<
B5D8F801B5FCA400019039C0003FC06C93C7FC6D6C137E6E137C6D6C5B6D6C485A6D6C48
5A6D6C485A6D495A6D139F03FFC8FC6D5B6E5A6E5A141F6E7E81814A7F4A7F147E91387C
7FE002F87F49486C7E49486C7E49486C7E90380F8007011F6D7ED93F0080017E6D7F017C
6D7FD801FC6E7EB5D88003B512C0A432287EA737> I<B500F890381FFFC0A40003018090
3803F8006CED01E06E13036C5E80017F4A5A80160F013F92C7FC6E5B011F141E6E133E01
0F143C6E137C010714786E13F86D5C15816D5C15C16DEBC3C015E315E7027F5B15FF6E90
C8FCA26E5AA26E5AA26E5AA26E5AA26E5AA214035D14075D000C130F003F91C9FC486C5A
38FFC01E143E143C5C14F8387F81F0495A383E0FC06CB45A6C48CAFCEA03F8323B7EA737
> I<003FB612FCA39039F0003FF801C0EB7FF090C712FF003E4913E016C0484913805C4A
130000785C4A5A143F4A5A5DC7485A5B495B5D4990C7FC5B4948133C5C495A137F494813
785C485B5A484913F891C7FC48481301001F14034848130749EB0FF04848137FB7FCA326
287DA72E> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl ecti0900 9 21
/Fl 21 122 df<B51280A46C1300110579911B> 45 D<EC0FE0EC3FF8ECF03E903803C0
1F903907800F80EB0F00011EEB07C0131C5BD978C013E0EB70E0EBF06013E0120113C0EC
E00F000301C013C013801381EC801F01831480903887003F018E1400D801FC137ED800F0
5B90380001F84A5A4A5A4A5A4AC7FC147E14F8EB03E0EB0FC049C8FC133E13784848EB03
80485A4913074848140048C75A121E001C141E003F143E01F85B397DFF80F838781FFF48
6C5BD8E0035B6D1380D9007EC7FC23347AB127> 50 D<EC07F0EC3FFCECF81E903803E0
0F903907800780D90F0013C0011E13035B013814E0EB7980EB71C00170130701F014C013
E0A201E1130FD9E380138090387F001F013C140090C7123E5D5D4A5AEC1FE0903807FF80
4AC7FC6D7E90380007C06E7EA26E7EA514031218127EA21407485C5A00E0495AA26C495A
007049C7FC147E00785B383C01F0381E07E03807FF80D801FCC8FC233479B127> I<EB03
F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0A2381F8007
15C0EA3F00A2140F481480127EA2141F00FE14005A1506EC3F07EC3E0F150E147E007C14
1EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C0202278A0
27> 97 D<137EEA0FFE121F5B1200A35BA21201A25BA21203A25BA21207A2EBC3E0EBCF
F8380FDC3EEBF81F497E01E01380EA1FC0138015C013005AA2123EA2007E131F1580127C
A2143F00FC14005AA2147EA25CA2387801F85C495A6C485A495A6C48C7FCEA0FFCEA03F0
1A3578B323> I<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F0073807E0
0F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0A2EC03C0
6CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023> I<ED0FC0EC03FFA2
1680EC001FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8EB0FF8EB3E1DEB7C
0F496C5AEA01F0EA03E000071303D80FC05BA2381F8007A2D83F005BA2140F5A007E5CA2
141F12FE4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01FCD83C03133C393E
07BE38391F0E1E783907FC0FF03901F003C0223578B327> I<EB03F8EB0FFEEB3E0F9038
F807803801F003EA03E0EA07C0120FEA1F801407D83F0013005C007E133EEB03F8387FFF
E04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F00003C133E6C13F8381F
03E03807FF80D801FCC7FC1A2277A023> I<151FED7FC0EDF0E0020113F0EC03E3A2EC07
C316E0EDC1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3D9007EC7FC147CA4
14FC5CA513015CA413035CA413075CA3130FA25CA3131F91C8FCA35B133E1238EA7E3CA2
EAFE7812FC485AEA78E0EA3FC0000FC9FC244582B418> I<EB0180EB07E0A2130FEB07C0
EB038090C7FCABEA01F0EA03FCEA0F1E120E121C123C1238EA783E1270A2137EEAF07CEA
60FCC65AA212015BA212035BA2000713C0EBC1E0000F13C01381A21383EB038013071400
130E131EEA07F8EA01F013337AB118> 105 D<133FEA07FF5A13FEEA007EA3137CA213FC
A213F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2
123EA2127EA2127C1318EAFC1C133CEAF838A21378137012F013F0EAF8E01279EA3FC0EA
0F00103579B314> 108 D<2703C003F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C
7CF00F8F01F03B3C3DE0079E0026383FC001FC7FD97F805B007001005B5E137ED8F0FC90
380FC00100E05FD860F8148012000001021F130360491400A200034A13076049013E130F
F081800007027EEC83C0051F138049017C1403A2000F02FC1407053E130049495CEF1E0E
001F01015D183C010049EB0FF0000E6D48EB03E03A227AA03F> I<3903C007F0390FF01F
FC391E787C1E391C7CF01F393C3DE00F26383FC01380EB7F8000781300EA707EA2D8F0FC
131F00E01500EA60F8120000015C153E5BA20003147E157C4913FCEDF8180007153C0201
133801C013F0A2000F1578EDE070018014F016E0001FECE1C015E390C7EAFF00000E143E
26227AA02B> I<14FCEB07FF90381F07C090383E03E09038FC01F0EA01F83903F000F848
5A5B120F484813FCA248C7FCA214014814F8127EA2140300FE14F05AA2EC07E0A2007CEB
0FC01580141FEC3F006C137E5C381F01F0380F83E03803FF80D800FCC7FC1E2278A027>
I<011E137C90387F81FF9039F3C387C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F800
0313F0018314F814E0EA07871307000313C01200010F130316F01480A2011F130716E014
00A249EB0FC0A2013EEB1F80A2017EEB3F00017F133E5D5D9038FF81F09038FDC3E09038
F8FF80027EC7FC000190C8FCA25BA21203A25BA21207A25BB5FCA325307FA027> I<3903
C00FC0390FF03FF0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814F8D870
7E13701500EAF0FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25BA212
1FA290C8FC120E1E227AA020> 114 D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F
0003131F13C0A2EBE00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E
123800FC133CA3147C00F013784813F0EAF001387803E0383C0F80381FFE00EA03F81822
7AA01F> I<1303EB0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800
F800A21201A25BA21203A25BA21207A25BA2120FA25B1460001F13F014E01300130114C0
1303001E1380EB07005BEA0F1EEA07F8EA01E015307AAE19> I<EA01F0D803FC1307D80F
1E5B000E5C121C123C00385CD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC
00015C5BA2140100035C13E0166002031370EDE0F0D807C014E0A20003EB07E116C09038
E00FC1EC1FC3000190383FE3809038F071E73A007FE0FF0090381F803C24227AA029> I<
01F01338D803FC13FCEA0F1E120E121C123C0038147CEA783E0070143CA2137ED8F07C13
38EA60FCC65A1578000114705BA215F0000314E05BA2EC01C0A2EBC003158014071500EB
E00EA26C6C5A3800F878EB7FE0EB1F801E227AA023> I<13F0D803FC1307D80F1E130F00
0E141F121C123C0038143FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00
0114F85BA21401000314F013E0A2140315E0EA07C0A20003130715C0EBE00F141F000113
3F9038F07F8038007FEFEB1F8FEB001F1500A25C003E133E007E137E147C5C007C5BEA70
01495A38380780D83C1FC7FCEA0FFCEA07F020317AA025> 121 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm ecrm0900 9 51
/Fm 51 122 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D> 27 D<EC1FE0ECFFFC903803F01E90390FC007
80EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F
150FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B> I<14C01301EB0380EB0F00130E5B
133C5B5BA2485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA512
3C123EA3121E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C0
1300124A79B71E> 40 D<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378
137C133C133EA2131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C13
7C137813F85BA2485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E> I<123C12
7EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A126009177A87
15> 44 D<B512F0A514057F921A> I<123C127E12FFA4127E123C08087A8715> I<EB0F
E0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E
1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0
A23903E00F803900F83E00EB7FFCEB0FE01F347DB126> 48 D<13075B5B137FEA07FFB5
FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126> I<EB3FC0EBFFF0000313FC
380F80FF391E007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3
007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A
49C7FC133E133C4913185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0
A31D327CB126> I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07
F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00
EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA4
15FC48130312780070EB07F86C14F0003C130F001FEB1FE0390FE03F800003B51200C613
FCEB1FE01F347DB126> I<EC01C0A214031407A2140F141FA2143F147F146F14CF1301EB
038F140F1307130E130C131C13381330137013E013C0EA0180120313001206120E120C5A
123812305A12E0B71280A3C7380FC000A94A7E0107B51280A321337EB226> I<000C14C0
380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380F
C03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12FEA315F0
140712F8006014E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF8000113E0
38003F801D347CB126> I<14FE903807FF80011F13E090383F00F0017C13703901F801F8
EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F
9038700F809038E007C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4
127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806C
B51200EB3FFCEB0FE01F347DB126> I<1230123C003FB6FCA34814FEA215FC0070C71238
00601430157015E04814C01401EC0380C7EA07001406140E5C141814385CA25CA2495A13
03A3495AA2130FA3131F91C7FCA25BA55BA9131C20347CB126> I<EB0FE0EB7FFC90B5FC
3903F01F803907C007C0390F0003E0000EEB01F0001E1300001C14F8003C1478A3123EA2
003F14F86D13F0EBC001D81FF013E09038F803C0390FFE07803907FF0F006C13DE6C13F8
7EEB3FFE8001F713C0D803E313E0D8078013F0390F007FF8001E131F003EEB07FC003C13
03481301EC007E12F848143EA2151EA37E153C1278007C14787E6C14F0390F8003E03907
F01FC00001B5120038007FFCEB1FE01F347DB126> I<EB0FE0EB7FF8EBFFFE3803F83F39
07E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FE
A5007E1301A2127F7E1403EA1F80000F13073807C00E3803E01C3801F03838007FF09038
1FC0FC90C7FC1401A215F8A215F01403001F14E0383F800715C0140FEC1F809038003F00
001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126> I<123C127E12FFA4127E
123C1200B0123C127E12FFA4127E123C08207A9F15> I<15E0A34A7EA24A7EA34A7EA3EC
0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A24948
6C7EA301066D7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA2
0001821607487ED81FF04A7ED8FFFE49B512E0A333367DB53A> 65
D<B77E16F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF
3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07
F04C5AEE3FC000014AB45AB748C7FC16F8168034337EB23B> 68
D<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C> 73
D<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2EB
C1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED
0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A216031601A2
486C1400D807F81578B500C01438A2171835337EB23A> 78 D<EC07FC91387FFFC09039
01FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E7EA2
48486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0AB6C
17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C
6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0DA07
FCC8FC33377CB43C> I<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC
003E80814880A200788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF
6C14C06C14F0C680013F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0
A21507A37EA26CEC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E001
1F138026C003FEC7FC22377CB42B> 83 D<007FB712FEA390398007F001D87C00EC003E
0078161E0070160EA20060160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330
337DB237> I<B5D8F007B539800FFFF0A3000390C7273FF000011300D801FC6E48EB007C
1A386D140F00001930836D020715706D1860A26E496C14E0013F60A26ED919FC1301011F
60A26ED930FE1303010F95C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2
913BFC01801FC01C01011718A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2
038CEB03F8023F5EA203D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B80020715
7EA24B143E0203153CA24B141C020115184C357FB24F> 87 D<EB7F803803FFF0380F80
FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA
0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1
FF2607FFC013003900FE003C22237DA126> 97 D<EA03F012FFA312071203AEEC3F80EC
FFE09038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16
F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7
FC25357EB32B> I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA
1F80123F90380003E04890C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14
706C6C13E03903F001C03900FC0F8090383FFE00EB07F01D237EA122> I<153FEC0FFFA3
EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A
127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3F
FCD90FE0130026357DB32B> I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007
E0381F800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418
A26C6C1338000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA1
22> I<EB01FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FC
ACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417> I<151F90391FC07F809039
FFF8E3C03901F07FC73907E03F033A0FC01F83809039800F8000001F80EB00074880A66C
5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F
380FFFFEECFFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F
007C15006C143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126> I<EA
03F012FFA312071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA2
5BA25BB3486CEB7F80B538C7FFFCA326347EB32B> I<EA0780EA0FC0EA1FE0A4EA0FC0EA
0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215> I<EB03C0EB07E0
EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA313071303B3B01238127C00FE13E01307
14C0130F007C138038381F00EA1FFCEA07F0144384B217> I<EA03F012FFA312071203AF
913803FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FE
EBFC7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500C313F0A324
347EB329> I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315> I<2703F01F
E013FF00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD8
03FE1470496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041
> I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25B
B3486CEB7F80B538C7FFFCA326217EA02B> I<EB07F0EB3FFE9038FC1F803901F007C039
03C001E000078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E15
00A36C147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07
F021237EA126> I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F
804914C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F8016
0001FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>
I<903807F00390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4FC497F123F
90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800F81EEB
3FF8EB0FE090C7FCAAED7F8091380FFFFCA326307DA029> I<3803E07C38FFE1FF9038E3
8F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E
> I<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA
7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E1500
6C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E> I<1330A51370A313F0A212
01A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB
1FF8EB07E0182F7FAD1E> I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D12
016D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA02B> I<B5EBFFF0
A3D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D1370017E13
60137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA214
6024217E9F29> I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100141C
816C6C017C1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F030F5B
A216C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE6D48
6C5AA36D481378A36D48133034217F9F37> I<B53801FFF8A32603FE0013806C48EB7C00
00001478017E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE6D5A6D5A6D
7E80805B9038039F809038071FC09038060FE0EB0C0790381C03F0496C7E01707FEBF000
000180000FECFF8026FFFC0313FCA326207F9F29> I<3A7FFF807FF8A33A07F8001FC000
03EC0F800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360ECC0E0
010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E0
5CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn ecrm0600 6 10
/Fn 10 58 df<13FF000313C0380781E0380F00F0001E137848133CA248131EA400F813
1FAD0078131EA2007C133E003C133CA26C13786C13F0380781E03803FFC0C6130018227D
A01E> 48 D<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E> I<EA01FC
3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013FCC7FC14
F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600185A5A38
3FFFF85AB512F0A216217CA01E> I<13FF000313C0380F03E0381C00F014F8003E13FC14
7CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00F0147814
7C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFFC0000113
0018227DA01E> I<14E01301A213031307A2130D131D13391331136113E113C1EA018112
03EA07011206120C121C12181230127012E0B6FCA2380001E0A6EB03F0EB3FFFA218227D
A11E> I<00101330381E01F0381FFFE014C01480EBFE00EA1BF00018C7FCA513FE381BFF
80381F03C0381C01E0381800F014F8C71278A2147CA21230127812F8A214784813F80060
13F0387001E01238381E07803807FF00EA01F816227CA01E> I<EB0FC0EB7FF03801F038
3803C0183807803C380F007C121E001C1338003C1300A2127C1278EB7FC038F9FFE038FB
80F038FE0038143C48131EA248131FA41278A36C131EA2001C133C001E13386C13703807
81E03801FFC038007F0018227DA01E> I<1230123C003FB5FCA24813FE14FC3860001C14
3814704813E014C0EA0001EB0380EB07001306130E5BA25BA21378A35BA41201A76C5A18
237CA11E> I<137F3803FFC0380781E0380E00704813380018131C1238A3123C003F1338
381FC078EBE0F0380FF9E03807FF80120114C0000713F0380F0FF8381C03FC383801FE38
70007E141F48130F1407A314060070130E0078130C6C1338001F13F03807FFC0C6130018
227DA01E> I<13FE3803FFC0380781E0380E0070481378003C133848133CA200F8131EA3
141FA40078133FA26C137F121C380F01DF3807FF9F3803FE1EC7FCA2143E143C001C1338
003E13781470003C13E0381801C0381C0780380FFE00EA03F818227DA01E> I
E
%EndDVIPSBitmapFont
/Fo 199[ 51 1[ 0 21[ 91 14[ 71 1[ 45 9[ 45 5[{ } 6 90.9091
/CMSY10 rf
%DVIPSBitmapFont: Fp ecbx1200 12 34
/Fp 34 122 df<B612F8A91D097F9A25> 45 D<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7
EA7FFCEA3FF8EA1FF0EA07C00F0F788E1F> I<EC03C01407141F147FEB03FF133FB6FCA4
13C3EA0003B3B3ADB712FCA5264177C038> 49 D<ECFFE0010F13FE013F6D7E90B612E0
000315F82607FC0313FE3A0FE0007FFFD81F806D138048C7000F13C0488001C015E001F0
7F00FF6E13F07F17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED
1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814
F8D907E014F0495A495A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A4
2D417BC038> I<ECFFF0010713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D
7E81D80FF86D138013FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A
4A5B020F1380902607FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C0
17E0A26F13F0A217F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD8
3F80491380D81FF0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113
E02D427BC038> I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F
80161F82033F80ED3E07037E80157C8203FC804B7E02018115F0820203814B137F020781
5D173F020F814B7F021F8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0
C8FCA20103834A157F0107834A153FA249488284011F8491C97E4984133E017E82B6020F
B612F0A54C457CC455> 65 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023F
EDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948
814948167F4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A349
94C7FC12FFAE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE
0F806C6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D
903AFFF001FF80023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC4
51> 67 D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F72
7F727F727F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B00
6162193F624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC
18F095C9FC4B447CC356> I<BA1280A419C026003FFEC7121F1701EF007F183F181F180F
180719E01803A31801A3EE01E0F000F0A419001603A31607160F167F91B6FCA59138FE00
7F160F16071603A31601A693C9FCAFB712F0A53C447CC346> 70
D<B500FE067FB512806E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079F
A26E6CEE0F1FA26E6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC
03C0A36E6DEC0780A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485A
A26F6D485AA26F6D485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA270
5BA2705BA2705BA2B6057FB6128071C7FCA2173E171C61447CC36A> 77
D<B64BB512FE8181A281D8003F6D91C7EA780081013D7F81133C6E7E6E7F6E7F6E7F6E7F
82806E7F6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F707F707F8482707F
707F717E7113807113C019E0837113F07113F87113FC7113FE19FF847213F884848484A2
8484197F193F191FA2190F1907B61603190119001A78A24F447CC358> I<B9FC18F018FE
727E19E0D8001F90C7000F7F05017F716C7E727E727E721380A21AC084A21AE0A91AC0A2
4E1380A21A00604E5A4E5A4D485A050F5B92B712C096C7FC18FC18C092CBFCB3A7B712E0
A543447DC34D> 80 D<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F0500
7F727E727E727EA28684A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F13
8092B7C8FC18F818E018F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85
A2187F73131F72141EB700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC000713
8050457DC354> 82 D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9
489038801FFF3907FC00014848EB007F4848143F4848140F491407007F15035B16011600
12FF177CA27FA26D153C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C81
6C6F7E6C826C826C6C81011F810107811300020F80140003077FED007F82040F13808282
12F082A282A27EA218007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EB
FFE0486CB65AD8FC1F92C7FCD8F80714FC48C614F0480107138031467AC43E> I<B600FE
017FB691B512FEA526007FFCC8D83FFEC9EA7C006E82013F701778807415F86D705F6F70
14016D705FA26F7014036D64814E6D14076D646F70140F6D041E94C7FCA26F023E6D5C6D
DC3C7F151E81027F037C6D5CF0783F6F70147C023F4B6C1578A26F01016F13F86E4B6C5D
16806E02036F485A4E7E04C0EEE0036E4A486C5DA2DCE00FEDF0076E4B6C5D16F06E4A6F
48C8FC051E7F04F8705A6E4A027F131EA2DCFC7CEDFE3E037F0178023F133C04FE16FF03
3F01F85E4D8004FF17F86F496E5BA36F496E5BA26F604D80A26F90C86C5BA36F486F90C9
FCA26F48167EA30478163C6F457EC374> 87 D<903801FFE0011F13FE017F6D7E48B612
E03A03FE007FF84848EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA4
0203B5FC91B6FC1307013F13F19038FFFC01000313E0481380381FFE00485A5B127F5B12
FF5BA35DA26D5B6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01F
C66CEB8007D90FFCC9FC322F7DAD36> 97 D<EB7FC0B5FCA512037EB1ED0FF892B57E02
C314E002CF14F89139DFC03FFC9139FF000FFE02FCEB03FF4A6D13804A15C04A6D13E05C
EF7FF0A218F8173FA318FCAC18F8A2177F18F0A3EFFFE06E15C06E5B6E491380027C4913
00496C495A903AFC1FC07FFC496CB512F0D9F00314C049C691C7FCC8EA1FF036467DC43E
> I<EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FFC001FF0003495A484948
13805B120F485AA2485A6F1300007F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03
C0A26C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A01
0F14C0010391C7FC9038003FF82A2F7CAD32> I<EE03FEED07FFA5ED001F160FB1EC3FE0
903803FFFC010FEBFF8F013F14CF9039FFF807FF48EBC00148903880007F4890C7123F48
48141F49140F121F485AA3127F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007
157F6C6C91B5FC6CD9C00314FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026007F
C0EBF80036467CC43E> I<EC3FF80103B57E010F14E0013F8090397FF83FF89039FFC007
FC48496C7E48496C7E48486D1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12
FFA290B7FCA401F0C9FCA5127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07
C06C6DEB0F806C01F0EB3F0090397FFE01FE011FB55A010714F0010114C09026001FFEC7
FC2C2F7DAD33> I<EB7FC0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139
C7F03FFC9138CF801F9139DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA5
37457CC43E> 104 D<137C48B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA
007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520> I<EB7FC0B5FCA51203
7EB293387FFFE0A593380FE0004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15
FEECC1FCECC3FE14C7ECDFFF91B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F
7F836F7F816F7F83707E163FB60003B512F8A535457DC43B> 107
D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420> I<90277F8007FEEC0FFCB590
263FFFC090387FFF8092B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D8FC0
0FFE1F801FFC0003D99F009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7EA24A
5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E> I<90397F8007FEB590383FFF
8092B512E0028114F8913987F03FFC91388F801F000390399F000FFE6C139E14BC02F86D
7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E> I<EC1FFC49B512C0010714F0011F14
FC90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE000078248486E7E49140F001F82
A2003F82491407007F82A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C
6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F14F8010114C0902600
1FFCC8FC312F7DAD38> I<90397FC00FF8B590B57E02C314E002CF14F89139DFC03FFC91
39FF001FFE000301FCEB07FF6C496D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF3FFC
ACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913806E4913006E495A9139DFC07FFC02
CFB512F002C314C002C091C7FCED1FF092C9FCADB67EA536407DAC3E> I<90387F807FB5
3881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC91
38E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E> 114 D<90391FFC038090B512
87000314FF120F381FF003383FC00049133F48C7121F127E00FE140FA215077EA27F01E0
90C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15806C7E010F14C0EB003F
020313E0140000F0143FA26C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F0090
38F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C> I<EB01E0A51303A413
07A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9
150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D13FC01015B9038003FE0
23407EBE2C> I<D97FC049B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E49
1380017FD901F713FE9138F807E76DB512C7010F1407010313FE9026007FF0EBFC00372E
7CAC3E> I<B5D8FE1FB539801FFFF0A500019027C0003FE0C7EA7C007114786E17F86C6F
6C5C6E1601017F6E6C5CA26E011F1403013F6F5C6E013F1407011F6F5CA26E0179140F01
0F048090C7FC6E01F95C6D02F0EBC01E15806D902681E07F5B18E003C3157C6D9139C03F
F07815E76DDA801F5B18F803FF14F96E9039000FFDE018FF6E486D5BA36E486D5BA26E48
6D90C8FCA24B7F02075DA26E48147C4B143C4C2C7EAB51> 119 D<B6903803FFFCA50001
01E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D
5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD02
1F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578A215F85D14015D001F1303D83F
805B387FC007D8FFE05B140F92C9FC5C143E495A387FC1F8EB07F06CB45A6C5B000790CA
FCEA01FC36407EAB3B> 121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq ecrm0800 8 10
/Fq 10 58 df<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A2
48EB03E0A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C0
3E3803F0FC3800FFF0EB3FC01C2D7DAB23> 48 D<130C133C137CEA03FC12FFEAFC7C12
00B3B113FE387FFFFEA2172C7AAB23> I<EB7F803801FFF0380780FC380E003F48EB1F80
48EB0FC05A0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F15
80EC3F00147E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC
000E14E0001FB5FC5A4814C0B6FCA21C2C7DAB23> I<EB3FC03801FFF03807C0FC380E00
7E487FEC1F80003F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0
EBFFC014F0EB00FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8
006014C00070131F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23> I<14
0EA2141E143EA2147E14FEA2EB01BE1303143E1306130E130C131813381330136013E013
C0EA0180120313001206120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90381F
FFFCA21E2D7EAC23> I<000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8
FCA8EB1FC0EB7FF8380DE07C380F801F01001380000E130F000CEB07C0C713E0A2140315
F0A4127812FCA448EB07E012E0006014C00070130F6C14806CEB1F006C133E380780F838
01FFE038007F801C2D7DAB23> I<EB03F8EB0FFE90383E0780EBF8013901F007C03803E0
0FEA07C0EA0F80A2391F00078091C7FC123EA2127EA2127CEB0FC038FC3FF0EBF07C38FD
C01EB4487E01001380EC07C04814E0A214034814F0A4127CA3127EA2003E14E01407121E
001F14C06CEB0F803907801F003803C03E6C6C5A38007FF0EB1FC01C2D7DAB23> I<1230
123C003FB512F8A215F05A15E039700001C000601480140348EB0700140E140CC7121C5C
143014705C495AA2495AA249C7FCA25B130E131EA2133EA3133C137CA413FCA913781D2E
7CAC23> I<EB1FC0EBFFF03803E07C3807801E48487E001EEB0780A248EB03C0A4123E14
07003F1480381FC00F01E01300EBF81E6C6C5A3807FFF86C13E0C6FCEB3FF8EBFFFC3803
C7FFD807831380D81F0013C0001E133F48EB1FE0007C13070078EB03F012F84813011400
A46C14E000781301007C14C0003C13036CEB0780390F800F003807E03C3801FFF038003F
C01C2D7DAB23> I<EB3F80EBFFF03803E0783807C03E48487E48487E003E14801407007E
14C0127C00FC14E01403A315F0A5007C1307127EA2003E130F7E6C131F3807803B3803E0
F33800FFC390383F03E013001407A215C0A2140F001E1480003F14005C143E143C003E5B
001C5B380E03E03807FF80D801FEC7FC1C2D7DAB23> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr ecti1095 10.95 58
/Fr 58 123 df<933807FF80043F13F09338FE00FCDB01F0131EDB07E0130F4B48131F4C
133F031F147F4BC7FCA2187E037E14381800A215FE5DA414015DA414030103B712F0A218
E0903A0003F000070207140F4B14C0A3171F020F15805DA2173F1800141F5D5F177EA214
3F92C712FE5FA34A1301027EECF81CA3160302FEECF03C4A1538A21878187013014A0101
13F018E0933800F1C0EF7F800103ED1F004A91C7FCA35C1307A25C121CEA7E0F00FE5BA2
49CAFC12FCEAF81E485AEA7878EA3FF0EA07C0385383BF33> 28
D<14031580A2EC01C0EC00E0A21570A215781538153CA3151EA4151FA2150FA7151FA915
3FA2153EA3157EA2157CA215FCA215F8A21401A215F0A2140315E0A2140715C0A2EC0F80
A2141F15005C143EA25CA25CA2495A5C1303495A5C130F49C7FC131E5B137C5B5B485A48
5A485A48C8FC121E5A12705A5A205A7FC325> 41 D<1660A316E05EA315015EA3150393
C8FCA35D1506A3150E150CA3151C1518A2B912FEA2C80030C8FCA315701560A315E05DA3
14015DA3140392C9FCA35C1406A3140E140CA2373674B145> 43
D<EA01E0EA03F81207120F13FCA213F8A2EA03D8EA001813381330A21370136013E013C0
1201EA038013005A120E5A5A5A5A5A0E1B7A881C> I<387FFFFCA3B5FCA21605799520>
I<120EEA3F80127F12FFA31300127E123C090976881C> I<1506150E151EA2153C157C15
FC1401EC07F8140F143FEB01FF90380FF3F0EB1FC3EB0E07130015E0A2140FA215C0A214
1FA21580A2143FA21500A25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2
130FA25CA2131FA25CEB7FC0B612E0A215C01F3D76BC2E> 49 D<15FE913803FFC09138
0F01F091383C00F84A137C4A7F4948133F49487F4A148049C7FC5BEB0E0C011E15C0EB1C
0EEB3C06133813781370020E133FD9F00C148013E0141C0218137F00011600EBC0384A13
FEEC600102E05B3A00E3C003F89039FF0007F0013C495A90C7485A5E037FC7FC15FC4A5A
4A5AEC0FC04AC8FC147E14F8EB03E0495A011FC9FC133E49141801F0143C48481438485A
1678485A48C85A120E001E4A5AD83FE0130301FF495A397C3FF01FD8780FB55AD8700391
C7FCD8F0015B486C6C5A6E5AEC07C02A3F79BC2E> I<ED7F80913803FFE091380F80F891
383C007C02F87FD901E07F494814804948130F49C7FC010E15C0131EEB1C18EB3C1CEB38
0C0178141F17801370A2021C133F6D4814004A5BD91FE0137ED90F805B90C8FC4B5A4B5A
4B5AED1F8003FFC7FCECFFFC15F0A2EC00FC153E153F8182150F82A4151FA3123E007E14
3F00FE5DA3484AC7FC12E015FE5D14016C495A0070495A0078EB0FC00038495A6C017EC8
FC380F01F83803FFE0C690C9FC2A3F78BC2E> I<131E137FEBFF80A31400A25B133890C7
FCB3A3120EEA3F80127F12FFA390C7FC127E123C112776A61C> 58
D<EB01E0EB07F0EB0FF8A314F0A214E0EB038090C7FCB3A3EA01E0EA03F81207120F7FA2
5BA2EA03D8EA001813381330A21370136013E05B1201485A90C7FC5A120E5A5A5A5A5A15
397AA61C> I<180E183CEF01F0EF07C0EF1E001778EE01E0EE0780043EC7FC16F8ED03C0
030FC8FC153C15F0EC07C0021FC9FC1478EB01E0EB0780011ECAFC13F8EA03E0000FCBFC
123C12F05A1278121E1207EA03C0EA00F01338131EEB0780EB01C0EB00F0143C140E6E7E
EC01E0EC0070153C150FED0380ED01E0ED0078161C160FEE03C0EE00E0373271AF45> I<
0007B912F0A2CDFCB0B912FE843C1477A045> I<130E7FEB03C0EB00F01438141EEC0780
EC01C0EC00F0153C150E6F7EED01E0ED0070163C160FEE0380EE01E0EE0078171C170FEF
03C0EF00E01878181E183E18F8EF03C0EF0F00173C17F0EE07C0041FC7FC1678ED01E0ED
0780031EC8FC15F8EC03E0020FC9FC143C14F0EB03C0011FCAFC137CEA01E0EA0780001E
CBFC127812E0373277AF45> I<17381778A217FCA21601A216031607A2160FA2161DA216
391679167116E1A2923801C1FEA2ED0380A2ED07005D150E5DA25DA25D15F05D14015D4A
487FA24AC77EA2140E141E021FB6FC5CA20270C77EA25CA2495A13035C49C8FC1880010E
153FA25B133C1338137813F80001167FD807FCEDFFC0B500C0013F13FFA25C38417BC043
> 65 D<49B77E18F018FC903B0003FC0001FEEF007F4BEC3F8019C0181F14074B15E0A2
180F140F4B141FA3021F16C04B143FA21980023FED7F004B5C4D5A60027F4A5A92C7EA0F
F0EF1FC0EF7F804AD903FEC7FC92B512F017FE4AC7EA3F8001016F7E4A6E7E717E717E13
034A6E7EA30107825CA3010F5E4A1403A260011F15075C4D5A4D5A133F4A4A5A4D5A017F
4BC7FCEE03FE91C7EA0FF849EC3FF0007F90B612C0B8C8FC16F03B3E7BBD3F> I<9339FF
8001C0030F13E0033F9038F803809239FF807C07913A03FC001E0FDA0FF0EB0F1FDA3FC0
9038079F004AC76CB4FC02FE80495A49486E5A495A495A4948157E4948157C137F49C9FC
5B00011778485A5B12071870485AA2485A95C7FC123F5BA2127F5BA312FF90CCFCA55A17
0FA2170EA2171E171C173C17381778007F167017F04C5A6C5E6D1403001F4B5A6D4AC8FC
6C6C141E00075D6D14F8D803FCEB01E0C66CEB07C090267FC03FC9FC90381FFFFE010713
F0010013803A4272BF41> I<49B77E18F018FC903B0003FC0003FE9438007F804B143FF0
0FC019E00207ED07F04B140319F81801140F4B15FC1800A2141F4B15FEA3143F5DA21801
147F92C8FCA219FC5C4A1503A3010117F84A1507A219F00103160F5C19E0181F010717C0
5CF03F80A2010FEE7F004A157E18FE4D5A011F5E4A4A5A17074D5A013F4B5A4A4A5A4DC7
FC017FEC01FC4C5A91C7EA0FE049EC7FC0007F90B6C8FCB712FC16C03F3E7BBD44> I<49
B812F8A390260003FCC7123F18074B14031801F000F014075DA3140F5D19E0A2141F4B13
38A2EF7801023F027013C04B91C7FCA217F0027F5CED00011603160F91B65AA39138FE00
1F0101EC07805CA3010392C8FC5C18074C5B0107020E130E5C93C7121E181C010F163C4A
15381878A2011F5E5C4D5AA2013F15034A4A5A170F017F151F4D5A91C812FF49020F90C7
FC007F90B7FCB9FC5F3D3E7BBD3D> I<49B812F0A390260003FCC7123F180F4B14071803
F001E014075DA3140F5D19C0A2141F5D1770EFF003023F02E013804B91C7FCA21601027F
5CED0003A216074AEB1F8092B5FCA3902701FE003FC8FC4A7F82A20103140E5CA2161E01
07141C5CA293C9FC130F5CA3131F5CA3133F5CA2137FA291CBFC497E007FEBFF80B6FCA2
3C3E7BBD3B> I<DCFF8013E0030713F0033F9038FC01C09239FF803E03913A03FC000F07
DA0FF0EB078FDA1FC0903803CF80DA7F80EB01DF02FEC812FF495A4948ED7F00495A495A
4948814948153E137F49C9FC5B0001173C485AA2485A1838485AA2485A95C7FC123F5BA2
127F5BA312FF90CCFCA393B512FEA25A9338007F80A295C7FCA25FA25FA26C15017E5FA2
6C6C1403A26C6C5D16076C6C140F6C6C141F6C6CEC3DF06C6C14F96CB4EB03F0903A7FE0
1FC070011FB5EA0060010701FC90C8FC9038007FC03B4273BF46> I<49B512FEA216FC90
390003FE005D5DA314075DA3140F5DA3141F5DA3143F5DA3147F92C7FCA35C5CA313015C
A313035CA313075CA3130F5CA3131F5CA3133F5CA2137FA291C8FC497EB6FCA3273E7BBD
23> 73 D<4AB512FCA391C71300A25EA215015EA315035EA315075EA3150F5EA3151F5E
A3153F5EA3157F93C7FCA35DA25DA21401A25DA21403A25DA21407121FD87F805BA2140F
D8FF005B141F485C00F8495A12E0007049C8FC14FE387801FC383C03F06C485A3807FF80
D801FCC9FC2E4078BD2F> I<49B6FCA390260003FEC8FC5D5DA314075DA3140F5DA3141F
5DA3143F5DA3147F92C9FCA35C5CA313015CA313035C18C0EF01E0010716C05C17031880
130F4A140718005F131F4A141EA2173E013F5D4A14FC1601017F4A5A160791C7121F49EC
FFF0B8FCA25F333E7BBD39> 76 D<902601FFFE93381FFFC062A2D9000394387FE00050
5A6303BFED01DF1AFF0207EE03BF033FDB073FC7FCA2F10E7F140F020EEE1C7E19381AFE
021E167091261C1F805D19E019E1023CED01C1023892380381F8A2F0070314780270030E
5B181C19079126F00FC0133802E05F1870F0E00F130102C0DA01C05BA2943803801F1303
0280DA07005B170EDB07E0143F01075D020094C8FC5F4D5B5B010E4B137EA2DCE1C013FE
011EECE380011C5F04E7C7FCDB03F71301013C14FE01385F5E01784A130313F8486C4A5C
D807FE4C7EB500F0D9E007B512F016C0DAE0015E523E7ABD51> I<902601FFFC91381FFF
FC81A2D90001030013804A6CED7E00197C1938701478EC07BF033F157082031F15F0140F
020E6D5C150F701301141EDA1C075D8203031403143C02386D5C1501180702787FDA7000
92C7FCA2705B02F07F4A150E1780043F131E13014AECC01C161FEFE03C13034A010F1338
17F004071378130791C7EBF870160318F04915FC010E02015BA217FF011E80011C5EA217
7F133C01385E173F137813F8486C6FC8FCEA07FEB500F080A24A140E463E7BBD43> I<49
B77E18F018FC903B0003FC0003FEEF00FF4BEC3F80F01FC01407F00FE05DA2020F16F0A2
5DA2141FF01FE05DA2023F16C0183F4B1580187F027F160018FE92C7485A604AEC07F04D
5A4AEC3F804CB4C7FC49B612F817E002FCCAFCA21303A25CA21307A25CA2130FA25CA213
1FA25CA2133FA25CA2137FA291CBFC497E007F13FEB5FCA23C3E7BBD3D> 80
D<49B612FCEFFF8018F0903B0003FC000FF8EF01FE4B6D7E84F03F800207ED1FC05DA219
E0140F5DA3021FED3FC05DA2F07F80143F4B150018FE4D5A027F5D92C7485AEF0FE0EF1F
804A027EC7FC4AEB07F891B612E01780903A01FE000FE04AEB03F0707E707E0103814A14
7E177FA213075CA25F130F5C5F1601131F5CA3013F020314404A16E05F017F160119C091
C700011303496C1680B61507933900FE0F004AEC7E1ECAEA1FFCEF07F03B407BBD42> 82
D<92390FF001C0ED7FFE4AB5EA0380913907F00FC791390FC003EF91381F0001023E9038
00FF004A805C495A4948143EA2495AA2010F153C5CA3011F1538A46E91C7FCA2806D7E14
FCECFFC06D13F86D13FF16E0010014F86E7F021F7F02037FEC003F03077F1500167F707E
161FA2160FA212075A5F120EA2001E151F94C7FCA25E003E153E5E123F5E486C495A4B5A
6D1307D87DE0EB0F80D8F8F849C8FCD8F07F13FE90383FFFF8D8E00F13E048C690C9FC32
427ABF33> I<48B9FCA3489039001FE00101F8ED007FD807E04A133F49161F49161E000F
143F90C75BA2121E157F001C92C7FC003C171C12385D00785C1270183C00F001011538C7
491400A314035DA314075DA3140F5DA3141F5DA3143F5DA3147F92C9FCA35C5CA313015C
A21303A25CEB0FFC003FB6FCA3383E71BD41> I<001FB5D8C001B512C0A326003FE0C738
0FF8004AEC07E04A5D715A017F1507A291C890C7FCA2495D170E5BA20001161E171C5BA2
0003163C17385BA20007167817705BA2000F16F05F5BA2001F15015F5BA2003F1503A249
5DA2007F1507A290C890C8FCA25E160E12FE161E161C163C007E153816785E5E15016C4A
5A4B5A6C6C49C9FC153E6C6C5B3907E001F03903F80FE0C6B51280D93FFECAFCEB0FF03A
406FBD43> I<007FB81280B9FCA27E31047C6E45> 95 D<147E49B47E903907C1C38090
391F80EFC090383F00FF017E137F4914804848133F485AA248481400120F5B001F5C157E
485AA215FE007F5C90C7FCA21401485C5AA21403EDF0385AA21407EDE078020F1370127C
021F13F0007E013F13E0003E137FECF3E1261F01E313C03A0F8781E3803A03FF00FF00D8
00FC133E252977A72E> 97 D<EB1FC0EA0FFF5CA2EA003FA291C7FCA25BA2137EA213FE
A25BA21201A25BA21203A25B147C3807F1FF9038F787C09038EE03E09038FC01F0EA0FF8
01F013F814005B485A15FC5B1401123FA21300A248130315F8127EA2140700FE14F05AA2
EC0FE0A348EB1FC01580143F1500147E1278007C5B495A383C03F06C485A380F0F80D807
FEC7FCEA01F81E4076BE29> I<EC1FC0ECFFF0903803F07C90380FC01E90381F000E013E
130F49131F01FC137F485A485A0007147E5B000F143848481300A2485AA3127F90C8FCA3
5A5AA55A1506150E007E141E153C1578003E14F0003FEB01E06CEB07C0390F800F003807
C07E3801FFF038007F80202977A729> I<EE3F80ED1FFF1700A2ED007FA2167EA216FEA2
5EA21501A25EA21503A25EA21507A25E147E903801FF8F903807C1CF90391F80EFC09038
3F00FF017E137F5B48486D5A485AA2485A000F92C7FC5B001F5CA24848137EA215FE127F
90C75AA214015A485CA2140316384814F0A21407167891380FE070127C021F13F0007E01
3F5B003E137FECF3E1261F01E35B3A0F8781E3802703FF00FFC7FCD800FC133E294077BE
2E> I<143F903801FFE0903807C0F090381F0078137E49133C485A485A12074848137C49
1378121F484813F8EC01F0007FEB07E09038001FC0903801FF00EBFFF8B5128048C8FCA4
5AA6150C151C153C007C147815F0007EEB01E0003EEB03C06CEB0F806CEB1E00380780FC
3803FFE0C690C7FC1E2976A729> I<167C4BB4FC923807C78092380F83C0151F160FED3F
1FA2157E1780EE0F0093C7FC5DA414015DA414035DA30103B512F8A390260007E0C7FCA3
140F5DA5141F5DA4143F92C8FCA45C147EA414FE5CA413015CA4495AA4495AA4495AA212
1C007E5B12FE49C9FCA2EAFC1E485A12F0EA7878EA3FE0EA0F802A5383BF1C> I<EC03E0
EC1FF891383E1E389138F80EFC903801F007EB03E001071303D90FC013F8EB1F80133F14
004914F0137E01FE1307A2484814E0A2150F12034914C0A2151F1207491480A2153FA249
1400A25DA2000314FE140113F0000113034A5A3800F80EEB7C3DEB1FF1903807C1F8EB00
011403A25DA21407A25D140F003C5C127E00FE495A4AC7FC147E485B38F001F8387C03E0
383FFF80D807FEC8FC263B7CA729> I<EB01FC13FF5CA21303A25CA21307A25CA2130FA2
5CA2131FA25CA2133FA291C8FCEC03F890387F0FFE91383E0F80D97E7813C0ECE007D9FF
C013E014801400A2485A5BA25B0003140F16C05BA20007141F16805BA2000F143F16005B
5D001F147EEDFE074913FCA2003F0101130FEDF80E1300161E48ECF01CA2007E1538A200
FE1570020013E048EC7FC00038EC1F0028407ABE2E> I<1470EB01FCA314F8A2EB00E014
00AD137C48B4FC38038F80EA0707000E13C0121E121CEA3C0F1238A2EA781F00701380A2
EAF03F140012005B137E13FE5BA212015BA212035B1438120713E0000F1378EBC070A214
F0EB80E0A2EB81C01383148038078700EA03FEEA00F8163D79BB1C> I<ED0380ED0FC015
1FA31680ED0F0092C7FCADEC07C0EC3FF0EC78F8ECE07CEB01C01303EC807EEB0700A201
0E13FE5D131E131CEB3C01A201005BA21403A25DA21407A25DA2140FA25DA2141FA25DA2
143FA292C7FCA25CA2147EA214FEA25CA213015CA3383C03F0127E38FE07E05C495A4848
C8FCEAF03EEA707CEA3FF0EA0FC0224F83BB1C> I<EB01FC13FF5CA21303A25CA21307A2
5CA2130FA25CA2131FA25CA2133FA291C8FCED07C049EB1FF0ED7838017EEBE078913801
C1FC9038FE038191380703F8EBFC0E140C000190381C00E04A1300495A5C3803F9C0EBFB
8049C8FC13FE485AEBFFC0EBEFF0EBE1FC380FE0FE147F497E6E7E121F16E01380A2003F
1481023F13C001001301A24814031680007EEB1F07160000FE5CEC0F1E48EB07FC0038EB
01F026407ABE29> I<EB07F0EA03FF14E0A2EA000FA214C0A2131FA21480A2133FA21400
A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2
123FA290C7FCA25A1307127EA2EAFE0F130E12FCA2131E131CA2EA7C381378EA3C70EA1F
E0EA0780144079BE17> I<D801F0D93F80137F3D07FC01FFE003FFC03D0F3E07C1F80F83
F03D0E1F0F00FC1E01F8001E011C90387C3800001C49D97E707F003C01F05C0038157F4A
5C26783FC05C12704A91C7FC91C7127E00F003FE1301494A5CEA007EA20301140301FE5F
495CA203031407000160495C180F03075D0003051F13E0494A1480A2030FEC3F810007F0
01C0495CA2031F91383E0380120F494AEC0700A2033F150E001FEF1E1C4991C7EA0FF800
07C7000EEC03E0432979A74A> I<D801F0EB3F803A07FC01FFE03A0F3E07C1F83A0E1F0F
00FC001E011C137C001C49137E003C13F012385C38783FC012705C91C7FC00F015FE495C
EA007EA2150101FE5C5BA2150300015D5B15075E0003020F13704914C0A2031F13F00007
ED80E05B1681EE01C0120F49EC0380A2EE0700001FEC0F0E49EB07FC0007C7EA01F02C29
79A733> I<EC1FC0ECFFF8903803F07C90380FC01FEB1F8090393F000F80017E14C04913
07484814E0485A12075B000F15F0485AA2485AA2ED0FE0127F90C7FCA2151F4815C05AA2
ED3F80A2ED7F00A248147E007C5C007E13015D4A5A003E495A6C495A4A5A260F803EC7FC
3807C0FC3801FFF038003F80242977A72E> I<903903E001F890390FF807FE903A1E7C1E
0F80903A1C3E3C07C0013C137801389038E003E0EB783F017001C013F0ED80019038F07F
0001E015F8147E1603000113FEA2C75AA20101140717F05CA20103140F17E05CA20107EC
1FC0A24A1480163F010F15005E167E5E131F4B5A6E485A4B5A90393FB80F80DA9C1FC7FC
EC0FFCEC03E049C9FCA2137EA213FEA25BA21201A25BA21203A2387FFFE0B5FCA22D3A80
A72E> I<027C13C0903801FF03903807C38790391F01CF8090383E00EF4913FF01FC137F
48481400485AA2485A000F147E5B121F15FE48485BA3007F130101005BA3481303485CA3
1407485CA3140F5D007C131F143F147F6C495A5B381F03DF380F07BF2607FE3FC7FCEA01
F8C7FC5C147EA314FE5CA313015CA21303130748B512E0A3223A77A729> I<D801F013FE
3A07FC03FF803A0F3E0F03E0390E1F1C01001EEB3807001C017013F0003C9038F00FE000
3813E014C0D8783FEB0380007049C7FCA291C8FC12F05BEA007EA313FE5BA312015BA312
035BA312075BA3120F5BA3121F5B0007C9FC242979A726> I<EC7F80903801FFE0903807
C0F890381E003C49131C151E49130E49133E157EA20001147CA215106D13007FEBFF8014
F86C13FF15806D13C0011F13E013079038007FF0140F1403A21401123E007E1300007F13
0100FE14E0A25A48EB03C048EB078012700078EB0F006C133C001F13F83807FFE0C690C7
FC1F297AA725> I<EB01C0EB03F01307A25CA2130FA25CA2131FA25CA2133FA291C7FCA2
007FB51280B6FC1500D8007EC7FC13FEA25BA21201A25BA21203A25BA21207A25BA2120F
A25BA2121F141C1380A2003F133C1438EB0078147014F05C495AEA1F03495A6C48C7FCEA
07FCEA01F0193A78B81E> I<137C48B4143826038F8013FCEA0707000E7F001E1401121C
D83C0F5C12381503EA781F007001805BA2D8F03F1307140000005D5B017E130FA201FE5C
5B151F1201495CA2153F0003ED8380491403A2157F1607037E1300A2EDFE0F160E000113
019039F803BE1C0000EB073E90397C1E1E3890393FF80FF0903907E003E0292979A730>
I<017CEB038048B4EB07E039038F800FEA0707000E01C013F0121E001C1407EA3C0F0038
140316E0D8781F130100701380A2EAF03F020013C012005B017E1303168013FE5B150700
0115005BA2150E12035B5DA25DA25DA200015C4A5AEBF8030000495AD97E0FC7FCEB1FFC
EB07F0242979A729> I<017C167048B491387001FC3A038F8001F8EA0707000E01C015FE
001E1403001CEDF000EA3C0F0038177C1507D8781F4A133C00701380A2D8F03F130F0200
49133812005B017E011F14784C137013FE5B033F14F0000192C712E05BA2170100034A14
C049137E17031880A2EF070015FE170E00010101141E01F86D131C0000D9039F5BD9FC07
6D5A903A3E0F07C1E0903A1FFC03FFC0902703F0007FC7FC372979A73C> I<903903E003
F090390FF80FFC90393C3C1C1F9039701E380F9039E01F703F000102F013803B03C00FE0
7F001380000714C0D9001F131C4892C7FC000E5CA2001E133FA2C790C8FCA25C147EA314
FE5CA313014A1338A3010314781670001C4913F0007E5D0107130100FE5D010F495A9038
0EF80727781C780FC7FC9038383C3C393FF01FF83907C007E029297CA729> I<137C48B4
143826038F8013FCEA0707000E7F001E1401001C15F8EA3C0F12381503D8781F14F00070
1380A2D8F03F1307020013E012005B017E130F16C013FE5B151F1201491480A2153F0003
15005BA25D157EA315FE5D00011301EBF8030000130790387C1FF8EB3FF9EB07E1EB0003
5DA214075D121F486C485AA24A5AD87F0090C7FC007E133E0038137E5CEB01F06C485A38
1E0FC0D807FFC8FCEA01F8263B79A72C> I<D901F01370D907FC13F0010F14E090381FFE
0190393FFF03C049EB838090387C0FCF9039F803FF009038F0007E49133C000114386C48
137890C75A4A5A4A5A4A5A4AC7FC141E5C5C5C495A495A495A49C8FC131E4913075B5B48
485B4848131E485A01F05BD80FFE137C391F1F81F8383E0FFFD83C075B486C5B00705CD8
F00190C7FC38E0007C24297BA725> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs ecrm1095 10.95 86
/Fs 86 126 df<486C1360000314E039070001C0000EEB0380000C1400001C5B00181306
0038130E0030130C0070131C00601318A200E01338481330A500CEEB338039FF803FE001
C013F0A3007F131FA2393F800FE0390E0003801C1B80BE1E> 16
D<001C1307007FEB1FC039FF803FE0A201C013F0A3007F131F001CEB073000001300A500
011470491360A2000314E090C712C048130100061480000E1303000C1400001C5B48130E
485B006013181C1B7FBE1E> I<B812F0A22C0280982D> 21 D<DA03FFEB0FE0021F9038
C07FF8913AFE00F1F81CD901F890383BE07ED907E090387FC0FF90390FC001FFD91F805C
D93F005C5B017E167E01FE6D48130049147EAEB91280A3D800FCC7007EC7FCB3AE486C14
FF277FFFF83F13FFA338407FBF35> 27 D<EC03FE91381FFFC09138FE01E0903901F800
78D907E0131C4948137C494813FE90383F00015B137E13FE496D5A167893C7FCAB167EB7
12FEA33900FC00011500167EB3AC486C14FF277FFFF83F13FCA32E407FBF32> I<EC03FF
021F13EE9138FE00FEEB01F8903807E001EB0FC0EB1F80EB3F005B017E130001FE147E5B
AEB712FEA3D800FCC7127EB3AE486C14FF277FFFF83F13FCA32E407FBF32> I<DA03FE49
B4FC91271FFF800F13E0913BFE01E07F00F0902801F80078FC133CD907E0D91BF0130E49
48D97FE0133E4948484848137FD93F004A5B5B017E92C7FC13FE494A147EDB007E143C96
C7FCAB193FBBFCA3D800FCC7007EC7FC8585B3AC486C02FFEC7F80277FFFF83F9039FC1F
FFFEA347407FBF4B> I<121C127FEAFF80A9EA7F00AC123EAC121CACC7FCA9121C127FEA
FF80A5EA7F00121C094178C019> 33 D<121C127FEAFF80A213C0A3127F121C1200A512
011380A2120313005A1206120E120C121C5A5A12600A1B78BE19> 39
D<1430147014E0EB01C0EB0380EB07005B131E5BA25B5BA2485AA2485AA212075B120FA2
90C7FC5AA2121E123EA3123C127CA6127812F8B21278127CA6123C123EA3121E121FA27E
7FA212077F1203A26C7EA26C7EA213787FA27F7F7FEB0380EB01C0EB00E014701430145A
77C323> I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A27FA2133E131E131F
A27F1480A2130714C0A3130314E0A6130114F0B214E01303A614C01307A31480130FA214
005BA2131E133E133CA25BA25BA2485A485AA2485A48C7FC120E5A5A5A5A5A145A7BC323
> I<1506B3ABBA12E0A2C80006C9FCB3AB3B3C7BB446> 43 D<121C127FEAFF80A213C0
A3127F121C1200A512011380A2120313005A1206120E120C121C5A5A12600A1B788819>
I<B512FEA517057F951E> I<121C127FEAFF80A5EA7F00121C0909788819> I<16C0A215
011680A2150316005D1506A2150E150CA2151C1518A215381530A21570156015E05DA214
015DA2140392C7FCA25C1406140E140CA2141C1418A214381430A214701460A214E05C13
015CA2130391C8FCA25B1306A2130E130CA2131C131813381330A213701360A213E05BA2
12015B120390C9FCA25A1206A2120E120CA2121C1218A21238123012701260A212E05AA2
225B7BC32D> I<EB03FC90381FFF8090383E07C09038F801F048486C7E4848137C49133C
0007143E48487FA248C7EA0F80A24815C0A4007EEC07E0A500FE15F0B3A3007E15E0A400
7F140F6C15C0A46C15806D131F000F1500A26C6C133EA26C6C5B6C6C5B6C6C485A90383E
07C06DB45AD903FCC7FC243F7CBC2D> I<14C013031307131F137FEA07FFB5FC139FEAF8
1F1200B3B3ACEB7FF0B612F8A31D3D78BC2D> I<EB07FC90383FFF8090B512E03901F00F
F839078003FC48486C7E000E6D7E48EC7F8048EC3FC012300070EC1FE01260A200FEEC0F
F07E7FA56CC7FC121CC813E0151FA216C0153F1680157F160015FE4A5AA24A5A4A5A4A5A
5D4A5A023EC7FC5C5C495A495A5C495A49C71230131E5B5B491460485A485A485A90C812
E048B6FC5A5A4815C0B7FCA3243D7CBC2D> I<EB07FC90383FFF8090B512E03901F807F8
3907C003FC48C66C7E000E6D7E48EC7F80EA1F80486CEB3FC07FA56C5A0007C7FCC81380
157FA216005D5D4A5A4A5A5DEC0FC0023FC7FCEB1FFCECFF809038000FE0EC03F86E7E6E
7E157F1680ED3FC0A216E0A2151F16F0A2120C123F487E487EA4ED3FE05B6CC713C01270
ED7F807E6CECFF00000F495A3907C003FC3903F80FF0C6B55A013F1380D907FCC7FC243F
7CBC2D> I<150EA2151E153EA2157E15FEA214011403A21406140E140C14181438143014
6014E014C0EB0180130314001306130E130C5B133813305B13E05B485A120390C7FC1206
120E120C5A123812305A12E0B8FCA3C8EAFE00AC4A7E49B6FCA3283E7EBD2D> I<000614
03D807C0130F01F813FE90B55AA215F05D5D92C7FC38063FF890C9FCADEB01FE90380FFF
8090383E03E090387001F8496C7ED807C0137E497F90C713800006141FC813C0A216E015
0FA316F0A4123E127F487EA490C713E048141F12E0006015C012700030EC3F8012386CEC
7F00001E14FE6C495A3907C003F83903F00FE0C6B55A013F90C7FCEB07F8243F7CBC2D>
I<EC1FE0ECFFF8010313FE90380FF01F90391F80078090383F0003017EEB0FC049131F48
48133F485AA2485A000FEC1F8049EB0F00001F91C7FCA25B123FA3127F90C9FCEB01FE90
3807FF8039FF0E03E0496C7E90383800FC49137E0160133E01E0133F49EB1F8016C05B16
E0150FA290C713F0A67EA56C7E16E0A2121FED1FC07F000F1580153F6C6C14006C6C137E
6C6C5B6C6C485A90387E07F06DB45A010F1380D903FCC7FC243F7CBC2D> I<1230123812
3E003FB612FCA316F85A16F016E00070C8FC0060EC01C0ED038016005D48140E150C151C
5DC8123015705D4A5A5D14034AC7FCA2140EA25CA2143C14381478A214F85C1301A31303
A313075CA3130FA5131FAA6D5A6D5A26407BBD2D> I<EB03FC90381FFF80017F13E09038
FC03F83901E000FC4848133E48487F48C77E000E1580001E1407001C15C0003C1403A312
3EA2123F15076D1480D81FE0130F6D140001FC131E6C6C5B6D6C5A6C6D5A6CEBF1E06CEB
FF806C91C7FC133F6D13C06D7F4913F801787F48486C7E3903C01FFF48486C1380260F00
0313C0487F001E9038007FE048143F007C140F0078EC07F0150312F8481401A21500A46C
15E000781401A2007C15C06C1403001EEC0780001FEC0F00D80FC0131E6C6C137C3901FC
03F86CB512E0011F1380D903FCC7FC243F7CBC2D> I<EB03FCEB1FFF4913C09038FE07F0
3901F801F848486C7E4848137C000F147E48487F5B003FEC1F80A2127F90C713C0A25AED
0FE0A516F0A66C141FA27F123F153F121F6C6C137F0007146F6D13EF3903F001CF3900F8
038F90387C070FD91FFE13E0EB07F890C7FC151FA216C0A3ED3F80A2000F1500486C5B48
6C137EA25D4A5A138049485A001C495A001EEB1FC0260FC07FC7FC3803FFFE6C13F83800
3FC0243F7CBC2D> I<121C127FEAFF80A5EA7F00121CC7FCB3A3121C127FEAFF80A5EA7F
00121C092778A619> I<121C127FEAFF80A5EA7F00121CC7FCB3A3121C127FEAFF80A213
C0A3127F121C1200A512011380A2120313005A1206120E120C121C5A5A12600A3978A619
> I<180E183C18F0EF07C0EF1F001778EE01E0EE0780041EC7FC16F8ED03E0030FC8FC15
3C15F0EC03C0021FC9FC147CEB01E0EB0780011ECAFC1378EA03E0EA0F80003CCBFC12F0
A2123CEA0F80EA03E0EA0078131EEB0780EB01E0EB007C141FEC03C0EC00F0153C150FED
03E0ED00F8161EEE0780EE01E0EE0078171FEF07C0EF00F0183C180E373279AF46> I<BA
12E0A2CDFCB0BA12E0A23B147BA046> I<12E01278121EEA07C0EA01F0EA003C130FEB03
C0EB00F0143EEC0F80EC01E0EC0078151EED0780ED01F0ED007C160FEE03C0EE00F0173C
EF0F80EF03E0EF0078181EA21878EF03E0EF0F80EF3C0017F0EE03C0040FC7FC167CED01
F0ED0780031EC8FC1578EC01E0EC0F80023EC9FC14F0EB03C0010FCAFC133CEA01F0EA07
C0001ECBFC127812E0373279AF46> I<1507A34B7EA24B7EA34B7EA34B7E156FA2EDCFF8
15C7A291380187FC1583A291380301FEA391380600FFA2020E80020C137FA2021C800218
133FA24A80161FA24A80160FA24A6D7EA349486D7E91B6FC4981A291C712014981010680
A24982177FA24982173FA2496F7EA21370717E13F0000183487ED80FFEED3FFEB500C001
07B512F8A33D417DC044> 65 D<B712FCEEFFC017F0C69039C0000FFC6D48EB03FEEE00
FFEF7F80EF3FC018E0171F18F0170F18F8A718F0171F18E0173F18C0EF7F80EFFF00EE03
FEEE0FF8EE7FE091B6C7FC17E09139800003FCEE00FEEF7F80EF3FC0EF1FE0EF0FF018F8
170718FC1703A218FEA718FC1707A2EF0FF818F0171FEF3FE0EF7FC0933801FF80496C90
380FFE00B85A17E094C7FC373E7DBD40> I<DB3FF0130C912603FFFE131C021FEBFF8091
3A7FE00FC03C913AFF0001F07CD903FCEB0078D907F0EC3CFCD91FE0140F494814074948
140349C8FC4848150149150012034848167CA24848163CA24848161CA2123F5B180C127F
A349160012FFAC127F7F180CA2123FA27F001F171C18186C7EA26C6C163818306C6C1670
000117606D16E06C6CED01C06D6CEC03806D6C14076D6CEC0F00D907F0141ED903FC5CD9
00FF14F091397FE007E0021FB51280020349C7FC9138003FF036427BBF41> I<B712FCEE
FF8017E0C69039C0001FF86D48EB03FEEE00FFEF3F80717E717E717E717E717EA2717E84
841980183F19C0A319E0181FA419F0AB19E0A4183F19C0A21980187FA2190018FEA24D5A
4D5A17074D5A4D5A4D5A05FFC7FCEE03FE496CEB1FF8B85A178004FCC8FC3C3E7DBD45>
I<B912C0A3C69038C000016D48EB001FEF0FE01703A217011700A31860A418301630A418
00A21670A216F01501150791B5FCA3EC8007150115001670A21630A21806A3180C93C7FC
A4181C1818A21838A21878A218F0170117031707171F496CEB01FFB912E0A3373E7DBD3D
> I<B91280A3C69038C000036D48EB003FEF1FC017071703A21701A31700A41860A21630
A31800A31670A216F01501150791B5FCA3EC8007150115001670A21630A693C8FCAFEBFF
E0B612F0A3333E7DBD3B> I<DB3FF0130C912603FFFE131C021FEBFF80913A7FE00FC03C
913AFF0001F07CD903FCEB0078D907F0EC3CFCD91FE0140F494814074948140349C8FC48
48150149150012034848167CA24848163CA24848161CA2123F5B180C127FA34993C7FC12
FFAB041FB512F0127F7F9339000FFE00EF03FC123FA27F121FA26C7EA26C7EA26C7E6C7E
A26C7E6D6C14076D7E6D6C140FD907F8141C6D6CEC387CD900FFECF03C913A7FF007E01C
021FB5EA800C020349C8FC9138003FF03C427BBF47> I<B6D8C01FB512F8A3C601C0C738
1FF8006D486E5AB3A691B7FCA30280C7120FB3A9496C4A7EB6D8C01FB512F8A33D3E7DBD
44> I<B612C0A30001EBE00038007F80B3B3B23801FFE0B612C0A31A3E7DBD21> I<010F
B512F8A3D900071300EC01FEB3B3A7123FEA7F80EAFFC0A44A5A1380D87F005B006C1307
00705C6C495A6C495A000F495A2603C07EC7FC3800FFF8EB3FC025407DBD2E> I<B600C0
90380FFFF8A3C601C0C7000313806D48913801FC006018E04D5A604DC7FC170E5F5F17F0
EE01C04C5A4CC8FC160E5E5E5E5E4B5A4B5A15074B7E151F4B7E4B7E15FF913881CFF891
388387FCEC870791388E03FE91389C01FF14B8DAF0007F4A6D7E1480707E707EA2707E70
7EA2707E707EA2707F717EA2717E717EA2717E84717E4D7E496C4A1380B600C090B512FC
A33E3E7DBD46> I<B612F0A3C601E0C8FCEB7F80B3B01703A517071706A4170EA3171EA2
173E177E17FEEE01FC1607496C133FB8FCA3303E7DBD38> I<B56C93381FFFF06E5EA2C6
F1F000D96FE0EE6FE0A2D967F016CFA3D963F8ED018FA2D961FCED030FA3D960FE1506A2
027F150CA36E6C1418A36E6C1430A26E6C1460A36E6C14C0A26E6CEB0180A36E6CEB0300
A26E6C1306A3037F5BA26F6C5AA36F6C5AA26F6C5AA36F6C5AA2923803F980A36FB4C7FC
A26F5AA213F0486C147CD807FE4D7EB500F00138011FB512F0A34C3E7DBD53> I<B56C91
387FFFF88080D8007F030313006EEC00FCD96FF815786E15301367EB63FE80136101607F
6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7F6F7E82153F6F7E82150F6F7E8215036F
7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF7013B018F0177F
173FA2171F170F1707A2170301F01501487ED807FE1500B500F01570A218303D3E7DBD44
> I<EDFFE0020713FC91393FC07F809139FE000FE0D901F8EB03F0D907E0EB00FC494814
7E49488049C86C7E017E6F7E01FE8248486F7E48486F7EA248486F7EA248486F7E001F83
A24982003F1880A3007F18C049163FA300FF18E0AC007F18C06D167FA4003F18806D16FF
001F1800A36C6C4B5AA26C6C4B5A00035F6D150700015F6C6C4B5A017F4B5A6D6C4A5A01
1F93C7FCD90FE014FE6D6C495AD901F8EB03F0D900FEEB0FE091393FC07F80912607FFFC
C8FC020013E03B427BBF46> I<B712F016FF17C0C69039C0003FF06D48EB07F8EE01FE70
7E831880EF3FC0A2EF1FE0A218F0A818E0A2EF3FC0A2EF7F80180017FEEE03FC4C5AEE3F
E091B6128004FCC7FC0280C9FCB3A7497EB612C0A3343E7DBD3D> I<EDFFE0020713FC91
393FC07F809139FE000FE0D901F8EB03F0D907F0EB01FCD90FC0EB007E49488049C86C7E
498201FE6F7E48486F7E000383491503000783491501000F8348486F7EA34848EE7F80A3
007F18C0A249163FA200FF18E0AC007F18C0A26D167FA3003F1880A26C6CEEFF00A36C6C
4B5AA20007021F5C6C6C90397FC003F8EDE0706C6C48486C485A3C00FE0380180FE0017E
D9001C5B013F91380C1F80D91F83D90E3FC7FCD90FC3EB067ED907F3EB07FC902601FB80
13F06DB46C485A91273FE07F8013600207B5FC020013E392380003C019E0831801933801
F0039438F807C0EFFC0F94B5FCA2701480A271130060173FEF1FF8EF07E03B527BBF46>
I<B712C016FCEEFF80C69039C0007FE06D48EB0FF0EE03FC707E707E717E717EA284171F
84A760173F6060177F4DC7FCEE01FC4C5AEE0FE0EEFF8091B500FCC8FC5E91388000FFEE
3FC0EE0FE0707E707E83707EA2707EA684A7190618C0177FA2190E496C91383FE00CB600
C0011F131C94380FF038943807F870CA3801FFE09438003F803F407DBD43> I<D907FC13
1890393FFF803890B512E03A01FC03F8783903F0007CD807C0EB1EF84848130F48C71207
481403003E1401007E1400A2007C157812FCA21638A36C1518A27EA26C6C14007F7FEA3F
F813FF6C13F06C13FF15F06C14FC0001806CECFF80013F14C0010714E0EB007F020713F0
9138007FF8151FED0FFC15071503ED01FEA200C01400A3167EA27EA3167C7E16FC6C15F8
6C14016C15F06C14036DEB07E0D8FBE0EB0FC0D8F1F8EB1F80D8F07FEB7F0039E01FFFFC
010713F039C0007FC027427BBF32> I<003FB9FCA3D9E000EBC00190C7397F80003F007E
EF1F80007C170F0078170700701703A300601701A548EF00C0A5C81600B3B24B7E4A7F01
07B612F8A33A3E7DBD41> I<B600C090387FFFF8A3C601C0C7000313006D48EC00FC1878
1830B3B3A4013F16706E1560A218E0011F5E6E1401130F6E4A5A01074BC7FC6D6C5C6D6C
140E6D6C143C027F5C91393FC001F091390FF00FE00203B51280020049C8FCED1FF03D40
7DBD44> I<B500FE913803FFFEA3000301C09138007FE06C49ED1F806C90C913006E150E
017F160CA26E151C013F161880011F5EA26E1570010F1660A26D6C5DA28001034B5AA26E
1403010193C7FC806D1506A26F130E027F140CA26E6C5BA281021F5CA26F1370020F1460
8102075CA2EDFC0102035CA26E6C48C8FCA215FF6E1306A2168EED7F8C16CCED3FD8A216
F86F5AA26F5AA36F5AA36F5AA23F407EBD44> I<B500FE013FB56C48B5FCA3000701C001
0101F0C7EA3FF86C90C8D87FC0EC0FE06CF207C0053FED03806C1B00A26E6E6C5C017F19
06A26E4A7E013F61A26E4A7E011F03675DA2EFE7FC6D6C02C35DA204017F6D6C02815DA2
846D6C49C65DA36D6C01066D6C485AA36E4990383FC0036D96C7FCA26F486D6C5A027F17
06A26F48EB0FF0023F5FA2DBE07014F8021F016001075BA204E014FC6E6C4801035BA203
F115FE912607F98001015BA219FF6EB4C85BA36E486F5AA34B153F020094C8FCA24B8103
78151EA20370150E0330150C58407EBD5D> I<B692B51280A3000101F092383FF8006C49
ED0FC0017F5F013F94C7FC6E150E011F160C6D6C5D6E1538010716306D6C157018606D6C
5D6F13016D5E6E6C13036F91C8FC023F14066E6C130E170C6E6C131C6F131802075C6E6C
137017606E6C13E06E6D5AEE8180ED7FC304E3C9FCED3FE7ED1FF616FC150F6F5AB3A44B
7E020FB512FCA3413E7FBD44> 89 D<EAFFFEA2EAFC00B3B3B3B3AFEAFFFEA20F5B78C3
19> 91 D<EAFFFEA2EA007EB3B3B3B3AFEAFFFEA20F5B7FC319> 93
D<007FB812FCB912FEA26C17FC3704796E46> 95 D<EB1FF0EBFFFC3803E03F390F000F
C0001C6D7E001F6D7E486C6C7E6D6C7EA3157E6C5A6CC7FCC8FCA4EC1FFEEB03FF90381F
F87EEB7F803801FC00EA07F0485A485A485A127F90C7FC160312FEA315FEA21401007F14
BE14033A3F80071F06261FC00E138E3A0FF03C0FFC3A03FFF007F83A003FC003E0282A7C
A82D> 97 D<EA01F812FFA3120712031201B1EC07F8EC1FFF9138780FC09039F9E003F0
9039FB8001F801FFC77E49147E4980EE1F805B17C0160F17E0A2160717F0AA17E0160FA3
17C0161F17806DEC3F007F01F6147E01F75C9039E38001F89039C1C003E09039C0F81F80
9026803FFEC7FCC7EA07F02C407EBE32> I<49B4FC010F13E090383F00F8017C131E4848
13074848131F4848EB3F804848137FA2485AA248C7EA3F00151E4891C7FCA2127E12FEAB
127FA36C15C07F001F14016D1480000F14036C6CEB07006C6C13066C6C131E6C6C133890
383F01F090380FFFC0D901FEC7FC222A7DA828> I<ED01F815FFA3150715031501B114FF
010713C190381F80F190387C00394848131D4848130F4848130748481303A24848130112
3F90C7FC5AA3127E12FEAA127E127FA27E7F001F1403A26C6C13076C6C130F6C6CEB0DFC
6C6CEB3DFE6C6C903871FFF090383F01E190380FFF81903A01FE01F8002C407DBE32> I<
EB03FC90381FFF8090387E07E09038F801F048486C7E4848137C48487F000F143F48487F
168048C7FC150F5A16C0127EA212FEA2B7FCA248C9FCA6127E127FA36C15C07F001F1401
6C6C148015036C6CEB07006C6C130E6C6C5B6C6C5B90383F01F090380FFFC0D901FEC7FC
222A7DA828> I<EC1FC0ECFFF0903803F038903807C0FC90380F81FE131FEB3F01133E13
7EEC00FC491300AFB6FCA3D800FCC7FCB3AE487E387FFFFEA31F407FBF1C> I<167E9039
03FC01FF903A0FFF07878090393E07CE0F9038FC03FC3901F801F83B03F000FC07004901
7CC7FC0007147EA248487FA86C6C137EA20003147C6D13FC6C6C485A6D485A9038BE07C0
26038FFFC8FCEB03FC48CAFCA47FA27F6C7E90B512F06C14FE6F7E6C6C14E048B612F839
07C0001FD81F80EB03FC48C87E003E157E48153E163F4881A56C5D007C153E007E157E6C
5D6C6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0293D7EA82D
> I<EA01F812FFA3120712031201B1EC03FC91380FFF8091383C0FC09138F003E0D9F9C0
7F9039FB8001F8140001FF6D7E5BA25BA25BB3A6486C497EB539F07FFFF8A32D3F7EBE32
> I<EA01C0EA07F0487EA56C5AEA01C0C8FCACEA01F8127FA3120712031201B3AC487EB5
12E0A3133D7EBC19> I<1470EB01FCEB03FEA5EB01FCEB00701400AC14FE133FA3130113
00147EB3B3A6123C007E137CB413FCA214F8130100FE13F0387803E0383E07C0380FFF00
EA01FC175084BC1C> I<EA01F812FFA3120712031201B292387FFF80A392381FFC00ED0F
E016804BC7FC151C5D5D5DEC03C04AC8FC140E141E143E147F9038F9FF809038FB9FC0EB
FF0F496C7E01FC7FEBF8036E7E816E7E157E8182151F6F7E826F7EA282486C14FEB539F0
3FFFE0A32B3F7EBE30> I<EA01F812FFA3120712031201B3B3B1487EB512F0A3143F7EBE
19> I<2701F803FCEB01FE00FF903B0FFF8007FFC0913B3C0FC01E07E0913BF003E07801
F02607F9C0D9F0E07F3D03FB8001F9C000FC000101005C01FFD900FF147E4992C7FCA249
5CA2495CB3A6486C496C14FFB528F07FFFF83F13FCA346287EA74B> I<3901F803FC00FF
90380FFF8091383C0FC09138F003E02607F9C07F3A03FB8001F80001130001FF6D7E5BA2
5BA25BB3A6486C497EB539F07FFFF8A32D287EA732> I<EB01FE90380FFFC090383F03F0
90387C00F8D801F0133E48487F4848EB0F80A24848EB07C0001F15E090C712034815F0A2
007EEC01F8A400FE15FCA9007E15F8A3007F14036C15F0A26C6CEB07E0000F15C06D130F
000715806C6CEB1F006C6C133ED800FC13FC90383F03F090380FFFC0D901FEC7FC262A7D
A82D> I<3901F807F800FFEB1FFF9138780FC09039F9E003F03A03FB8001F86CB4C77E49
147E49147FEE3F8049141F17C0A2EE0FE0A317F01607A9EE0FE0A4EE1FC0A2EE3F806D15
006D5C16FE6D495A9039FB8003F89039F9C007E09039F8F81F80DA3FFEC7FCEC07F091C9
FCAD487EB512F0A32C3A7EA732> I<02FF130C0107EBC01C90381F80F090387E003849EB
1C3CD803F8130E4848EB077C491303484814FC001F1401485A150048C8FCA412FEA97E7E
A36C7E15016C7E000F14037F000714076C6C130E6C6C131CD8007E137890383F01E09038
0FFFC0903801FE0090C8FCAD4B7E92387FFFF8A32D3A7DA730> I<3903F00FC000FFEB3F
F0ECF0F89038F1C3FC00071383EA03F33801F70313F6EC01F89038FE0060491300A45BB3
A4487EB512F8A31E287EA723> I<90387FC0603903FFF8E03807C03D381E000F48130348
1301A20070130012F01560A27EA27EB41400EA7FC013FE383FFFE06C13FC00077F6CEBFF
80C66C13C0010713E0EB003FEC0FF000C01303EC01F814007E1578A27EA27E15F07EEC01
E06C14C039F780078039F1E01F0038E0FFFC38C01FE01D2A7DA824> I<1318A61338A413
78A213F8A2120112031207001FB512C0B6FCA2D801F8C7FCB3A21560A96C6C13E015C0A2
EB7E0190383F038090381F8700EB07FEEB01F81B397EB723> I<D801F814FC00FF147FA3
000714030003140100011400B3A51501A3150312006D1307ED0EFE017C497E6D4913F890
381F80F0903807FFE00100903800FC002D297EA732> I<B539C007FFE0A32707FC000113
006C48EB007C1678000115707F00001560A2017E5CA2017F13016D5CA26D6C48C7FCA26E
5A010F1306A26D6C5AA2ECF01C01031318A26D6C5AA2ECFC7001001360A2EC7EC0A2147F
6E5AA26EC8FCA3140EA22B287EA630> I<B53B87FFFC03FFF0A33D0FFC003FE0007FC0D8
07F06D48EB3F0000036E48131E70131C6C7E03071418826C6C010F5CA26D6E1370017E01
191460A2017F6E13E06D01305CA20280EBFC01011FD9607C5BA290280FC0E07E03C7FCED
C03EA2D907E1EB3F06ED801F1786D903F3148CED000F17CCD901FEEB07D8A217F86D486D
5AA302786D5AA302306D5A3C287EA641> I<3B7FFFC00FFFE0A3000390390007FE00C6EC
03F86D14E06D5C02805B6D6C48C7FC010F130E903807E00C6E5A903803F83801015B6D6C
5A6E5AEC7F80143F141F6E7E81141FEC3BF0EC71F8ECE1FCECC0FE903801807E01037FD9
07007F010E6D7E010C130F011C6D7E498001F86D7E000181D80FFC497EB590381FFFF8A3
2D277FA630> I<B539C007FFE0A32707FC000113006C48EB007C0001157816707F000015
607F017E5CA26D495AA2EC8003011F91C7FCA290380FC006A2ECE00E0107130CA26D6C5A
A2ECF8380101133014FC01005BA2EC7EC0A2147F6E5AA26EC8FCA3140EA2140CA2141C14
18A25CA25C1238007C13E000FE5B13015C49C9FCEA7C07EA700EEA383CEA1FF8EA07E02B
3A7EA630> I<001FB61280A29038E0007F90C71300001E14FE001C495A140300185C0038
495A4A5A0030131F5D4A5A4AC7FCA2C712FE495A13035C495A495A131F9138C00180EB3F
80EB7F00A213FE485A000314035B48481400485A001F5C495B485A48C7123F4849B4FC90
B6FCA221277EA628> I<153FEC03FFEC0FE0EC3F80EC7E00495A5C495AA2495AB3AA130F
5C131F495A91C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE133F806D7E130F80
1307B3AA6D7EA26D7E80EB007EEC3F80EC0FE0EC03FFEC003F205B7AC32D> I<12FCEAFF
C0EA07F0EA01FCEA007E6D7E131F6D7EA26D7EB3AA801303806D7E1300147FEC1FC0EC07
FEEC00FFEC07FEEC1FC0EC7F0014FC1301495A5C13075CB3AA495AA2495A133F017EC7FC
485AEA07F0EAFFC000FCC8FC205B7AC32D> 125 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft ecbx1440 14.4 35
/Ft 35 122 df<151E153E15FE1403140F147FEB07FF0003B5FCB6FCA3EBF87FEAFC00C7
FCB3B3B3A6007FB712FCA52E4E76CD42> 49 D<EC1FFE49B512F0010F14FC013FECFF80
4915E02701FF803F7F2703FC000713FCD807F001017F48486D7FD81F806E138048C87E70
13C0D87FE016E001F8806D16F000FF817F7013F8A56C5AA26C5A6C5AEA0380C914F05EA2
18E05E18C05E18804C13005F4C5A4C5A5F4B5B4B5B4B5B94C7FCED0FFC4B5A4B5AED7FC0
4B5A4A90C8FCEC03FC4A5A4A4814F84A5A4A5A4AC8FC02FEEC01F0495A495A495A5CD90F
80140349C8FC013E1507017FB7FC90B812E05A5A5A5A5A5A5AB9FC18C0A4354E7ACD42>
I<913807FFC0027F13FC0103B67E010F15E090261FF80313F890267FC0007F01FEC7EA3F
FE48488148486E138013FE486C6C6D13C0804817E080A66C5B18C06C5B6C90C75AD80038
168090C8FC4C1300A24C5A5F4C5A4B5B4B13C0030F5BDB7FFEC7FC91387FFFF816C016FC
EEFF80DA000313E09238007FF8EE3FFE707E70138018C07013E018F07013F8A218FC82A2
18FEA3EA03C0EA0FF0EA3FFC487EA2B5FCA218FCA25E18F8A26C4816F0495C4916E0D83F
E04A13C06C485CD80FF04A1380D807FE91387FFE003B03FFE003FFFC6C90B65A6C6C15E0
010F92C7FC010114FCD9001F1380374F7BCD42> I<17FC1601A216031607160FA2161F16
3F167FA216FF5D5DA25D5D5D167F153E157E15FC15F8EC01F01403EC07E015C0EC0F8014
1FEC3F00143E5C14FC495A5C495A1307495A5C49C7FC5B137E137C5B1201485A5B485A12
0F485A90C8FC123E127E5ABA1280A5C901FCC7FCAF021FB71280A5394F7CCE42> I<486C
150601F0153E01FEEC01FED9FFF0133F91B65A5F5F5F5F5F94C7FC16FC5E16E093C8FC15
FC01F0138091CAFCAC913807FF80023F13F891B512FE01F36E7E9026FFFC0113E09139E0
007FF891C76C7E496E7E01F86E7E5B7013804916C0C9FC18E08218F0A418F8A31203EA0F
E0EA3FF8487EA212FF7FA218F0A25B5E6C4816E05B01C016C06CC85A18806C6C4A13007F
D80FF04A5A6C6CECFFFCD803FE4913F02701FFE00F5B6C6CB612806D92C7FC010F14F801
0114C09026003FFCC8FC354F7ACD42> I<ED07FE92B512C0020314F0021F14FC91397FFC
01FE9139FFE0007F01030180EB3F804990C7121F4948EC7FC0494814FF4948010313E049
5A49485B5A485BA2485BA2486F13C091C7FC4803001300177E94C7FC5AA25B127FA2ED3F
F04AB5FC020714C000FF4914F091391F807FF891393E001FFE02786D7E4A6D13807013C0
6D5A4A6D13E018F05C7013F8A291C813FCA44916FEA3127FA6123FA37F6C17FCA36C17F8
5E7E6E15F06C17E06C6D5B6E15C06C4B13806D6C491300D93FFC495A6DB4EBFFFC010790
B512F06D5D01001580021F01FCC7FC020313C0374F7BCD42> I<121F7F7FEBFF8091B8FC
A45A18FE18FC18F818F0A218E018C018804817000180C8123E007EC9127E5F007C4B5A4C
5A5F16074C5A484B5A4CC7FC167E167CC912FC4B5A4B5AA24B5A150F4B5AA24B5AA24BC8
FC5DA25C5D1403A214075D140FA3141FA2143FA34A5AA414FFA65BAB6D5B6E5A6E5A6E5A
385279D042> I<173FA24D7EA34D7EA24C7FA34C7FA24C7FA34C7FA24C7FA34C7F163E83
047E80EE7C3F04FC8016F8830301814C7E03038116E0830307814C7E030F81168083031F
811600834B81033E80037E82157C8403FC824B800201835D840203834B800207835D92B8
FC4A83A34A8392C9FC4A83143E85027E84027C8202FC845C850101854A820103855C8501
07854A82A2494884D93FF082B600F0020FB712C0A55A547CD363> 65
D<B912FEF0FFF019FE737E1AE0D8000F01C0C7001F7F06037F727F726C7E867313807313
C0A27313E0A37313F0A94F13E0A34F13C01B80614F1300624F5A06035B4E13E0063F5B92
B8C7FC19F8A2F1FF8003C0C7001F13E0060113F89538007FFE737E070F13C01BE07313F0
851BF87313FCA27313FEA31BFFA91BFEA2611BFCA2614F13F81BF0614F13E0077F13C04E
B51280060FEBFE00BB5A1AF01AC04FC7FC19C050527BD15D> I<932603FFF01407047F01
FF140F0307B600E0131F033F03F8133F92B700FE137F02039126C003FF13FF020F01F8C7
EA3FC1023F01C0EC0FE391B5C80003B5FC4901FC814949814901E082011F498249498292
CA7E4948834948835A4A83485B4885A24849187FA2485B1B3FA2485B1B1FA25AA21B0091
CDFCA2B5FCAE7EA280A36C1A1FA36C7FA21B3F6C7F1B3E6C7F1B7E6C6D187C6C1AFC6E18
F86C19016D6CEF03F06D7E6FEE07E06D6DEE0FC001076DEE1F806D01F8EE3F006D6D16FE
6D01FF4B5A023F01C0EC07F8020F01FCEC3FF00203903AFFC001FFC0020091B6C7FC033F
15FC030715F0DB007F1480040301F0C8FC505479D25F> I<BAFC19F819FF1AE01AF8D800
0701F0C7001F13FE06017FDE003F13C0070F7F07037F737F737F747E747E747F86747F88
86888688A2747FA3881B7FA288A51D80AF1D00A564A21BFF64A3505BA2505BA2505BA250
5B505B99C7FC505A1A7F4F485A4F13F0070F5B073F5B4EB55A061F49C8FCBB12F81AE097
C9FC19F896CAFC59527CD165> I<BB12FEA5D8000F01E0C700077FF0007F191F19078585
8586A2F23F80A21A1FA31A0FA4DD01F014C01A07A497C7FCA21703A31707170F171F17FF
92B6FCA5EDE000171F170F17071703A317011BF8A3F201F0A394C8FCA21A03A21BE0A21A
07A31A0F1BC01A1F1A3FA21A7F1AFF4F13801907191F197F060FB5FCBCFCA21B00A34D52
7CD156> I<B81280A5D8000701F0C7FCB3B3B3B2B81280A529527DD130> 73
D<B912FCF0FFE019FE737E1AE0D8000F01E0C7003F7F060313FC06007F737E7313807313
C07313E0851BF0A21BF885A21BFCA91BF8A3611BF0A21BE04F13C0614F13804F13004F5A
060713F8063F5B92B812C097C7FC19F8198003E0CBFCB3AEB712FEA54E527CD15A> 80
D<B912E018FF19F019FE737ED8000701F0C714E0060F7F060313FC06007F737E737F8587
737FA28785A287A863A261636361634F90C8FC4F5A4F5A06035B060F13E095B5128092B7
48C9FC19F019C019F09226F0000713FC050013FF063F7F727F727F727F727FA2727FA284
86A886A71D707513F8A2851C017301C013F0A273EBE003B86C6D9038F007E0739038FC1F
C0070190B51280736C1400080F5BCE13F85D537CD162> 82 D<EC3FFE0107B512E0011F
14FC017F14FF2701FFC00F13C02703FE00037F486C01007F6E6D7E486D80707EA2707EA3
707F6C5B6C90C7FC6C5AC9FCA60307B5FC0203B6FC147F0103B7FC011FEBF00F017F1300
EBFFFC000313F04813C0485B4890C7FC5A5B485AF081F012FF5BA35EA26D5C127F6D5C00
3F03F713C36DD901E314E06CD9C00714FF00079026F01F8114C06C90B5C61480C602FC6D
1300011F01F0EB3FFC01010180EB07F03C387CB642> 97 D<913803FFE0023F13FE91B6
7E010315E0010F9038003FF8D93FFCEB07FC4948497E4948131F4849497E485B485BA248
90C7FC5A5B003F6F5A705A705A007F92C8FC5BA312FFAD127F7FA3123F7F6CEE0F80A26C
6D141F18006C6D5C6C6D143E6C6D147E6C6D5C6D6C495A6DB4EB07F0010F9038C01FE06D
90B5128001014AC7FCD9003F13F80203138031387CB63A> 99 D<943803FF80040FB5FC
A5EE003F170FB3A4913803FF80023F13F849B512FE0107ECFF8F011F9038C03FEF90273F
FE0007B5FCD97FF8130149487F484980484980484980488291C8FC5A5B123FA2127F5BA3
12FFAD127FA37F123FA3121F7F6C5E6C6D5C5F6C6D91B5FC6C6D5B6C6D4914E0D97FFCD9
0FEFEBFF80D91FFFEB7F8F010790B5120F010114FC6D6C13E00207010049C7FC41547CD2
49> I<913807FF80027F13F849B512FE01076E7E011F010313E0903A3FFC007FF0D97FF0
6D7E49486D7E4849130F48496D7E48824890C77E1880485A82003F17C0A3485A18E082A2
12FFA290B8FCA401FCCAFCA6127FA37F123FA2EF03E06C7E17076C17C06C6D140F18806C
6D141F6C6DEC3F006C6D147ED97FFC495AD91FFFEB07F86D9038E03FF0010390B512C001
005D023F01FCC7FC020113E033387CB63C> I<ED1FF8913803FFFE020FEBFF80023F14C0
9139FFF83FE001039038E0FFF049138049010113F85BEB3FFEA2EB7FFCA26F13F0495AEE
7FE0EE1F8093C7FCAEB712C0A5C601F8C8FCB3B3A7B612FEA52D547CD328> I<DA1FFE14
FE49B539E007FF80010FDAFC1F13C0013FDAFF7F13E090267FF807EBFF072701FFE001EB
F07F48497E484990387FF83F91C7003F14C048EEFC1F489338FE070049021F90C7FCA200
3F82A9001F5EA26D143F6C5E6C5E6E137F6C6D495A6C6D485B6CD9F80713804890B6C8FC
D803EF14FC01C114E02707C01FFEC9FC49CBFCA2487EA37FA27F13FC90B612FE6CEDFFF0
17FCEFFF806C8318F06C836C837F48B87E1207D80FFCC700037F4848EC003F4848150F48
486F138083485A83A56D5D007F18006D5D003F5F6C6C4B5A01FE153FD807FFED7FF06C01
C049485AC601FC011F1380013FB648C7FC010F15F8010115C0D9000F01F8C8FC3B4F7CB5
42> I<EB3FF8B5FCA51203C6FCB3A4EE1FFC93B57E030314E0030F14F892391FC07FFC92
397E003FFE03F86D7EECF9F04B6D7FECFBC0ECFF8092C76C7FA25CA25CA45CB3ACB6D8F8
07B612C0A542537CD249> I<133FEBFFC0487F487FA2487FA66C5BA26C5B6C5B013FC7FC
90C8FCAEEB1FF8B5FCA512017EB3B3A6B612F0A51C547CD324> I<EB3FF8B5FCA51203C6
FCB3B3B3B1B612F8A51D537CD224> 108 D<D93FF0D91FF84AB47EB591B56C010F13F803
0302E0013F13FE030F6E90B6FCDB3F809027F803F80F7F922A7E007FFC07E0077F000302
F890283FFE0F80037FC6D9F1F0011F49487EDAF3E0DAFF3E814B153CDAF7805D92C76C49
6D7F14FF4A5EA24A5EA34A5EB3ADB6D8F80FB66CB612F8A565367BB56E> I<D93FF0EB1F
FCB591B57E030314E0030F14F892391FC07FFC92397E003FFE000302F86D7EC6EBF1F04B
6D7FECF3C0ECF78092C76C7F14FF5CA25CA45CB3ACB6D8F807B612C0A542367CB549> I<
913801FFC0023F13FE91B67E010315E0010F018013F8903A3FFC001FFED97FF0EB07FF49
486D7F48496D7F48496D7F91C8127F4883488349153F001F83A2003F8349151FA2007F83
A400FF1880AC007F1800A3003F5F6D153FA2001F5FA26C6C4B5AA26C6D4A5A6C5F6C6D49
5B6C6D495B6D6C4990C7FCD93FFCEB1FFE6DB46CB45A010790B512F0010115C0D9003F49
C8FC020313E039387CB642> I<D93FF8EB7FF0B50107B5FC031F14C0037F14F09126F9FF
0013FCDAFFF8EB3FFF000302E0010F7FC602806D7F92C76C7F4A824A804A6E7F85187F85
A2183F85A4721380AD4E1300A44E5AA26118FF616E5C616E4A5B6E4A5B6F495B03E04990
C7FC6FEB7FFE913AF9FE01FFF802F8B65A033F14C0030749C8FC030013E093CAFCB1B612
F8A5414D7DB549> I<90393FF001FCB590380FFF804B13E0037F13F09238FE1FF89138F1
F83F00019138F07FFC6CEBF3E015C0ECF780A2ECFF00EE3FF84AEB1FF0EE0FE093C7FC5C
A45CB3ABB612FEA52E367DB535> 114 D<903903FFC00E011FEBFC1E90B6127E000315FE
3907FE003FD80FF0130F4848130348481301491300127F90C8127EA248153EA27FA27F01
F091C7FC13FCEBFF806C13FEECFFF06C14FE6F7E6C15E06C816C15FC6C81C681133F010F
15801301D9000F14C0EC003F030713E0150100F880167F6C153FA2161F7EA217C07E6D14
3F17807F6DEC7F0001F85C6DEB03FE9039FF801FFC486CB512F0D8F81F14C0D8F00791C7
FC39E0007FF02B387CB634> I<147CA614FCA41301A31303A21307A2130F131F133F137F
13FF1203000F90B512FEB7FCA426007FFCC8FCB3A9EE0F80ABEE1F006D7EA2011F143E80
6D6D5A6DEBC1F86DEBFFF001005C023F1380DA03FEC7FC294D7ECB33> I<D93FF8913801
FFC0B50207B5FCA50003ED001FC61607B3AE5FA35FA25F137F5F6D6C14F7DC01E713F06D
6CD907C7EBFFC0903A0FFF801F876D90B51207010114FC6D6C13F0020701C091C7FC4237
7CB549> I<B600E090381FFFFCA5000101F8C7000113006CEE007C6E15FC017F5E801701
6D6C5D17036D5E6F13076D5E6F130FA26D6D5C171F6D93C7FC6F5B6D153E6F137E6D157C
8117FC027F5CEDFE01023F5CEDFF036E5C168316876E5C16CF6E5C16FF6E91C8FCA36E5B
A26E5BA26F5AA36F5AA26F5AA26F5AA23E367DB445> I<B6D8F001B512FCA5C66C48C738
1FF8006D6CEC0FE06D6D495A606D6D49C7FC6D6D137E6D6D13FE6D6D485A4C5A6D01FC5B
6E6C485A6E6C485A161F6EEBBF806E01FFC8FC6E5B5E6E5B806E7F6F7EA26F7E834B7F92
B5FC83DA01FB7FDA03F17FDA07F07F4A5A4A486C7E4B6C7E4A486C7F147E02FE6D7F4948
6D7F49486D7F4A8149487F49486D7F011F6F7ED97FE06E7EB500FE0107B6FCA540357EB4
45> 120 D<B600E090381FFFFCA5000101F8C7000113006CEE007C6E15FC017F5E6E1401
013F5E8017036D6D5C17076D5E6F130F6D5E6F131F6D93C7FC815F6D6D133E177E6D157C
6F13FC027F5C811601DA3FFF5B16036E5C16876E5C16CF6E5C16EF16FF6E91C8FCA26E5B
A26E5BA26F5AA36F5AA26F5AA26F5AA35E151F93C9FC5D153E157ED81FC0137C487E486C
13FC486C5B14015D4A5A14074A5A6C48485A4948CAFC495A383F81FC6CB45A6C5B000313
C0C648CBFC3E4D7DB445> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu ecrm1000 10 63
/Fu 63 123 df<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007
017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C49
7E267FFFE0B512C0A32A3B7FBA2E> 28 D<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83
F00F903C07E001CFC00380903C1F8000FF0001C090273F0007FE130F017E4948497EA249
5CA248485C03076E5A03030203C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3
AA486C496C497E267FFFE0B500C1B51280A3413B7FBA45> 30 D<030C497EA2031C1303
031891C7FCA303385B03301306A30370130E0360130CA303E0131C4B1318A3020114384B
1330A30203147092C71260A34A14E0007FB91280BA12C0C7270C000180C7FCA2021C1303
021891C8FCA402385B02301306A50270130E0260130CA2BA12C06C1880280001C00038C8
FC4A1330A30103147091C71260A34914E001065CA3010E1301010C5CA3011C1303011891
C9FCA301385B01301306A30170130E0160130CA23A4A7BB945> 35
D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FC
A25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E
1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20> 40
D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7F
A21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A2
5BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20> I<1530B3A8B912FCA2C800
30C8FCB3A836367BAF41> 43 D<121C127FEAFF80A213C0A3127F121C1200A412011380
A2120313005A1206120E5A5A5A12600A19798817> I<B512FCA516057F941C> I<121C12
7FEAFF80A5EA7F00121C0909798817> I<1506A2150E150CA2151C151815381530A21570
1560A215E015C0A214011580A2140315005C1406A2140E140CA2141C1418A214381430A2
1470146014E05CA213015CA2130391C7FCA25B1306A2130E130C131C1318A213381330A2
13701360A213E05BA212015B120390C8FCA25A1206A2120E120CA2121C1218A212381230
12701260A212E05AA21F537BBD2A> I<EB03F8EB1FFF90387E0FC09038F803E03901E000
F0484813780007147C48487FA248C77EA2481580A3007EEC0FC0A500FE15E0B3007E15C0
A4007F141F6C1580A36C1500A26C6C133EA26C6C5B6C6C5BEBF0013900F803E090387E0F
C0D91FFFC7FCEB03F823397DB62A> I<EB01C013031307131F13FFB5FCA2131F1200B3B3
A7497E007FB512F0A31C3779B62A> I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF000
1E6D7E001C6D7E486D7E5A6E7E126012FE6CEC7F807FA56CC7FC121CC8FCEDFF00A25D14
015D14035D4A5A4A5A5D4A5A4AC7FC147E5C495A14E0495A495A49C8FC011EEB01805B5B
49130348481400485A485A90C75A48B6FC5A5A485CB6FCA321377CB62A> I<EB07F8EB3F
FF90B512C03901F80FF03903C007F848486C7E390E0001FEEA0F80391FE000FF7FA56C5A
6C5AC7485AA25D14035D4A5A5DEC0F80027FC7FCEB1FFCECFF809038000FE06E7EEC01FC
816E7EED7F80A216C0A2153F16E0A2121EEA7F80A2487EA316C0157F491480007EC7FC00
70ECFF006C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF823397DB6
2A> I<1538A2157815F8A2140114031407A2140F141F141B14331473146314C313011483
EB030313071306130C131C131813301370136013C01201EA038013005A120E120C5A1238
12305A12E0B712F8A3C73803F800AA4A7E0103B512F8A325387EB72A> I<0006140CD807
80133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCAAEB07F8EB1FFE9038
780F809038E007E03907C003F0496C7E130000066D7E81C8FC8181A21680A4121C127F5A
7FA390C713005D12FC00605C12704A5A6C5C6C1303001E495A6C6C485A3907E03F800001
B5C7FC38007FFCEB1FE021397CB62A> I<EB03F8EB1FFF017F13C09038FC07F03901E001
F83903C0007C4848133C90C7123E48141E000E141F001E80A3121FA26D5B6D131E7FD80F
F85B6D137C01FF13786C6D5A6CEBE3E0ECF780C601FFC7FC6D5A6D6C7E010F13E0013F7F
01F97F3901E07FFE48486C7E380F800F48486C1380001E010113C0487F007C143F0078EC
1FE0150F00F81407481403A21501A36C15C0A200781403007C15806C14076CEC0F006C6C
131ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC23397DB62A> 56
D<EB03F8EB1FFF017F13C03901FC07E048486C7E3907E001F8000F6D7E4848137E5B003F
80A248C71380A25AED1FC0A516E0A56C143FA36C7E157F121F6C6C13FF6C6C13DF000313
013901F0039F3900FC0F1FD93FFC13C0EB07F090C7FCA2153F1680A216005D120F486C13
7E486C5BA24A5A4A5A49485A381F000F001CEB1F80260F807FC7FC3807FFFE000113F838
003FC023397DB62A> I<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7F
EC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81
A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213
E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E> 65
D<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03FC000F0FD90FF0EB03
9F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F4848150FA248481507A2
485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A3123F7F001F160318006C
7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB03C0D903FC
EB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D7BBA3C> 67
D<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF
3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F
80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F> I<
B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED01
80A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612
C0A32F397DB836> 70 D<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC00
0787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A2
48481503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0
A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03
C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41>
I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E> 73
D<B612E0A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A21601160316
0FEE1FE0486D13FFB8FCA32D397DB834> 76 D<B5933807FFF86E5DA20001F0FC002600
DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC03
03A2027F1406A36E6C130CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC
0180A3913900FE0300A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D
48497EB500C00203B512F8A2ED018045397DB84C> I<B5913807FFFE8080C69238007FE0
6EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E
81140F6E7E8114036E7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01
FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E48
7ED80FFC151EB500C0140EA2170637397DB83E> I<EC03FF021F13E09138FE01FC903901
F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003
167F4848ED3F80A24848ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300FF
17FCAC007F17F86D150FA3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F0003
17006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC
903900FE01FC91381FFFE0020390C8FC363D7BBA41> I<B712C016FC16FF0001D9800013
C06C90C7EA1FE0707EEE03F883707EA2707EA21880A71800A24C5AA24C5A5FEE0FF04C5A
EEFF8091B548C7FC16F091CAFCB3A5487FB6FCA331397EB838> I<B612FEEDFFE016F800
0190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE
3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583
A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07
F0393B7DB83D> 82 D<D90FF813C090383FFE0190B512813903F807E33907E000F74848
137F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D1400
6C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F
020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E0
6C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C001
90C7FC253D7CBA2E> I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F0007816
0000701770A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A335
397DB83C> I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B217
0E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7
FC91387F807E91381FFFF8020713E09138007F80373B7DB83E> I<B5D8FC07B5D8F001B5
FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C
1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE
0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC93
38C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6
EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A20200
93C8FC4B80503B7EB855> 87 D<EAFFFCA2EAFC00B3B3B3B3A7EAFFFCA20E5379BD17>
91 D<12C0A27E1260A21270123012381218A2121C120CA2120E1206A212077EA27F1201
7F1200A27F1360A213701330A213381318A2131C130C130E1306A213077FA2801301A280
1300A280146014701430A214381418A2141C140CA2140E1406A214078015801401A215C0
1400A215E01560A215701530A215381518151C150CA2150E1506A21F537BBD2A> I<EAFF
FCA21200B3B3B3B3A712FFA20E537FBD17> I<007FB81280B912C0A26C17803204797041
> 95 D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C
5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12
FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A00
7F8007C026277DA52A> 97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E90
39F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167F
AA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881
E07E903800FFF8C7EA1FC0283B7EB92E> I<EB03FC90381FFF8090387E03E03901F80070
484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA
127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07
C090381FFF00EB07F81F277DA525> I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90
387E078F9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E
12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF3900
7C078F90381FFE0FD907F813C0283B7DB92E> I<EB07F8EB1FFF90387C0FC03901F803E0
3903F001F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA2
48C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C
137090387E03E090381FFF80903803FC0020277EA525> I<147E903803FF8090380FC1E0
EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E
387FFFF8A31C3B7FBA19> I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F0
0FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A
6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CEC
FF804815C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F0
6CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26
387EA52A> I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F380
0FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E> I<EA03
80EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387E
B717> I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A
5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E
811400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C> 107
D<EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917> I<2703F00FF0EB1FE000
FFD93FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013
CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA3
40257EA445> I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F700
13FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E> I<EB03FE90380FFF
8090383E03E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815
E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D
131F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>
I<3903F01FE000FFEB7FF89038F1E07E9039F3801F803A07F7000FC0D803FEEB07E049EB
03F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB
0FE001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328
357EA42E> I<D903F813C090381FFE0190387E07819038FC01C33903F000E30007147748
48133749133F001F141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C
6C137F6C6C13EF3901F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FC
A328357DA42C> I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE
9038EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421> I<EBFF03000313
E7380F80FF381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C
13F86C7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C1307
7EEC0F00B4131E38F3C07C38E1FFF038C03F801A277DA521> I<1318A51338A31378A313
F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E1300
6D5AEB0FFEEB01F81A347FB220> I<D803F0EB07E000FFEB01FFA3000FEB001F00031407
B3A4150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03
FC07E00029267EA42E> I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D1480
00011500A26C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001
075BA2903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C> I<B53A1F
FFE03FFEA3260FF8009038000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB
0300A36C6CEC8006156FA2017E9038EFC00C15C7171CD93F01EBE01815830281EBF038D9
1F831430150102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A
133FA2010192C7FC4A7FA20100141E4A130E0260130C37257EA33C> I<B538807FFFA33A
03FE003FF00001EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF1
80EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F090380703F8EB06
01496C7E011C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A329247F
A32C> I<B538803FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406A2
017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FC
A214FF6D5AA2147CA31438A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306EA
FC0EEA701C6C5AEA1FF0EA0FC027357EA32C> I<003FB512FCA2EB8003D83E0013F8003C
EB07F00038EB0FE012300070EB1FC0EC3F800060137F150014FE495AA2C6485A495AA249
5A495A495AA290387F000613FEA2485A485A0007140E5B4848130C4848131CA24848133C
48C7127C48EB03FC90B5FCA21F247EA325> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv ecbx1000 10 18
/Fv 18 119 df<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015F3020380
15E1A202078015C0020F80ED807FA2021F80ED003F4A80023E131FA2027E80027C7F02FC
814A7FA20101824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C8123F498201
3E151FA2017E82017C8101FE83B500F80107B61280A4413A7DB948> 65
D<B612FCA439007FF800B3B3ADB612FCA41E397DB824> 73 D<EDFFF8020FEBFF80027F
14F0903A01FFC01FFC010790380007FFD91FFC010113C0D93FF06D6C7E49486E7E49486E
7E48496E7E48834890C86C7EA248486F1380A248486F13C0A2003F18E0A348486F13F0A4
00FF18F8AC007F18F06D5DA3003F18E0A26D5D001F18C0A26C6C4B13806C18006E5C6C6D
4A5A6C5F6C6D4A5A6D6C4A5AD93FFC49485A6DB401075B0107D9C01F90C7FC010190B512
FC6D6C14F0020F1480020001F8C8FC3D3B7BB948> 79 D<B8FC17F017FEEFFF8028007F
F8000F13C0040113E07013F0EF7FF8EF3FFCA2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8
EFFFF04C13E0040F13C091B7120017FC17E002F8C9FCB3A4B612FCA438397DB841> I<EB
3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA03
80C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF5BA4
15FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE0032A25
7DA42E> 97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF00013
804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F06E
133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9C0
0390C7FC2F3A7EB935> I<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C048
485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01E0
6C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F13F0010113802325
7DA42A> I<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F0003
EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B000F
5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010113012F3A7DB935> I<
903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC1F
E05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C
6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E02525
7DA42C> I<EA01F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077E
B3A9B512F8A4153B7DBA1B> 105 D<01FEEB7FC000FF903803FFF8020F13FE91381F03FF
DA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430257D
A435> 110 D<903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48486D
7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F5D6D1307001F5DA2
6C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA430>
I<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF00113800003496C13C00280EB7F
E091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E137F6E14E06EEB
FFC0DAF00313809139FC07FE0091383FFFF8020F13E0020390C7FC91C9FCACB512FCA42F
357EA435> I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5C
A29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427> 114
D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C130012FC15787E
7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F9038007FFE
140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512C000F81400
38E01FF81F257DA426> I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7
FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D357EB425>
I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9C03E13FF90
387FFFFC011F13F00103138030257DA435> I<B539F001FFF8A4000390C7EA1F00161E6E
133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5C
ECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA22D
257EA432> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw ecrm1200 12 48
/Fw 48 126 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113
80120313005A1206120E5A5A5A12600B1D78891B> 44 D<B612C0A61A067F9721> I<12
1EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B> I<160CA2161C1618A21638163016
701660A216E016C0A21501168015031600A25D1506A2150E150CA2151C151815381530A2
15701560A215E05DA214015D140392C7FCA25C1406A2140E140C141C1418A214381430A2
14701460A214E05C13015CA2130391C8FCA25B1306130E130CA2131C1318A213381330A2
1370136013E05BA212015BA2120390C9FCA25A1206120E120CA2121C1218A21238123012
701260A212E05AA226647BCA31> I<14FF010713E090381F81F890383E007C01FC133F48
48EB1F8049130F4848EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390
C8FC4815FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6C
EB07E0000315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE00100
90C7FC28447CC131> I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E
000EC7EA7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F15
03A46C4813076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A
5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A
4848143848C81230000E1570001FB612F0A25A5AB712E0A326427BC131> 50
D<EC07FCEC3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C71258017EEB01
FC01FE1303491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA3127FA290
38007F80903801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB
03F04914F8150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14FC120F
ED03F86C7EED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFF
F8010313E00100138028447CC131> 54 D<14FF010713E0011F13F890387F00FE01FC13
3FD801F0EB1F804848EB0FC049EB07E00007EC03F048481301A290C713F8481400A47FA2
6D130116F07F6C6CEB03E013FC6C6CEB07C09039FF800F806C9038C01F006CEBF03EECF8
7839007FFEF090383FFFC07F01077F6D13F8497F90381E7FFFD97C1F1380496C13C02601
E00313E048486C13F000079038007FF84848EB3FFC48C7120F003EEC07FE150148140016
FF167F48153FA2161FA56C151E007C153EA2007E153C003E157C6C15F86DEB01F06C6CEB
03E06C6CEB07C0D803F8EB1F80C6B4EBFF0090383FFFFC010F13F00101138028447CC131
> 56 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A5121EEA7F80A2EAFFC0A4EA
7F80A2EA1E000A2B78AA1B> 58 D<ED1FFC4AB512C0913907E003F0021EC7123C027814
0FD901E0EC03C0D90380EC00E0010FC91278011C161C4982498249707E49160100018448
48D90FF06D7E90C7D83FFC146048DAFC0F1470000E902703F003C07F000C902707C000E0
1318001CD91F800170131C0018013F6E130C003891C76C130E0030017E91380FF00614FE
00704902071307D8600183A2495AA200E019804848481601AB6C6C7E1260A26D7E1903D8
7000180000306D140F147E00386D141F00186E013F5B001C011F02771306000CD907C090
38E3F80E000E902703F003C35B6C903B00FC0F00FC386CDA3FFCEB7FF06DD90FF0EB0FC0
6C6C90CBFC12007F13707F7F010FEF1F80D90380167FD901E0923803FE00D90078ED1FF0
021E913801FF80DA07E0D97FF8C7FC0201B6C8FCDA001F13C041477BC54C> 64
D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA3ED30FFA203707FED607FA203E07FEDC03F
A2020180ED801FA2DA03007F160FA20206801607A24A6D7EA34A6D7EA34A6D7EA2027081
0260147FA202E08191B7FCA249820280C7121FA249C87F170FA20106821707A2496F7EA3
496F7EA3496F7EA201788313F8486C83D80FFF03037FB500E0027FEBFFC0A342477DC649
> I<B8FC17E017FC00019039C00003FF6C6C4801007FEF3FC0717E717E717E8417038417
0184A760A21703601707604D5A4D5AEF7FC04DC7FCEE03FEEE3FF091B65A17FC0280C7B4
7EEF1FC0EF0FF0717E717E717E717E1980187F19C0A2183F19E0A8F07FC0A2198018FF4D
1300A24D5AEF0FFC4D5AEF7FE048486C903803FFC0B9C7FC17FC17C03B447CC345> I<DB
0FFE146092B500C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FC
EC03C74948EC01E74948EC00FF4948157F4948153F4948151F49C9120F485A4916071203
48481603A248481601A248481600A2123FA2491760127FA31900485AAE6C7EA21960A212
3F7FA2001F18E07F000F18C0A26C6C160119806C6C160312016DEE07006C6C16066D6C15
0E6D6C5D6D6C5D6D6C15786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC13FC
0203B512F0020014C0DB0FFEC8FC3B487BC546> I<B712FEEEFFE017F800019039C00007
FE6C6C48903800FF80EF3FC0EF0FF0717E717EEF00FE8484F03F80F01FC0A2F00FE019F0
180719F8A2180319FCA3F001FEA419FFAD19FEA3180319FCA319F8180719F0180F19E0A2
F01FC0F03F80A2F07F0018FE4D5A4D5AEF0FF0EF3FE0EFFF8048486C010790C7FCB812FC
17E04CC8FC40447CC34A> I<B6D8C003B6FCA3000101E0C70007138026007F80913801FE
00B3A991B7FCA30280C71201B3AC2601FFE0913807FF80B6D8C003B6FCA340447CC349>
72 D<010FB512FEA3D9000313806E130080B3B3AB123F487E487EA44A5A13801300006C
495A00705C6C13076C5C6C495A6CEB1F802603E07FC7FC3800FFFCEB1FE027467BC332>
74 D<B612F8A3000101E0C9FC6C6C5A5CB3B31830A418701860A518E0A3EF01C0A21703
1707A2170F173F177FEE01FF48486C011F1380B9FCA334447CC33D> 76
D<B56C020FB5FC8080C6040013F06D6CED1F80D96FF8ED0F00A2D967FC1506EB63FEA2EB
61FF01607FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E6F7EA2
6F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF70
1386A2EF7FC6EF3FE6A2EF1FF6EF0FFEA217071703A217011700A201F0167E183E487ED8
0FFF161EB500F0150EA2180640447CC349> 78 D<B712E016FF17C000019039C0003FF8
6C6C48EB03FCEE00FF717E717E717E717E717EA284170384A760A21707604D5AA24D5A4D
5A4DC8FCEE01FEEE07F8EE3FE091B6C9FC16FC913980007F80EE0FE0707EEE03FC707E16
0083717EA2717EA784A71A6084171FA21AE0716C13C02601FFE002071301B600C0168094
3801FC03943900FE0700CBEA3FFEF007F843467CC348> 82 D<49B41303010FEBE00701
3F13F89039FE00FE0FD801F8131FD807E0EB079F49EB03DF48486DB4FC48C8FC4881003E
81127E82127C00FC81A282A37E82A27EA26C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE
6CEBFFE06C14FC6C14FF6C15C0013F14F0010F80010180D9001F7F14019138001FFF0303
1380816F13C0167F163F161F17E000C0150FA31607A37EA36C16C0160F7E17806C151F6C
16006C5D6D147ED8FBC05CD8F9F0495AD8F07C495A90393FC00FE0D8E00FB51280010149
C7FC39C0003FF02B487BC536> I<003FB912F8A3903BF0001FF8001F01806D481303003E
C7150048187C0078183CA20070181CA30060180CA5481806A5C81600B3B3A54B7EED7FFE
49B77EA33F447DC346> I<B600C0010FB5FCA3000101E0C813F026007F80ED1F80F00F00
A21806B3B3A7180E6D6C150CA2181C131F6E1518010F163818306D6C1570606D6C14016D
6C5D6D6CEC0780027F4AC7FC6E6C131EDA1FE0137C913907FC03F00201B55A6E6C1380DB
07FCC8FC40467CC349> I<003FB500E0011FB5FCA3C691C7000713E0D93FFC020190C7FC
6D4815FC010F6F5A6D6C15E0A26D6C4A5A6D6C5D4DC8FC6D6D5B6E6C13065F6E6C131C6E
6C13185F6E6C13706E6C13605F913803FE01DA01FF5B4CC9FC6E1387ED7FC616CCED3FFC
6F5A5E6F7E6F7EA26F7E82A203067F150E92380C7FC04B6C7E15389238301FF04B6C7E15
E04B6C7E4A486C7E14034B6C7E02066D7F140E020C6E7E4A6E7E143802306E7E4A6E7E14
E04A6E7E49486E7E130349C86C7E496F7F5B496C8201FF83000701E0020313F8B500F802
1FEBFFF0A344447EC349> 88 D<EB07FC90383FFF809038F80FE03903C003F048C66C7E
000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC9038
0FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B176048C7FCA3153FA36D137F00
7F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03FF802701FFFC0113003A001F
E0007C2B2E7CAC31> 97 D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C
07E091387001F89039FDE0007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE
03F8A217FCA2160117FEAB17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F
80D9F380EB7E00D9E1C05B9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F
467DC436> I<EC7F80903803FFF090380FC07C90383F000F01FCEB03804848EB01C00003
140F4848EB1FE049133F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7F
A2123F16307F001F15706C6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F
131E90381FC078903807FFF001001380242E7DAC2B> I<167FED3FFFA315018182B3EC7F
80903803FFF090380FC07C90383F000E017E1307496D5AD803F87F48487F5B000F81485A
A2485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F6C6C5B00035C6C6C903807
7F806C6C010E13C0013F011C13FE90380FC0F8903803FFE09026007F0013002F467DC436
> I<EB01FE903807FFC090381F03F090387E00FC49137E48487F485A4848EB1F80000F15
C049130F121F484814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA212
3F16306C7E1670000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E
90381F80F8903803FFE0010090C7FC242E7DAC2B> I<EA01FC12FFA3120712031201B3EC
01FE913807FFC091381E07F091383801F802707FECE000D9FDC07F5C01FF147F91C7FCA2
5BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC436> 104 D<EA01E0EA07F8A2487EA4
6C5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C> I<
143C14FFA2491380A46D1300A2143C91C7FCADEC7F80EB3FFFA31300147F143FB3B3AA12
3E127F39FF807F00A2147EA25C6C485A383C01F06C485A3807FF80D801FEC7FC195785C2
1E> I<EA01FC12FFA3120712031201B3A292381FFFE0A36F1300ED07F816E05E5E030EC7
FC5D5D5D5D4A5A4A5A4AC8FC5CEC3F804A7E14FF9038FDCFE09038FF8FF01407496C7E01
FC7F14016E7E81816F7E82151F6F7E821507826F7E8282486C491380B5D8F81F13F8A32D
457DC433> I<EA01FC12FFA3120712031201B3B3B3A5487EB512F8A315457DC41C> I<D8
01FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F913C3C01FC07803F80000790
3C7000FE0E001FC0000349D97E1C130F2601FDC0D97F38804A143001FFDA3FF06D7E91C7
5BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B512E0A34B2C7DAB52> I<3901FC
01FE00FF903807FFC091381E07F091383801F8000701707F0003EBE0002601FDC07F5C01
FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36> I<EC7F809038
03FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E000F81A248
48147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A2001F157E6D
14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0FE903807
FFF89038007F802A2E7DAC31> I<3901FC03FC00FF90380FFF8091383C07E091387001F8
3A07FDE000FE00010180137F01FFEC3F8091C7EA1FC04915E049140F17F0160717F81603
17FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D15E0EE1FC06D143F17806EEB7E00D9FD
C05B9039FCF003F891383C0FE091381FFF80DA03FCC7FC91C9FCAE487EB512F8A32F3F7D
AB36> I<91387F8003903903FFE00790380FE07890393F801C0F90387E000E496D5AD803
F8EB039F0007EC01BF4914FF48487F121F5B003F81A2485AA348C8FCAB6C7EA3123F7F12
1F6D5C120F6D5B12076C6C5B6C6C497E6C6C130E013F131C90380FC0F8903803FFE09038
007F0091C7FCAEEEFF80033F13FEA32F3F7DAB33> I<3903F803F000FFEB1FFCEC3C3EEC
707F0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FE
A3202C7DAB26> I<90383FE0183901FFFC383907E01F78390F0003F8001E130148130000
7C1478127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14
C06C14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C
6C147C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26
> I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4
150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC0903800
7F001E3E7EBC26> I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA2
12006D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F
8013002F2D7DAB36> I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E12
00160C017F5CA280013F5CA26E1370011F146080010F5CA2ECF00101075CA26D6C48C7FC
A26E5A01011306A26D6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC
2E2C7EAA33> I<B500E0B539E03FFF80A30007903C000FFE000FFC00D803FCD903F8EB03
F8F001E0120103015D6D80000060A26D6E13036DD9037E91C7FCA20280017F5B013FD906
3F1306A2D91FC06E5AED0C1FA2D90FE06E5AED180FA2D907F06E5AED3007A2D903F86E5A
ED6003A2902601FCE06D5AEDC00117FCD900FFECFD80ED800017FF027F92C8FC92C77EA2
6E147E023E143EA2021E143C021C141CA2412C7EAA46> I<B539F007FFFCA30003D9C001
13C0C6496C1300017F14FC013F5C6E13E06D7E010F495A6D6C485A02F890C7FC903803FC
060101130E6E5A903800FF186E5AEC3FF05D141F140F6E7E81140FEC0DFCEC19FEEC38FF
4A7E9138603F8002C07F0101131F49486C7E02007F01066D7E010E1303496D7E013C8001
7C80D801FC1580D80FFE4913C0B5D8800F13FFA3302B7FAA33> I<B539F001FFFCA30007
90C7EA7FE06C48EC1F8000011600160E0000150C6D141C6D1418A26E1338013F1430A26D
6C5BA26E13E0010F5CA26D6C485AA2ECF803010391C7FCA2903801FC06A2ECFE0E010013
0CA2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C00
7E5BB4FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33> I<ED
0FC015FF913803F800EC0FE0EC3F804AC7FC5C495A5CA2495AB3AD495AA2495A131F495A
495A01FEC8FCEA07F8EAFFE0A2EA07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3AD6D
7EA2806D7E806E7EEC0FE0EC03F8913800FFC0150F226479CA31> 123
D<12FEEAFFE0EA07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3AD6D7EA2806D7E806E
7EEC0FE0EC03F8913800FFC0A2913803F800EC0FE0EC3F804AC7FC5C495A5CA2495AB3AD
495AA2495A131F495A495A01FEC8FCEA07F8EAFFE048C9FC226479CA31> 125
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx ecrm1728 17.28 21
/Fx 21 119 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F00C7FCB3B3A2120FEA
3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C3E74BD25> 58 D<170FA34D7EA24D7EA3
4D7EA34D7EA34C7F17DFA29338039FFC178FA29338070FFE1707040F7FEE0E03A2041E80
EE1C01A2043C80EE3800A24C80187FA24C80183FA24B4880181F0303814C130FA2030781
93C71207A24B81030E80A24B8284A24B8284A24B82197F03F0824B153FA20201834B151F
A202038392B8FCA24A83A292C91207020E8385A24A8485023C84023882A2027884027017
7FA202F0844A173FA24948841A1FA24948841A0FA249CB7F1A074985865B496C85497E48
486C4D7F000F01F8051F13F0B60407B612F0A45C657CE465> 65
D<DDFFF015C0040F01FF1401047F14E00303B600F81303030F9038E003FEDB3FFCC7007F
1307DBFFE0EC0FC002030180913803E00F4A48C83801F01F4A48ED0078DA3FF0EE3C3F4A
48161E4A48EE0F7F4949EE07FF4990CA7E495A4948834948835C013F197F4948183F495A
1B1F485B1B0F4890CCFCA248481907A2485A1B03121F5BA2123F1B015BA2127F98C7FCA3
5B12FFB0127F7FA4123FF301C07FA2121FA27F000F1A031C806C7EA26C7E1B076C6D1900
636C7F1B0E6D6C181E6D6C181C011F193C6E606D7E6D6C606D6C4D5A6D6D4C5A6D6D1607
6E6C4C5A6E6C4CC7FCDA0FFC163E6E6C16FC6E6C6CEC01F0020001F0EC07E0DB3FFCEC3F
8092280FFFE003FFC8FC030390B512FCDB007F14F0040F1480040001F8C9FC526679E361
> 67 D<B912F018FF19E019F8C601FCC8EA7FFED93FF892380FFF80011F04017F953800
7FF0F11FF8737EF103FE737E737F747E747E747E1A0F87747E1A0387747EA2741380A2F3
7FC0A21CE01B3FA21CF0A21B1F1CF8A31CFCA21B0FA41CFEAF1CFCA51B1F1CF8A4F33FF0
A21CE0A21B7F1CC01BFF1C80A2501300A2505A505AA2505A505A505A505A1AFF4F5B4F90
C7FCF107FCF11FF8F17FF0953801FFC0013F04075BD9FFFCDB7FFEC8FCBA12F819E096C9
FC18F0576278E167> I<933801FFE0043F13FF4BB612E003079038003FF8DB1FF0EB03FE
DB7FC0903800FF804A48C8EA3FE0DA03FCED0FF0DA0FF0ED03FC4A486F7E4A486F7E4A48
707E4ACA6C7E4948717E4948717E4948717E4948717E4948717E013F854A83017F864948
727EA24890CC6C7EA24848737EA24848737EA2000F87491907001F87A34848737EA4007F
1C80A24985A400FF1CC0AF6C6C4F1380A5003F1C006D61A3001F63A26D190F000F63A26C
6C4F5AA36C6C4F5AA26C6D4E5A6C636E18FF017F626D6C4D90C7FC6E5F011F616D6C4D5A
6D6C4D5A0103616E171F6D6C4D5A6D6D4C5ADA3FC04CC8FCDA1FF0ED03FE6E6C4B5A6E6C
4B5ADA01FFED3FE09126007FC0ECFF80DB1FF0D903FEC9FCDB07FFEB3FF8030190B512E0
DB003F91CAFC040113E05A6679E369> 79 D<DA07FF1403023F01F05B49B512FC010702
FF5B90260FFC0013C0D93FE090380FF01FD97F80EB03F801FEC86C5A4848157E4848ED1F
7F48486F5A4848815B001F824981003F8290CAFC4883A2007E83A212FE84A384A27EA36D
82A26C7EA26D93C7FC6C7E7F7F6C7E6D7E6C13E06C13FCECFFC06C14F86CECFF806C15F8
6DECFF80011F15E06D15F8010315FE01006F7E021F81020181DA003F80030380DB003F7F
04037FEE007FEF1FFF71138017037113C083A2F07FE0183FA2181F00E018F0180FA41807
A27EA47E19E0180F7E19C07E6C171F19806D163F6D17006D5E6D16FE486C5E6D4B5AD8FC
7F1503D91F80EC0FF026F80FE04A5AD907FCEC7F8029F001FFE003FFC7FC6D6CB512FC48
011F14F0020314C0489026001FFEC8FC3C6679E34B> 83 D<EC3FE0903803FFFE010F6D
7E90393FC03FE090397C000FF801F0EB03FC48486D7E48486D7E48486E7E48C86C7E7F01
F06E7E487E6D6E7EA3707EA36C5AEA03E0C9FCA6167FED7FFF020FB5FC91387FF8079038
01FF80903807FC00EB1FF0EB7FC0495AD803FEC7FC485A120F5B485A485AA24848EE01C0
A312FF5BA2160FA3161F6D141B007F153B16736D17806C6C9138E1FC03001FEC03C16C6C
903A0780FE0700D807FE49486C5A2701FF807CEB7FFE6C6CB4486D5A011F01E06D5A0103
90C7EA07E03A4179BF43> 97 D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FC0
923807FFFC031F13FF92397F007FC003F8EB0FF0DAC3E06D7EDAC780EB01FC02CFC87E02
DE157F02FC6F7E4A824A6F7E180F4A82727E5C727EA2851801A285A3841A80AD1A0060A4
61180361A21807616E5E180F6E4B5A6E5E02B8153F023C4B5A6E4BC7FC6E4A5A90263E07
80495A6E6CEB0FF090263C01F0495ADA007EEBFF806FB448C8FC0138010F13F890C81380
41657CE34B> I<181EEF3FFEEE07FFA4EE000F1703A21701B3AAEDFF80020F13F8023F13
FE9139FF803F81903A03FC0007C14948EB01E1D91FE0EB00F94948147D4948143D49C812
1F4848150F491507120348481503491501120F121F5BA2123F5B127FA45B12FFAD127F7F
A3123FA27F121FA26C6C1503A26C6C150712036D150F6C6C151F0000163D137F6D6CECF9
FF6D6CEB01F1D90FF0D903C113C06D6CD90F81EBFF80D901FFEB7F019039007FFFFC021F
13E00201010091C7FC41657BE34B> 100 D<EC03FE91381FFFE091B512F8903901FE03FE
903A07F0007F8049486D7ED93FC06D7E49C76C7E496E7E49140348488148481401000782
491400000F8283485A1880123F49153FA2007F17C0A35BA212FF90B8FCA30180CAFCA912
7F7FA3123FA27F121FEF01C06C7E17036C6C1680A26C6C15070001EE0F006D150E6C6C15
1E6D6C5C6D6C5C6D6C5CD907F0EB03E0D903FC495A902700FF803FC7FC91383FFFFC020F
13F00201138032417BBF3C> I<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FE092
3803FFFC030F13FFDB3F0013C00378EB1FE04B6D7EDAC1C06D7EDAC3808002C7C7120302
CE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A442
647CE34B> 104 D<1378EA01FE487E487FA66C90C7FC6C5AEA007890C8FCB3A2EB0780EA
0FFFB5FCA41203C6FCA2137FB3B3AC497E487FB61280A4195F7BDE25> I<EB0780EA0FFF
B5FCA41203C6FCA2137FB3B3B3B3AD497E487FB612C0A41A647BE325> 108
D<D903C0D97FE04AB47ED807FF902603FFFC020F13F0B5010F01FF023F13FCDB3F0001C0
9038FC03FF0378903C1FE001E0007F804B6D6C48486D7E0001D9C1C06D6C48C76C7E2700
7FC380DAFC0E8102C7C7000349140FD93FCE6F48810501160702DC5E02D8166002F89126
00FFE06E7E4A5EA34A5EA34A93C8FCB3B3496C4A6D4A7E496C4A6D4A7EB6D8F003B6D8C0
0FB6FCA4683F7CBE71> I<D903C0EB7FE0D807FF903803FFFCB5010F13FFDB3F0013C003
78EB1FE04B6D7E0001D9C1C06D7E27007FC3808002C7C71203D93FCE81170114DC14D802
F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A4423F7CBE4B> I<4AB47E
020F13F0027F13FE4AC67ED903F8EB1FC0D907E0EB07E0D91FC0EB03F849486D7E49C87E
01FE157F49814848ED1F80000317C04848ED0FE0A24848ED07F0A2001F17F8491503003F
17FCA3007F17FE491501A400FF17FFAC007F17FEA26D1503A3003F17FCA2001F17F86D15
07A2000F17F06D150F000717E06C6CED1FC0A26C6CED3F806C6CED7F00017F15FE6D6C49
5A6D6C495A6D6C495AD903F8EB1FC06DB4EBFF806D6CB448C7FC020F13F0020113803841
7BBF43> I<010FEB07F8D80FFFEB1FFEB590387FFF809238F81FC0913801E03F913903C0
7FE00003EB0780C6EB0F00140E6D5A0218EB3FC00238EB1F800230EB0600027090C7FCA2
146014E0A25CA55CB3B0497E4813F0B612F8A42B3F7BBE34> 114
D<9138FFC003010FEBF807017FEBFE0F3A01FF003F9FD803F0EB07DF48486DB4FCD80F80
1300001F8148C8FC003E81007E81127C00FC81A4827EA27E7F6C7E6D91C7FC13F8EA3FFE
381FFFE06C13FF15F0000314FE6C6E7E6C6C14E0011F14F801078001008002077FDA003F
13801507030113C0ED007F00E0ED3FE0161F17F06C150F1607A36C1503A37EA26C16E016
077E17C06D140F6D15806D141FD8FDF0EC3F00D8F8F8147E017C495A3AF01F801FF06DB5
12C0D8E00391C7FC39C0007FF02C417CBF35> I<1470A714F0A51301A31303A21307A213
0FA2131F133F137F13FF1203000F90B6FCB8FCA326000FF0C8FCB3AEEE01C0AE6D6CEB03
80A316076D6C14005E6D6C130E6D6C131E6E6C5A91383FE0F86EB45A020713C0020090C7
FC2A597ED734> I<D903C0150FD807FFED1FFFB50203B5FCA40001ED0007D8007F1501A2
013F81B3B25FA35FA35F011F15066E140E5F130F6E4A7F01075D6D6C494813E0D901FE49
48EBFFC0903A00FFC01F8091393FFFFE00020F13F8020001C0EC800042407CBE4B> I<B6
6C0103B512C0A4000101F8C8EBFC006C01E0ED3FF0017FEE1FC0013F5F96C7FC131F181E
80010F161C8001075EA26E157801031670A26D6C5DA26E14016D5EA26F1303027F5D8102
3F4AC8FCA26F5B021F140E81020F5CA26F133C02071438A26E6C5BA26F13F002015CA2ED
FF016E5C168192387F8380A216C7033F90C9FCA2ED1FEEA216FE6F5AA36F5AA26F5AA36F
5AA2423F7EBD47> I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop Fx 1093 762 a(Consisten) l(t) 47 b(Distributed) g(Commit:) 1132
945 y(A) e(Constan) l(t) i(Ov) l(erhead) f(Solution) p
Fw 284 1196 a(Baruc) m(h) 33 b(A) -8 b(w) m(erbuc) m(h) 890
b(Xiao) s(qi) 30 b(Lu) 1592 1429 y(Johns) j(Hopkins) g(Univ) m(ersit) m
(y) 1267 1545 y({baruc) m(h,) g(xiao) s(qilu,) d(ciprian}@cnds.jh) m
(u.edu) 1774 1661 y(T) -8 b(ec) m(hnical) 33 b(Rep) s(ort) 1849
1778 y(CNDS-2002-6) 1601 1894 y(h) m(ttp://www.cnds.jh) m(u.edu) 3240
1196 y(Ciprian) e(T) -8 b(utu) 1664 2096 y(Decem) m(b) s(er) 34
b(8,) e(2002) p Fv 1860 2422 a(Abstract) p Fu 402 2566
a(W) -7 b(e) 36 b(presen) n(t) g(an) g(algorithm) f(for) h(p) r
(ersisten) n(t) g(consisten) n(t) g(distributed) g(commit) h
(\(distributed) g(database) 277 2665 y(commit\)) 26 b(in) f(a) g
(dynamic,) h(async) n(hronous,) d(p) r(eer) i(to) g(p) r(eer) g(net) n
(w) n(ork.) 35 b(The) 25 b(algorithm) f(has) g(constan) n(t) h(o) n(v) n
(erhead) 277 2765 y(in) 36 b(time) g(and) g(space) f(and) g(almost) g
(constan) n(t) g(comm) n(unication) g(complexit) n(y) -7
b(,) 37 b(allo) n(wing) e(it) h(to) f(scale) g(to) h(v) n(ery) 277
2864 y(large) 26 b(size) h(net) n(w) n(orks.) 402 2964
y(W) -7 b(e) 29 b(in) n(tro) r(duce) g(a) g(mo) r(dular) g(solution) g
(based) f(on) i(sev) n(eral) d(w) n(ell) i(de\034ned) h(blo) r(c) n(ks)
e(with) i(clear) e(formal) h(sp) r(ec-) 277 3064 y(i\034cations.) 57
b(These) 35 b(blo) r(c) n(ks) f(w) n(ere) f(extensiv) n(ely) h(studied)
h(in) g(the) g(literature) f(but) h(their) g(com) n(bined) f(p) r(oten)
n(tial) 277 3163 y(w) n(as) e(nev) n(er) f(exploited) i(in) g(order) e
(to) h(pro) n(vide) g(database) f(commit.) 52 b(The) 33
b(blo) r(c) n(ks) f(can) g(b) r(e) h(implemen) n(ted) g(in) g(a) 277
3263 y(v) -5 b(ariet) n(y) 33 b(of) g(w) n(a) n(ys) g(and) g(w) n(e) g
(giv) n(e) g(simple) h(examples) f(of) g(p) r(ossible) h(implemen) n
(tations.) 55 b(The) 33 b(algorithm) g(gains) 277 3363
y(its) 27 b(e\036ciency) f(b) n(y) h(aggregating) c(the) k(ac) n(kno) n
(wledgmen) n(ts) e(required) g(for) i(eac) n(h) e(transaction.) 36
b(Also,) 26 b(in) h(con) n(trast) 277 3462 y(with) i(existing) g
(solutions,) f(our) g(algorithm) f(do) r(es) i(not) f(require) g(an) n
(y) g(mem) n(b) r(ership) g(kno) n(wledge.) 39 b(Comp) r(onen) n(ts) 277
3562 y(are) 34 b(detected) g(based) g(on) h(lo) r(cal) e(information) h
(and) g(the) h(data) f(is) h(disseminated) f(o) n(v) n(er) e(an) j(o) n
(v) n(erla) n(y) c(spanning) 277 3661 y(tree.) 402 3761
y(W) -7 b(e) 39 b(pro) n(vide) f(an) i(analytical) e(ev) -5
b(aluation) 38 b(of) i(the) f(algorithm) g(p) r(erformance) f(as) h(w) n
(ell) g(as) f(exp) r(erimen) n(tal) 277 3861 y(results.) p
Ft 50 4146 a(1) 131 b(In) l(tro) t(duction) p Fs 50 4349
a(W) -8 b(e) 31 b(presen) m(t) i(an) e(algorithm) i(for) e(p) s
(ersisten) m(t) h(consisten) m(t) h(distributed) f(commit) h
(\(distributed) f(database) g(commit\)) 50 4462 y(in) c(a) g(dynamic,) h
(async) m(hronous,) h(p) s(eer) e(to) g(p) s(eer) g(net) m(w) m(ork.) 42
b(W) -8 b(e) 28 b(in) m(tro) s(duce) h(a) f(mo) s(dular) h(solution) g
(based) f(on) g(sev) m(eral) 50 4575 y(w) m(ell) 46 b(de\034ned) f(blo)
s(c) m(ks) g(with) h(clear) f(formal) g(sp) s(eci\034cations.) 85
b(These) 45 b(mo) s(dules) g(w) m(ere) h(eac) m(h) g(widely) f(researc)
m(hed) 50 4687 y(indep) s(enden) m(tly) 35 b(in) f(the) f(literature,) j
(but) e(their) g(com) m(bined) h(p) s(o) m(w) m(er) g(to) f(pro) m
(vide) g(distributed) h(commit) f(services) g(in) 50
4800 y(an) c(e\036cien) m(t) i(and) f(straigh) m(tforw) m(ard) i
(algorithmic) f(w) m(a) m(y) f(w) m(as) g(not) g(realized) g(un) m(til)
h(no) m(w.) 191 4913 y(Most) 25 b(of) h(the) g(existing) g(distributed)
h(commit) g(solutions) g(require) f(ac) m(kno) m(wledgmen) m(ts) j
(from) d(ev) m(ery) g(participan) m(t) 50 5026 y(for) j(eac) m(h) h
(action.) 41 b(Our) 30 b(algorithm) g(uses) f(implicit,) i(aggregated) g
(ac) m(kno) m(wledgemen) m(ts) h(during) e(normal) h(op) s(eration,) 50
5139 y(when) 45 b(the) f(net) m(w) m(ork) i(is) e(stable.) 83
b(W) -8 b(e) 44 b(construct) h(a) g(stable) f(o) m(v) m(erla) m(y) i
(spanning) f(tree) g(o) m(v) m(er) g(the) g(set) f(of) g(activ) m(e,) 50
5252 y(connected) 32 b(no) s(des.) 40 b(The) 31 b(use) g(of) f(a) g
(spanning) h(tree) g(as) f(the) h(underlying) h(data) f(structure) g
(guaran) m(tees) h(an) f(e\036cien) m(t) 50 5365 y(comm) m(unication) 44
b(pattern) e(and) g(facilitates) g(the) g(deplo) m(ymen) m(t) h(of) e
(simple) h(algorithms) g(with) g(clear) g(correctness) 50
5478 y(pro) s(ofs.) 191 5591 y(In) m(tuitiv) m(ely) -8
b(,) 33 b(w) m(e) e(run) h(a) f(virtual) g(clo) s(c) m(k) g(on) h(a) e
(spanning) i(tree) g(b) m(y) f(means) g(of) p Fr 31 w(pulse) p
Fs 38 w(messages) g(and) h(con) m(v) m(erging) 50 5704
y(ac) m(kno) m(wledgmen) m(ts.) 60 b(Since) 37 b(the) f(actions) h(are)
f(disseminated) h(on) f(the) g(same) g(spanning) h(tree) f(used) g(b) m
(y) g(the) g(pulse) p 90 rotate dyy eop
%%Page: 2 2
2 1 bop Fs 50 399 a(messages) 33 b(and) h(b) s(ecause) g(of) f(the) g
(FIF) m(O) h(guaran) m(tees) h(on) f(the) g(links,) g(w) m(e) g(can) g
(establish) f(a) h(global) g(total) g(order) g(on) 50
511 y(the) e(actions) g(so) f(all) h(the) g(no) s(des) f(commit) i(the)
f(actions) g(in) f(the) h(same) g(order.) 45 b(A) 31
b(pulse) h(message) p Fr 32 w(p) p Fs 37 w(will) g(implicitly) 50
624 y(ac) m(kno) m(wledge) d(all) f(messages) f(sen) m(t) h(during) g
(the) f(previous) h(pulse) p Fr 27 w(p-1) p Fq 2411 591
a(1) p Fs 2451 624 a(.) 40 b(The) 27 b(idea) h(of) f(using) g(the) h
(pulse) f(mec) m(hanism) 50 737 y(as) 39 b(a) h(sync) m(hronizer) i(is)
d(deriv) m(ed) i(from) f([A) -8 b(w) m(e85) r(].) 69
b(The) 40 b(algorithm) i(is) d(enhanced) j(to) e(protect) h(against) f
(net) m(w) m(ork) 50 850 y(partitions/merges) h(and) f(main) m(tain) i
(consistency) d(ev) m(en) i(in) e(their) h(presence,) j(th) m(us) d
(bridging) h(a) f(gap) f(that) i(most) 50 963 y(existing) 32
b(atomic) h(commit) f(proto) s(cols) h(do) f(not) g(address.) 45
b(The) 32 b(algorithm) h(con) m(tin) m(ues) h(to) e(mak) m(e) h
(progress) f(as) f(long) 50 1076 y(as) f(a) g(quorum) h(of) f(no) s
(des) g(remains) h(connected.) 191 1189 y(Our) j(solution) f(consists) g
(of) g(sev) m(eral) h(indep) s(enden) m(t) h(mo) s(dules) e(whose) h
(in) m(teraction) h(is) e(w) m(ell) h(de\034ned,) h(based) e(on) 50
1302 y(their) 23 b(external) f(signatures.) 39 b(The) 22
b(complexit) m(y) i(of) d(eac) m(h) j(mo) s(dule) e(dep) s(ends) h(on) f
(the) g(generalit) m(y) i(of) e(the) g(en) m(vironmen) m(t) 50
1415 y(for) 37 b(whic) m(h) i(the) f(solution) g(is) f(dev) m(elop) s
(ed.) 63 b(W) -8 b(e) 37 b(analyze) i(the) e(complexit) m(y) i(b) s
(ounds) e(of) h(the) f(complete) i(algorithm) 50 1528
y(and) 30 b(compare) g(it) g(with) g(existing) f(metho) s(ds.) 41
b(In) 29 b(con) m(trast) h(with) g(previous) g(analysis,) g(w) m(e) g
(are) f(concerned) i(with) f(the) 50 1641 y(complete) 37
b(cost) f(of) g(the) g(solution,) i(including) f(all) f(lev) m(els) h
(of) e(abstraction) i(that) g(other) g(metho) s(ds) f(rarely) g
(consider) 50 1753 y(when) e(estimating) g(the) f(o) m(v) m(erall) i
(complexit) m(y) f(b) s(ounds) g(of) e(the) i(system.) 48
b(W) -8 b(e) 34 b(also) f(practically) h(ev) -5 b(aluate) 34
b(the) g(p) s(er-) 50 1866 y(formance) 29 b(of) e(our) i(system) e(and)
i(compare) g(it) f(with) h(sev) m(eral) g(established) f(metho) s(ds,) h
(in) g(b) s(oth) f(lo) s(cal) g(and) g(wide) h(area) 50
1979 y(net) m(w) m(ork) j(settings.) 191 2092 y(W) -8
b(e) 27 b(sho) m(w) h(that) f(simple) g(design) g(can) g(yield) g(an) g
(e\036cien) m(t) i(solution) e(to) g(a) g(problem) h(that) g
(traditionally) g(required) 50 2205 y(v) m(ery) h(complex) i
(algorithmic) g(solutions.) 41 b(The) 30 b(mo) s(dular) g(design) g
(can) g(b) s(e) f(used) h(for) f(a) h(future) g(detailed) h(analysis) e
(of) 50 2318 y(the) i(trade-o\033s) g(in) m(v) m(olv) m(ed) h(and) f
(\034ner) h(tuning) f(to) g(the) g(sp) s(eci\034c) g(net) m(w) m(ork) h
(en) m(vironmen) m(ts) h(in) e(whic) m(h) h(the) f(solution) g(is) 50
2431 y(deplo) m(y) m(ed.) 191 2544 y(The) 37 b(rest) f(of) g(the) h
(pap) s(er) g(is) f(organized) i(as) e(follo) m(ws:) 53
b(the) 37 b(follo) m(wing) h(subsections) f(describ) s(e) g(the) f(mo) s
(del) h(and) 50 2657 y(relate) h(to) f(existing) h(w) m(ork.) 62
b(Section) 38 b(2) g(in) m(tro) s(duces) g(the) g(main) g(comp) s(onen)
m(t) h(of) e(the) h(algorithm) g(and) g(informally) 50
2770 y(pro) m(v) m(es) f(its) f(correctness.) 60 b(Section) 38
b(3) e(presen) m(ts) h(the) g(complete) h(algorithm) g(that) f(supp) s
(orts) f(dynamic) h(net) m(w) m(orks.) 50 2883 y(Section) 31
b(4) f(discusses) g(the) g(generalit) m(y) i(of) d(the) i(algorithm.) 42
b(Section) 31 b(5) f(ev) -5 b(aluates) 31 b(the) f(complexit) m(y) h(b)
s(ounds) g(of) e(the) 50 2995 y(algorithm) i(and) g(compares) g(it) f
(to) h(existing) f(solutions.) 41 b(Section) 31 b(6) f(ev) -5
b(aluates) 31 b(the) f(practical) h(p) s(erformance) h(of) d(the) 50
3108 y(algorithm.) 42 b(W) -8 b(e) 30 b(conclude) i(in) f(section) f
(7.) p Fp 50 3352 a(1.1) 112 b(Mo) s(del) p Fs 50 3523
a(W) -8 b(e) 29 b(consider) g(a) g(dynamic) g(async) m(hronous) h(net) m
(w) m(ork) g(susceptible) f(to) g(net) m(w) m(ork) h
(partitions/re-merges) h(and) e(serv) m(er) 50 3636 y(crashes/reco) m
(v) m(eries) h(that) g(can) f(o) s(ccur) g(indep) s(enden) m(tly) h(or)
f(in) g(cascade.) 40 b(The) 30 b(net) m(w) m(ork) g(con\034guration) h
(is) d(giv) m(en) h(b) m(y) 50 3749 y(a) 35 b(graph) h(G\(V\(t\),) h
(E\(t\)\)) g(where) f(V) f(represen) m(ts) i(the) e(set) h(of) f(serv) m
(ers) g(in) h(the) f(system) g(and) h(E) g(the) g(set) f(of) g(o) m(v) m
(erla) m(y) 50 3862 y(connections) k(b) s(et) m(w) m(een) g(serv) m
(ers.) 63 b(Comm) m(unication) 41 b(on) d(the) g(edges) g(is) f
(assumed) h(reliable) h(and) g(FIF) m(O.) f(W) -8 b(e) 38
b(also) 50 3975 y(assume) 26 b(that) h(eac) m(h) h(no) s(de) e(is) g
(capable) h(of) f(detecting) i(failures) f(of) f(the) g(ph) m(ysical) i
(net) m(w) m(ork) g(that) e(disrupt) h(the) g(o) m(v) m(erla) m(y) 50
4088 y(top) s(ology) -8 b(.) 39 b(In) 25 b(order) h(to) f(guaran) m
(tee) j(liv) m(eness) d(of) g(the) g(proto) s(col,) i(the) f(failure) f
(detector) i(needs) e(to) h(b) s(e) f(in) g(the) g(class) p
Fo 25 w(\005) p Fs(S) 50 4201 y(as) 30 b(de\034ned) i(b) m(y) g
(Chandra) g(and) f(T) -8 b(oueg) 32 b([CT96) q(].) 43
b(Note) 31 b(that) g(these) g(assumptions) h(do) f(not) g(reduce) h
(the) f(generalit) m(y) 50 4314 y(of) k(the) i(solution;) i(in) d
(practice,) j(these) d(prop) s(erties) g(can) g(b) s(e) g(satis\034ed) g
(using) g(the) g(standard) h(TCP) g(proto) s(col) f(as) g(a) 50
4427 y(link) 30 b(comm) m(unication) j(proto) s(col) e(b) s(et) m(w) m
(een) h(the) f(no) s(des.) 191 4540 y(Eac) m(h) 37 b(no) s(de) e(holds)
h(a) f(lo) s(cal) g(p) s(ermanen) m(t) i(cop) m(y) f(of) f(the) h
(distributed) g(database) p Fq 2939 4507 a(2) p Fs 3015
4540 a(and) f(ma) m(y) h(issue) f(read/write) 50 4652
y(op) s(erations) j(on) f(b) s(ehalf) g(of) g(the) g(clien) m(ts) i
(that) e(connect) i(to) e(it.) 61 b(All) 37 b(the) h(write) g(op) s
(erations) f(m) m(ust) h(b) s(e) f(ev) m(en) m(tually) 50
4765 y(committed) j(in) e(agreemen) m(t) j(at) d(all) h(no) s(des.) 64
b(Read) 38 b(op) s(erations) h(can) g(b) s(e) f(answ) m(ered) h(lo) s
(cally) -8 b(,) 41 b(after) e(the) f(causally) 50 4878
y(preceding) 32 b(writes) e(ha) m(v) m(e) i(b) s(een) e(committed.) 191
4991 y(The) 38 b(correctness) g(prop) s(erties) g(satis\034ed) g(b) m
(y) g(the) g(algorithm) h(resem) m(ble) f(those) g(of) f(a) h(quorum) g
(based) g(atomic) 50 5104 y(commit) i(proto) s(col.) 67
b(The) 39 b(algorithm) h(establishes) g(a) e(global) i(total) g(order) f
(of) g(actions) g(that) h(is) e(consisten) m(t) i(with) p
50 5166 1594 4 v Fn 153 5219 a(1) p Fm 188 5251 a(Dep) r(ending) 22
b(on) g(the) g(w) n(a) n(y) g(the) g(actions) h(are) g(sen) n(t,) g
(pulse) p Fl 22 w(p) p Fm 28 w(ma) n(y) e(actually) h(ac) n(kno) n
(wledge) i(actions) f(b) r(elonging) g(to) g(pulse) p
Fl 22 w(p-2) p Fm 33 w(or) p Fl 23 w(p-3) p Fm(.) 50
5342 y(See) i(details) i(in) f(Section) f(4.) p Fn 153
5402 a(2) p Fm 188 5434 a(W) -6 b(e) 35 b(will) i(use) e(the) h(w) n
(ord) p Fl 35 w(datab) l(ase) p Fm 44 w(leisurely) g(in) f(this) h(pap)
r(er,) i(referring) f(only) e(to) h(the) f(atomic) g(commitmen) n(t) e
(asp) r(ect) j(of) g(dis-) 50 5525 y(tributed) 22 b(database) h(op) r
(erations.) 35 b(This) 23 b(mo) r(del) g(can) f(b) r(e) h(used) f(in) h
(conjunction) g(with) g(a) g(real) h(database) f(if) h(w) n(e) f
(assume) f(non-in) n(teractiv) n(e,) 50 5616 y(deterministic) j
(transactions.) p Fs 2020 5953 a(2) p 90 rotate dyy eop
%%Page: 3 3
3 2 bop Fs 50 399 a(FIF) m(O) 26 b(sp) s(eci\034cations.) 39
b(If) 25 b(all) h(the) g(serv) m(ers) g(commit) h(the) f(actions) g(in)
g(this) g(agreed) h(order,) g(the) g(commit) f(consistency) 50
511 y(is) k(guaran) m(teed.) 42 b(The) 31 b(correctness) g(sp) s
(eci\034cation) h(b) s(elo) m(w) f(is) f(similar) h(to) f(the) h(one) f
(used) h(in) f([A) -8 b(T02) q(].) p Fk 50 746 a(Prop) s(ert) m(y) 34
b(1) g(\(Global) h(T) -9 b(otal) 36 b(Order/Agreemen) m(t\)) p
Fr 46 w(If) i(b) -5 b(oth) 40 b(servers) g(s) f(and) g(r) f(c) -5
b(ommit) 39 b(their) h(ith) e(action,) 50 858 y(then) 32
b(these) i(actions) e(ar) -5 b(e) 33 b(identic) -5 b(al.) p
Fk 50 1101 a(Prop) s(ert) m(y) 34 b(2) g(\(Global) h(FIF) m(O) g
(Order\)) p Fr 45 w(If) h(server) i(r) e(c) -5 b(ommits) 37
b(an) f(action) h(a) f(gener) -5 b(ate) g(d) 39 b(by) e(server) h(s,) f
(then) g(r) 50 1214 y(alr) -5 b(e) g(ady) 34 b(c) -5
b(ommitte) g(d) 33 b(every) g(action) g(that) f(s) g(gener) -5
b(ate) g(d) 35 b(prior) e(to) f(a.) p Fk 50 1456 a(Prop) s(ert) m(y) i
(3) g(\(Liv) m(eness\)) p Fr 47 w(If) i(server) h(s) f(c) -5
b(ommits) 36 b(action) g(a) g(and) g(ther) -5 b(e) 38
b(exists) e(a) g(set) h(of) f(servers) h(c) -5 b(ontaining) 36
b(s) 50 1569 y(and) 30 b(r,) g(and) g(a) g(time) g(fr) -5
b(om) 29 b(which) i(on) e(that) i(set) f(do) -5 b(es) 31
b(not) e(fac) -5 b(e) 32 b(c) -5 b(ommunic) g(ation) 30
b(or) g(pr) -5 b(o) g(c) g(ess) 32 b(failur) -5 b(es,) 31
b(then) f(server) 50 1682 y(r) i(eventual) 5 b(ly) 34
b(c) -5 b(ommits) 32 b(action) g(a.) p Fp 50 1925 a(1.2) 112
b(Related) 37 b(W) -9 b(ork) p Fs 50 2097 a(T) h(w) m(o-phase) 39
b(commit) f(\(2PC\)) g([GR93,) g(LL93) q(]) f(algorithms) h(are) g(the)
f(most) g(common) i(approac) m(h) g(to) e(pro) m(viding) i(a) 50
2210 y(consisten) m(t) 26 b(view) g(in) f(a) h(distributed) h(database)
f(system) f(o) m(v) m(er) h(an) g(unreliable) h(net) m(w) m(ork.) 40
b(Ho) m(w) m(ev) m(er,) 29 b(these) c(proto) s(cols) 50
2323 y(imp) s(ose) 41 b(a) g(substan) m(tial) i(comm) m(unication) h
(cost) e(on) f(eac) m(h) i(transaction) f(and) g(ma) m(y) g(require) g
(connectivit) m(y) g(of) f(all) 50 2436 y(replicas) g(in) g(order) h
(to) f(reco) m(v) m(er) h(from) f(some) g(simple) g(fault) g
(scenarios.) 72 b(Quorum) 42 b(based) f(three-phase) i(commit) 50
2549 y(proto) s(cols) d(\(3PC\)) h([Sk) m(e82) r(,) f(KD95]) g(o) m(v) m
(ercome) i(some) f(of) e(the) i(a) m(v) -5 b(ailabilit) m(y) 42
b(problems) e(pa) m(ying) i(the) e(price) h(of) e(an) 50
2662 y(additional) 32 b(comm) m(unication) h(round.) 191
2775 y(Lamp) s(ort) g(in) m(tro) s(duced) g(a) f(no) m(w) g(famous) g
(algorithm,) i(kno) m(wn) e(as) g(the) g(P) m(axos) g(part-time) h
(parliamen) m(t) h([Lam98) r(,) 50 2887 y(Lam01) q(].) 59
b(By) 36 b(using) h(the) g(analogy) g(with) g(a) g(parliamen) m(tary) i
(system) d(where) h(legislators) g(ha) m(v) m(e) h(to) e(agree) i(on) e
(the) 50 3000 y(decrees) 30 b(that) g(are) g(passed,) g(Lamp) s(ort) h
(presen) m(ts) g(a) e(solution) i(whic) m(h) g(is) e(basically) h(a) g
(three-phase) h(commit) g(v) -5 b(arian) m(t) 50 3113
y(with) 28 b(b) s(etter) g(surviv) -5 b(abilit) m(y) 29
b(prop) s(erties,) g(allo) m(wing) g(for) f(di\033eren) m(t) h(quorums)
f(to) g(participate) h(in) f(the) g(t) m(w) m(o) h(phases) f(of) 50
3226 y(the) j(algorithm.) 41 b(The) 31 b(algorithm) h(ho) m(w) m(ev) m
(er) h(pa) m(ys) d(in) h(e\036ciency) g(the) f(increase) i(in) e
(fault-tolerance.) 191 3339 y(Keidar) h([Kei94) q(]) g(prop) s(osed) f
(a) h(proto) s(col) g(that) g(uses) f(group) h(comm) m(unication) i(to)
e(reduce) g(the) g(comm) m(unication) 50 3452 y(price) k(b) m(y) g
(using) g(group) h(m) m(ulticast) g(primitiv) m(es) g(instead) g(of) e
(p) s(oin) m(t-to-p) s(oin) m(t) j(comm) m(unication.) 57
b(Amir) 35 b(and) h(T) -8 b(utu) 50 3565 y([A) g(T02) q(]) 34
b(also) f(use) h(group) h(comm) m(unication) i(in) d(order) g(to) g
(impro) m(v) m(e) i(comm) m(unication) g(p) s(erformance.) 52
b(Their) 35 b(algo-) 50 3678 y(rithm) 25 b(aggregates) h(the) f(ac) m
(kno) m(wledgmen) m(ts) j(required) d(for) f(eac) m(h) i(action,) h
(further) e(impro) m(ving) h(the) f(e\036ciency) g(of) f(the) 50
3791 y(solution.) 55 b(The) 36 b(resulting) g(proto) s(col) f(is) g
(highly) h(e\036cien) m(t) g(during) g(normal) g(op) s(eration) g(and) g
(pa) m(ys) f(a) g(higher) h(price) 50 3904 y(only) 30
b(when) i(net) m(w) m(ork) g(faults) e(o) s(ccur.) 42
b(Ho) m(w) m(ev) m(er,) 32 b(since) f(it) g(relies) g(on) f(the) h(mem)
m(b) s(ership) h(services) f(pro) m(vided) h(b) m(y) e(the) 50
4017 y(group) h(comm) m(unication,) i(the) d(proto) s(col) h(cannot) g
(scale) f(with) h(the) f(n) m(um) m(b) s(er) i(of) d(participan) m(ts.)
43 b(F) -8 b(ek) m(ete,) 31 b(Lync) m(h) g(and) 50 4129
y(Sh) m(v) -5 b(artsman) 34 b([FLS01) q(]) f(dev) m(elop) i(a) e
(similar) g(algorithm) i(based) e(on) g(a) g(di\033eren) m(t) i(sp) s
(eci\034cation) f(of) f(a) g(partitionable) 50 4242 y(group) 38
b(comm) m(unication) i(service.) 61 b(W) -8 b(e) 38 b(note) g(that) f
(the) h(complexit) m(y) h(of) d(the) i(group) g(comm) m(unication) i
(sp) s(eci\034ca-) 50 4355 y(tions,) 27 b(whic) m(h) h(hide) f(some) g
(of) f(the) g(solution) h(costs) g(b) s(ehind) f(v) -5
b(arious) 27 b(abstractions,) h(mak) m(es) f(these) f(algorithms) i
(more) 50 4468 y(di\036cult) j(to) g(analyze.) p Ft 50
4755 a(2) 131 b(Basic) 45 b(Algorithm) p Fs 50 4957 a(The) 24
b(algorithm) i(executed) f(at) g(eac) m(h) g(no) s(de) f(progresses) h
(through) g(sev) m(eral) g(states.) 38 b(The) 25 b(pro) s(cedures) f
(corresp) s(onding) 50 5070 y(to) f(eac) m(h) h(state) f(assume) g
(certain) h(preconditions) g(are) f(satis\034ed) g(and) h(enforce) f
(certain) h(guaran) m(tees) g(b) s(efore) f(switc) m(hing) 50
5183 y(to) 41 b(the) g(next) g(state.) 72 b(W) -8 b(e) 41
b(sometimes) g(refer) g(to) g(the) g(algorithms) h(executed) f(in) g
(eac) m(h) h(state) f(as) p Fr 40 w(mo) -5 b(dules) p
Fs 50 w(since) 50 5296 y(they) 38 b(can) g(b) s(e) f(designed) i
(completely) g(indep) s(enden) m(t) g(of) f(the) g(other) g(comp) s
(onen) m(ts) h(as) f(long) g(as) f(they) h(enforce) g(the) 50
5409 y(requiremen) m(ts.) 191 5522 y(T) -8 b(o) 30 b(giv) m(e) g(a) f
(b) s(etter) g(in) m(tuition) i(of) e(the) h(role) g(of) e(eac) m(h) j
(comp) s(onen) m(t) g(of) d(the) i(algorithm,) h(w) m(e) f(dev) m(elop)
g(our) g(solution) 50 5635 y(gradually) -8 b(,) 27 b(b) m(y) d
(relaxing) h(the) f(w) m(orking) h(net) m(w) m(ork) h(mo) s(del) e
(from) g(a) g(theoretical) i(static) e(sync) m(hronous) h(net) m(w) m
(ork) h(to) e(the) 2020 5953 y(3) p 90 rotate dyy eop
%%Page: 4 4
4 3 bop 1598 410 1524 4 v 963 410 2159 4 v 961 510 4
100 v Fv 1165 480 a(Input) p 1597 510 V Fu 484 w(Net) n(w) n(ork_c) n
(hange\(\),) 25 b(F) -7 b(reeze) p 3120 510 V 963 513
2159 4 v 961 613 4 100 v Fv 1013 583 a(Precondition) p
1597 613 V Fu 398 w(Stable) 28 b(o) n(v) n(erla) n(y) c(net) n(w) n
(ork) p 3120 613 V 963 616 2159 4 v 961 716 4 100 v Fv
1100 686 a(Pro) m(vides) p 1597 716 V Fu 187 w(Spanning) j(tree) h(o) n
(v) n(er) d(the) j(o) n(v) n(erla) n(y) d(net) n(w) n(ork) p
3120 716 V 963 719 2159 4 v 961 819 4 100 v Fv 1128 789
a(Output) p 1597 819 V Fu 659 w(T) -7 b(ree_c) n(hange\(\)) p
3120 819 V 963 822 2159 4 v Fs 1132 976 a(T) f(able) 31
b(1:) 41 b(Spanning) 32 b(T) -8 b(ree) 31 b(Mo) s(dule) f(Sp) s
(eci\034cations) 50 1251 y(in) m(ternet-lik) m(e) 39
b(partitionable,) i(async) m(hronous) d(net) m(w) m(ork) g(mo) s(del.)
61 b(The) 37 b(prop) s(erties) g(that) h(eac) m(h) g(mo) s(dule) f
(satis\034es) 50 1364 y(and) 31 b(its) f(role) g(are) h(de\034ned) h
(as) e(eac) m(h) h(mo) s(dule) g(is) f(in) m(tro) s(duced.) 191
1477 y(W) -8 b(e) 27 b(de\034ne) h(an) f(in) m(v) -5
b(arian) m(t) p Fq 1070 1444 a(3) p Fs 1138 1477 a(whic) m(h) 28
b(guaran) m(tees) g(the) f(correctness) h(of) e(the) i(algorithm) g
(and) f(w) m(e) h(informally) f(sho) m(w) 50 1590 y(that) k(the) f
(algorithm) i(main) m(tains) g(this) e(in) m(v) -5 b(arian) m(t,) 33
b(reenforcing) e(it) g(after) f(failures) h(or) f(partitions.) 191
1703 y(The) g(algorithms) g(are) f(presen) m(ted) i(in) e(a) g(generic)
h(pseudo) s(co) s(de) g(form) f(whic) m(h) h(uses) f(standard) h
(notation) g(con) m(v) m(en-) 50 1815 y(tions:) p Fk
40 w(some_message) p Fs(\() p Fr(data) p Fs 7 w(\)) h(denotes) f(a) g
(message) g(passed) g(through) h(the) f(net) m(w) m(ork) h(con) m
(taining) h(the) e(relev) -5 b(an) m(t) 50 1928 y(information) p
Fr 31 w(data;) 33 b(some_variable) p Fs 38 w(denotes) e(a) g(lo) s(cal)
f(v) -5 b(ariable.) p Fp 50 2172 a(2.1) 112 b(Sync) m(hronous) 38
b(Net) m(w) m(ork) p Fs 50 2343 a(If) d(w) m(e) i(consider) g(the) f
(static) g(net) m(w) m(ork) i(mo) s(del) f(giv) m(en) f(b) m(y) h
(G\(V,) e(E\)) i(where) g(all) f(comm) m(unication) j(is) d(sync) m
(hronous) 50 2456 y(and) 26 b(no) f(serv) m(er) h(or) f(net) m(w) m
(ork) i(failure) f(is) f(p) s(ossible,) h(the) g(problem) h(is) e
(trivially) g(solv) m(ed.) 39 b(Eac) m(h) 27 b(up) s(date) f(is) f
(propagated) 50 2569 y(through) k(the) f(net) m(w) m(ork) i(to) e(all) g
(the) h(no) s(des.) 39 b(Since) 29 b(the) f(system) f(is) h(sync) m
(hronous) h(all) f(the) g(up) s(dates) h(can) f(b) s(e) g(ordered) 50
2682 y(and) 38 b(executed) g(based) g(on) f(the) h(ordering) h(of) e
(the) g(lo) s(cal) h(timestamps) g(attac) m(hed) h(to) f(them) g(and) g
(the) g(\020ID\021) 44 b(of) 37 b(the) 50 2795 y(up) s(date) 31
b(\(whic) m(h) g(can) g(b) s(e) f(the) h(con) m(ten) m(ts) h(of) e(the)
h(up) s(date,) g(or) f(the) h(ID) f(of) g(the) g(issuing) h(no) s(de,) f
(if) g(a) m(v) -5 b(ailable\).) p Fp 50 3038 a(2.2) 112
b(Static) 36 b(Async) m(hronous) i(Net) m(w) m(ork) p
Fs 50 3210 a(Let's) 28 b(consider) g(a) f(static) g(net) m(w) m(ork) i
(\(no) f(serv) m(er) g(or) f(net) m(w) m(ork) i(failures\)) f(with) g
(async) m(hronous) g(comm) m(unication.) 42 b(W) -8 b(e) 50
3323 y(distinguish) 31 b(t) m(w) m(o) h(steps) e(in) g(this) g
(situation.) p Fk 50 3535 a(Initialization:) p Fs 45
w(Construct) i(a) e(spanning) h(tree) g(o) m(v) m(er) g(the) g(giv) m
(en) g(net) m(w) m(ork.) 50 3748 y(This) 42 b(is) h(a) f(w) m
(ell-studied) j(problem) e(with) h(a) e(wide) h(range) h(of) e
(solutions) h([GHS83,) g(A) -8 b(w) m(e87) q(].) 77 b(In) 42
b(the) h(app) s(endix) 50 3861 y(w) m(e) 36 b(presen) m(t) h(a) e
(simple) h(algorithm) h(that) g(could) f(b) s(e) f(used) h(for) f(the) h
(Initialization) h(pro) s(cedure) p Fq 3312 3828 a(4) p
Fs 3353 3861 a(.) 56 b(This) 36 b(pro) s(cedure) 50 3974
y(assumes) 30 b(a) g(stable) h(underlying) g(net) m(w) m(ork) h(and) f
(builds) g(a) f(spanning) h(tree) g(o) m(v) m(er) h(the) e(connected) i
(no) s(des) e(\(T) -8 b(able) 32 b(1\).) p Fk 50 4186
a(Sync) m(hronization:) p Fs 44 w(The) 38 b(algorithm) i(em) m(ulates) f
(a) f(sync) m(hronous) h(en) m(vironmen) m(t,) j(b) m(y) c(main) m
(taining) j(a) d(running) 277 4299 y(\020virtual) d(clo) s(c) m(k\021.)
54 b(Eac) m(h) p Fr 37 w(pulse) p Fs 42 w(of) 34 b(the) h(clo) s(c) m
(k) g(is) g(generated) h(b) m(y) f(\035o) s(o) s(ding) g(a) g(message) f
(o) m(v) m(er) i(the) f(\034xed) g(tree) 277 4412 y(constructed) d(in) f
(the) g(previous) f(step) h(and) g(con) m(v) m(erge-casting) i(ac) m
(kno) m(wledgemen) m(ts) h(o) m(v) m(er) e(subtrees) e(\(see) h(Al-) 277
4525 y(gorithm) h(1\).) 191 4738 y(A) m(ctions) 25 b(are) f(sen) m(t) h
(in) f(FIF) m(O) g(order) h(on) f(eac) m(h) h(link,) g(along) g(the) g
(same) f(tree.) 39 b(F) -8 b(or) 24 b(the) h(simplicit) m(y) g(of) e
(the) i(analysis,) 50 4851 y(but) i(without) i(reducing) f(generalit) m
(y) -8 b(,) 30 b(w) m(e) e(can) g(assume) f(that) h(actions) g(are) f
(initiated) i(only) e(b) m(y) h(the) f(ro) s(ot) h(of) e(the) i(tree.)
50 4963 y(Ob) m(viously) -8 b(,) 35 b(an) m(y) f(no) s(de) g(can) g
(\034rst) g(send) f(their) i(actions) f(to) f(the) h(ro) s(ot) g(whic) m
(h) h(can) f(subsequen) m(tly) g(in) m(tro) s(duce) h(them) 50
5076 y(in) m(to) g(the) f(system.) 51 b(Section) 35 b(4) f(will) h
(analyze) f(the) h(impact) g(of) e(transparen) m(tly) j(allo) m(wing) g
(no) s(des) e(to) g(inject) g(actions) 50 5189 y(in) k(the) g(system.)
64 b(F) -8 b(urthermore,) 42 b(w) m(e) d(will) f(consider) h(that) g
(all) f(the) g(actions) h(are) f(sen) m(t) h(together) g(with) g(the) f
(pulse) p 50 5251 1594 4 v Fn 153 5304 a(3) p Fm 188
5336 a(W) -6 b(e) 30 b(sligh) n(tly) g(abuse) g(the) g(term) p
Fl 29 w(invariant) p Fm 38 w(to) g(refer) h(to) f(an) g(ev) n(en) n
(tual) f(prop) r(ert) n(y) g(that) h(holds) g(in) g(the) g(op) r
(erational) i(states) e(of) h(the) 50 5428 y(algorithm.) p
Fn 153 5487 a(4) p Fm 188 5519 a(The) 26 b(algorithm) f(presen) n(ted) g
(in) h(the) f(app) r(endix) f(do) r(es) i(not) g(ha) n(v) n(e) e(the) h
(go) r(o) r(d) i(complexit) n(y) d(b) r(ounds) h(that) g(the) g(cited) h
(solutions) g(ha) n(v) n(e,) 50 5610 y(but) f(is) h(presen) n(ted) f
(for) h(o) r(ompleteness) g(of) h(the) e(solution) p
Fs 2020 5953 a(4) p 90 rotate dyy eop
%%Page: 5 5
5 4 bop 829 410 3062 4 v 194 410 3697 4 v 192 510 4 100
v Fv 396 480 a(Input) p 828 510 V Fu 1310 w(Pulse_restart\(\),) 27
b(F) -7 b(reeze) p 3889 510 V 194 513 3697 4 v 192 613
4 100 v Fv 244 583 a(Precondition) p 828 613 V Fu 99
w(Pulse) 28 b(In) n(v) -5 b(arian) n(t,) 26 b(stable) i(spanning) f
(tree,) g(iden) n(tical) g(state) h(within) g(connected) f(comp) r
(onen) n(t) p 3889 613 V 194 616 3697 4 v 192 716 4 100
v Fv 331 686 a(Pro) m(vides) p 828 716 V Fu 1095 w(Consisten) n(t) g
(Distributed) h(Commit) p 3889 716 V 194 719 3697 4 v
192 819 4 100 v Fv 359 789 a(Output) p 828 819 V Fu 1173
w(Clien) n(t/Database) e(in) n(terraction) p 3889 819
V 194 822 3697 4 v Fs 1310 976 a(T) -8 b(able) 32 b(2:) 41
b(Pulse) 30 b(Mo) s(dule) h(Sp) s(eci\034cations) 50
1237 y(message.) 65 b(These) 39 b(c) m(hoices) h(do) e(not) h(restrict)
h(in) e(an) m(y) h(w) m(a) m(y) h(the) f(generalit) m(y) h(of) e(the) h
(mo) s(del) g(as) f(w) m(e) h(will) g(sho) m(w) h(in) 50
1350 y(section) 26 b(4,) h(but) f(they) g(signi\034can) m(tly) i
(simplify) d(the) h(presen) m(tation) i(and) f(the) f(understanding) i
(of) d(the) h(basic) g(mo) s(dules.) 191 1462 y(Eac) m(h) 39
b(no) s(de) e(k) m(eeps) h(trac) m(k) g(of) f(the) h(virtual) g(clo) s
(c) m(k) f(using) h(the) g(lo) s(cal) f(v) -5 b(ariable) p
Fr 39 w(lo) g(c) g(alClo) g(ck) p Fs 49 w(whic) m(h) 39
b(is) e(up) s(dated) 50 1575 y(based) 29 b(on) g(the) p
Fk 29 w(pulse) p Fs 29 w(messages.) 40 b(Eac) m(h) 30
b(no) s(de) p Fr 29 w(i) p Fs 38 w(will) f(also) g(main) m(tain) i(a) e
(bu\033er) p Fj 29 w(\014) p Fi 2878 1542 a(i) 2873 1598
y(p) p Fs 2913 1575 a(,) p Fq 2938 1542 a(5) p Fs 3006
1575 a(con) m(taining) j(the) d(ordered) h(set) 50 1706
y(of) h(messages) g(receiv) m(ed) i(during) g(pulse) p
Fr 31 w(p) p Fs 38 w(\(when) p Fj 32 w(l) r(ocal) r(C) 7
b(l) r(ock) p Fh 31 w(=) p Fj 27 w(p) p Fs(\).) 43 b(W) -8
b(e) 32 b(denote) p 2910 1626 92 4 v Fj 33 w(\014) p
Fi 2966 1680 a(i) 2961 1728 y(p) p Fs 3032 1706 a(the) g(ordered) h
(con) m(ten) m(t) h(of) p Fj 31 w(\014) p Fi 4000 1673
a(i) 3995 1728 y(p) p Fs 50 1819 a(at) 27 b(the) g(end) g(of) f(pulse) p
Fr 27 w(p) p Fs 33 w(\(when) h(the) g(lo) s(cal) g(clo) s(c) m(k) g(is)
g(incremen) m(ted\).) 42 b(A) 26 b(new) h(pulse) g(is) f(generated) j
(b) m(y) e(the) g(ro) s(ot) g(only) 50 1932 y(after) g(receiving) p
Fk 29 w(pulse_ac) m(k) p Fs 27 w(messages) g(from) g(ev) m(ery) h(no) s
(de.) 39 b(When) 28 b(receiving) g(pulse) f(p+1,) h(eac) m(h) h(no) s
(de) e(commits) 50 2045 y(the) k(messages) f(b) s(elonging) h(to) g
(the) f(previous) h(pulse) p Fq 1825 2012 a(6) p Fs 1865
2045 a(.) 191 2158 y(W) -8 b(e) 31 b(in) m(tro) s(duce) g(the) g(follo)
m(wing) h(in) m(v) -5 b(arian) m(t:) p Fk 50 2367 a(Pulse) 34
b(in) m(v) -6 b(arian) m(t:) p 805 2286 V Fj 46 w(\014) p
Fi 861 2340 a(i) 856 2389 y(p) p Fh 921 2367 a(=) p 1017
2268 93 4 v Fj 25 w(\014) p Fi 1073 2322 a(j) 1068 2377
y(p) p Fo 1135 2367 a(\021) p 1231 2293 92 4 v Fj 25
w(\014) p Fi 1282 2381 a(p) p Fj 1322 2367 a(;) p Fo
15 w(8) p Fj(i;) 15 b(j;) g(p) p Fk 50 2675 a(Lemma) 35
b(1) p Fr 45 w(A) n(lgorithm) d(1) h(maintains) e(the) h(Pulse) i
(Invariant) e(on) g(a) g(static) g(asynchr) -5 b(onous) 33
b(network.) p Fk 191 2793 a(Pro) s(of:) p Fs 191 2906
a(The) e(in) m(v) -5 b(arian) m(t) 32 b(is) e(trivially) g(satis\034ed)
h(when) g(the) g(algorithm) h(starts) e(as) g(all) g(the) h(bu\033ers) f
(will) h(b) s(e) f(empt) m(y) -8 b(.) 191 3019 y(Since) 26
b(the) f(links) g(of) g(the) g(tree) h(are) g(reliable) g(and) f(FIF) m
(O,) h(ev) m(ery) f(no) s(de) h(will) f(receiv) m(e) h(all) g(the) f
(messages) g(generated) 50 3132 y(b) m(y) 37 b(the) h(ro) s(ot,) h(in) e
(the) h(same) f(order.) 62 b(When) 37 b(the) h(ro) s(ot) f(initiates) h
(the) f(message) p Fk 38 w(pulse) p Fs(\() p Fr(p+1) p
Fs 12 w(\),) i(it) e(will) h(not) g(send) 50 3245 y(an) m(y) k(more) h
(messages) f(b) s(elonging) i(to) e(pulse) p Fr 42 w(p) p
Fs(.) 76 b(Since) p Fk 43 w(pulse) p Fs 42 w(and) p Fk
43 w(pulse_ac) m(k) p Fs 42 w(messages) 42 b(are) g(sen) m(t) h(on) f
(the) 50 3358 y(same) 34 b(tree,) i(the) f(causal) g(relationship) h(b)
s(et) m(w) m(een) g(the) e(reception) i(of) e(the) h(messages) p
Fk 34 w(pulse) p Fs(\() p Fr(p) p Fs 6 w(\),) g(data) g(for) f(pulse) p
Fr 35 w(p) p Fs 50 3471 a(and) p Fk 33 w(pulse) p Fs(\() p
Fr(p+1) p Fs 12 w(\)) f(will) g(b) s(e) f(main) m(tained) j(at) e(eac) m
(h) h(no) s(de) f(\(b) s(ecause) g(of) f(the) h(FIF) m(O) g(prop) s
(ert) m(y) g(of) f(the) h(links\).) 48 b(This) 50 3583
y(guaran) m(tees) 32 b(the) e(in) m(violation) j(of) c(the) i(in) m(v)
-5 b(arian) m(t.) p Fg 3967 3696 a(2) p Fk 191 3809 a(Note:) p
Fs 38 w(On) 24 b(a) f(static) i(net) m(w) m(ork) g(where) g(only) e
(the) h(ro) s(ot) g(sends) g(messages) f(on) h(a) g(spanning) h(tree,) g
(there) g(is) e(no) h(need) 50 3922 y(for) i(pulse) h(messages) f(in) h
(order) g(to) g(guaran) m(tee) h(the) f(distributed) h(commit.) 40
b(The) 27 b(FIF) m(O) g(and) g(reliabilit) m(y) h(guaran) m(tees) 50
4035 y(on) 39 b(the) h(links) f(are) g(su\036cien) m(t.) 69
b(The) 39 b(pulse) h(will) g(b) s(ecome) f(useful) g(ho) m(w) m(ev) m
(er) j(when) e(used) f(as) g(a) g(piece) h(of) f(a) g(more) 50
4148 y(general) e(algorithm,) j(under) d(the) f(mo) s(del) h(of) f(a) g
(dynamic) h(net) m(w) m(ork,) j(in) c(the) h(follo) m(wing) h
(sections.) 58 b(Under) 37 b(all) f(the) 50 4261 y(mo) s(dels,) 30
b(the) h(pulse) f(mo) s(dule) h(will) g(w) m(ork) g(under) g(the) g(sp)
s(eci\034cation) g(in) g(table) g(2.) p Ft 50 4544 a(3) 131
b(Complete) 43 b(Algorithm) p Fs 50 4747 a(In) 28 b(this) h(section) g
(w) m(e) h(will) f(consider) g(an) g(async) m(hronous) h(net) m(w) m
(ork) h(whose) e(connectivit) m(y) h(ma) m(y) f(c) m(hange) h(in) f
(time;) h(the) 50 4860 y(net) m(w) m(ork) i(is) e(describ) s(ed) h(b) m
(y) f(the) h(dynamic) g(graph) g(G\(t\)) g(=) f(\(V\(t\),) h(E\(t\)\).)
191 4973 y(W) -8 b(e) 32 b(can) h(no) m(w) g(in) m(tro) s(duce) h(all) e
(the) h(comp) s(onen) m(ts) g(of) f(our) h(algorithm) h(mo) s(del.) 46
b(Figure) 33 b(1) f(illustrates) h(the) f(ev) m(en) m(t) 50
5086 y(\035o) m(w) f(b) s(et) m(w) m(een) h(the) e(v) -5
b(arious) 31 b(mo) s(dules) f(of) g(the) g(algorithm.) 42
b(The) 31 b(\034gure) g(also) f(maps) g(to) h(the) f(state) h(mac) m
(hine) h(of) d(the) 50 5198 y(whole) i(algorithm,) h(as) e(the) h
(di\033eren) m(t) g(mo) s(dules) g(corresp) s(ond) g(to) f(co) s(de) h
(executed) g(in) f(di\033eren) m(t) i(states.) p 50 5253
1594 4 v Fn 153 5307 a(5) p Fm 188 5338 a(When) 25 b(there) g(is) i(no)
e(confusion) i(ab) r(out) e(whic) n(h) h(no) r(de) g(w) n(e) g(are) g
(referring) h(to,) f(w) n(e) g(will) h(use) f(the) f(simpli\034ed) g
(notation) p Ff 26 w(\014) p Fe 3642 5346 a(p) p Fm 3678
5338 a(.) p Fn 153 5398 a(6) p Fm 188 5430 a(The) 34
b(remark) p Fl 33 w(if) g(not) i(pr) l(eviously) g(c) l(ommitte) l(d) p
Fm 42 w(in) e(the) f(algorithm) i(co) r(de) f(is) g(mean) n(t) f(to) h
(protect) g(from) f(situations) i(that) f(will) h(b) r(e) 50
5521 y(describ) r(ed) 29 b(later,) i(where) e(actions) h(will) g(b) r
(e) f(retransmitted) f(after) i(net) n(w) n(ork) f(c) n(hanges) g(ha) n
(v) n(e) f(o) r(ccurred) i(and) e(a) h(no) r(de) g(ma) n(y) f(receiv) n
(e) h(the) 50 5612 y(same) 24 b(pulse) h(message) h(again) f(as) h(w) n
(e) f(see) g(later) h(in) f(the) f(presen) n(tation.) 35
b(T) -6 b(o) 25 b(enforce) g(this) g(the) g(algorithm) g(either) g
(queries) g(the) f(database) 50 5704 y(or) i(writes) h(to) e(priv) l
(ate) h(p) r(ermanen) n(t) e(storage) j(the) e(last) i(committed) c
(pulse.) p Fs 2020 5953 a(5) p 90 rotate dyy eop
%%Page: 6 6
6 5 bop 50 314 3986 7 v Fk 50 399 a(Algorithm) 34 b(1) p
Fs 30 w(Pulse) c(Algorithm) i(\(Sync) m(hronizer\)) p
50 441 3986 4 v Fm 99 539 a(1:) p Fk 45 w(when:) p Fs
30 w(receiv) m(e) p Fk 32 w(data_message) p Fs 32 w(from) p
Fr 30 w(p) -5 b(ar) g(ent) p Fk 70 w(do) p Fm 99 652
a(2:) p Fs 136 w(store) 30 b(message) h(in) p Fj 30 w(\014) p
Fi 1019 667 a(l) q(ocal) q(C) 5 b(l) q(ock) p Fm 99 764
a(3:) p Fs 136 w(forw) m(ard) p Fk 31 w(data_message) p
Fs 32 w(to) 31 b(all) f(c) m(hildren) p Fr 32 w(c) p
Fs 36 w(in) p Fr 31 w(childr) -5 b(en_list) p Fm 99 877
a(4:) p Fk 45 w(when:) p Fs 30 w(receiv) m(e) p Fk 32
w(pulse) p Fs(\() p Fr(p) p Fs 6 w(\)) 30 b(message) g(from) p
Fr 31 w(p) -5 b(ar) g(ent) p Fk 70 w(do) p Fm 99 990
a(5:) p Fk 136 w(commit) p Fs(,) 30 b(if) f(not) i(previously) g
(committed,) h(all) e(messages) g(in) p Fj 31 w(\014) p
Fi 2508 1004 a(p) p Fd(\000) p Fc(1) p Fm 99 1103 a(6:) p
Fj 136 w(l) r(ocal) r(C) 7 b(l) r(ock) p Fo 28 w( ) p
Fj 26 w(p) p Fm 99 1216 a(7:) p Fk 136 w(for) p Fs 29
w(all) 31 b(c) m(hildren) p Fr 32 w(c) p Fs 36 w(in) p
Fr 30 w(childr) -5 b(en_list) p Fk 70 w(do) p Fm 99 1329
a(8:) p Fj 226 w(pul) r(seack) p Fh 3 w([) p Fj(c) p
Fh(]) p Fo 27 w( ) p Fj 25 w(f) 10 b(al) r(se) p Fm 99
1442 a(9:) p Fs 226 w(forw) m(ard) p Fk 32 w(pulse) p
Fs(\() p Fr(p) p Fs 6 w(\)) 30 b(message) g(to) p Fr
31 w(c) p Fm 60 1555 a(10:) p Fk 46 w(when:) p Fs 30
w(receiv) m(e) p Fk 32 w(pulse_ac) m(k) p Fs(\() p Fr(p) p
Fs 6 w(\)) g(message) g(from) p Fr 31 w(c) p Fk 66 w(do) p
Fm 60 1668 a(11:) p Fj 137 w(pul) r(seack) p Fh 3 w([) p
Fj(c) p Fh(]) p Fo 26 w( ) p Fj 25 w(tr) s(ue) p Fm 60
1781 a(12:) p Fk 137 w(if) p Fj 39 w(pul) r(seack) p
Fh 3 w([) p Fj(c) p Fh(]) d(=) p Fj 24 w(tr) s(ue) p
Fs 30 w(for) j(all) h(c) m(hildren) p Fr 32 w(c) p Fk
66 w(then) p Fm 60 1894 a(13:) p Fk 227 w(if) p Fj 40
w(par) s(ent) p Fo 24 w(6) p Fh(=) p Fj 25 w(nil) p Fk
62 w(then) p Fm 60 2006 a(14:) p Fs 318 w(send) p Fk
30 w(pulse_ac) m(k) p Fs(\() p Fr(p) p Fs 6 w(\)) f(message) h(to) p
Fr 30 w(p) -5 b(ar) g(ent) p Fm 60 2119 a(15:) p Fk 227
w(else) p Fs 31 w({) 31 b(if) e(paren) m(t) j(=) f(nil) f(,) g(i.e.) 41
b(ro) s(ot) 31 b(of) f(the) g(tree) h(}) p Fm 60 2232
a(16:) p Fk 318 w(commit) p Fs(,) e(if) h(not) h(previously) f
(committed,) i(all) f(messages) f(in) p Fj 31 w(\014) p
Fi 2689 2246 a(p) p Fm 60 2345 a(17:) p Fs 318 w(execute) p
Fk 31 w(generate_next_pulse) p Fs(\(\)) p Fm 60 2458
a(18:) p Fk 46 w(when:) p Fs 30 w(in) m(v) m(ok) m(ed) p
Fk 32 w(generate_next_pulse) p Fs(\(\)) p Fk 62 w(do) p
Fs 30 w({) g(co) s(de) h(for) f(Pro) s(cedure) h
(generate_next_pulse\(\)}) p Fm 60 2571 a(19:) p Fj 137
w(l) r(ocal) r(C) 7 b(l) r(ock) p Fo 28 w( ) p Fj 26
w(l) r(ocal) r(C) g(l) r(ock) p Fh 23 w(+) 20 b(1) p
Fm 60 2684 a(20:) p Fs 137 w(generate) p Fk 31 w(pulse) p
Fs(\() p Fr(lo) -5 b(c) g(alClo) g(ck) p Fs 10 w(\)) 33
b(message) e(and) f(send) h(to) f(all) h(c) m(hildren) p
Fm 60 2797 a(21:) p Fs 137 w(send) f(data) h(messages) f(for) h(pulse) p
Fr 30 w(lo) -5 b(c) g(alClo) g(ck) p Fs 43 w(to) 30 b(all) h(c) m
(hildren) p 50 2853 V 1296 3055 2129 4 v 661 3055 2764
4 v 659 3155 4 100 v Fv 862 3125 a(Input) p 1294 3155
V Fu 993 w(Net) n(w) n(ork_fail\(\)) p 3422 3155 V 661
3158 2764 4 v 659 3258 4 100 v Fv 710 3228 a(Precondition) p
1294 3258 V Fu 100 w(Async) n(hronous) 25 b(net) n(w) n(ork) h(with) i
(Unreliable) g(F) -7 b(ailure) 27 b(Detector) p 3422
3258 V 661 3261 2764 4 v 659 3361 4 100 v Fv 798 3331
a(Pro) m(vides) p 1294 3361 V Fu 788 w(Stable) h(o) n(v) n(erla) n(y) c
(net) n(w) n(ork) p 3422 3361 V 661 3364 2764 4 v 659
3464 4 100 v Fv 826 3434 a(Output) p 1294 3464 V Fu 889
w(Net) n(w) n(ork_c) n(hange\(\)) p 3422 3464 V 661 3467
2764 4 v Fs 1308 3621 a(T) -8 b(able) 32 b(3:) 40 b(Reset) 30
b(Mo) s(dule) g(Sp) s(eci\034cations) 191 3896 y(Eac) m(h) 38
b(no) s(de) f(is) f(enhanced) i(with) f(an) g(unreliable) h(failure) f
(detector) h(that) f(runs) f(indep) s(enden) m(tly) j(of) d(the) h
(other) 50 4009 y(comp) s(onen) m(ts.) 62 b(When) 37
b(a) g(c) m(hange) i(in) e(the) g(connectivit) m(y) i(of) e(the) g
(underlying) h(net) m(w) m(ork) h(is) e(detected,) j(the) d(failure) 50
4122 y(detector) c(sends) e(a) p Fk 32 w(freeze) p Fs
33 w(signal) h(to) g(the) g(running) h(algorithm) g(and) f(a) p
Fk 32 w(net) m(w) m(ork_c) m(hange\(\)) p Fs 33 w(noti\034cation) h
(will) 50 4235 y(start) d(the) h(Reset) f(pro) s(cedure.) 191
4348 y(The) 25 b(reset) g(pro) s(cedure) h(\(Algorithm) g(6\)) f
(simply) g(restarts) g(the) g(Spanning) h(T) -8 b(ree) 26
b(construction) h(algorithm) f(when) 50 4460 y(a) 35
b(top) s(ological) h(c) m(hange) g(o) s(ccurs,) g(allo) m(wing) g(the) f
(Spanning) h(T) -8 b(ree) 36 b(construction) h(to) d(pro) s(cede) i
(under) f(a) g(seemingly) 50 4573 y(static) f(net) m(w) m(ork.) 54
b(This) 35 b(mec) m(hanism) h(has) e(b) s(een) g(studied) h(in) g
(detail) g(b) m(y) f(Afek,) h(A) -8 b(w) m(erbuc) m(h) 36
b(and) f(Gafni) f([AA) m(G87) q(].) 50 4686 y(When) 41
b(the) h(spanning) g(tree) g(is) f(complete) i(the) e(Reconciliation) i
(Algorithm) g(is) e(noti\034ed.) 74 b(The) 42 b(Reconciliation) 50
4799 y(Algorithm) 33 b(is) g(basically) g(a) f(brute) h(force) g
(reinstatemen) m(t) i(of) d(the) h(Pulse) g(In) m(v) -5
b(arian) m(t) 34 b(after) f(a) f(net) m(w) m(ork) j(c) m(hange) f(has)
50 4912 y(o) s(ccurred.) 40 b(The) 29 b(p) s(o) m(w) m(er) g(of) e(the)
i(complete) g(algorithm) g(lies) f(in) g(its) g(simplicit) m(y) g(and) h
(indep) s(enden) m(t) h(sp) s(eci\034cations) e(of) 50
5025 y(its) i(mo) s(dules.) p Fp 50 5268 a(3.1) 112 b(F) -9
b(ully) 36 b(Connected) i(Dynamic) e(Net) m(w) m(ork) p
Fs 50 5440 a(F) -8 b(or) 32 b(the) h(momen) m(t) g(w) m(e) g(assume) f
(that) h(global) g(connectivit) m(y) g(is) f(main) m(tained) i(ev) m
(en) e(when) h(some) f(links) g(fail.) 45 b(No) s(des) 50
5553 y(do) 36 b(not) g(fail.) 57 b(There) 37 b(is) f(alw) m(a) m(ys) h
(a) e(spanning) i(tree) g(for) e(the) i(whole) f(net) m(w) m(ork,) k
(but) c(link) g(failures) g(ma) m(y) g(force) g(the) 2020
5953 y(6) p 90 rotate dyy eop
%%Page: 7 7
7 6 bop 747 1677 a
 currentpoint currentpoint translate 0.40579 0.40579 scale neg exch
neg exch translate
 747 1677 a @beginspecial 13 @llx 285
@lly 779 @urx 690 @ury 7660 @rwi @clip @setspecial
%%BeginDocument: baruch_algo.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: Microsoft PowerPoint - baruch_algo.ppt
%%Creator: Pscript.dll Version 5.0
%%CreationDate: 4/19/2002 3:21:13
%%BoundingBox: 13 13 779 599
%%Pages: 1
%%Orientation: Landscape
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (Lexmark Optra S 1625 Laser Printer) (2014)
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 13 13 779 599
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if showpage initgraphics courier setfont lmargin 720 moveto
errorname(VMError)eq{PrtVMMsg}{(ERROR: )prnt errorname prnt nl
(OFFENDING COMMAND: )prnt/command load prnt $error/ostack known{nl nl(STACK:)
prnt nl nl $error/ostack get aload length{==}repeat}if}ifelse systemdict
/showpage get exec(%%[ Error: )print errorname =print(; OffendingCommand: )
print/command load =print( ]%%)= flush}if end end end}dup 0 systemdict put dup
4 $brkpage put bind readonly put/currentpacking where{pop/setpacking where{pop
oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup length dict
begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding{ISOLatin1Encoding}
stopped{StandardEncoding}if def currentdict end/ErrFont-Latin1 exch definefont}
ifelse exch scalefont setfont counttomark 3 div cvi{moveto show}repeat showpage
quit}{cleartomark}ifelse}bind def
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/ADO_mxRot ~ d/TextInitialised? F d reinitialize E}{U
/Pscript_Win_Data 230 dict @ ` put/ADO_mxRot ~ d/TextInitialised? F d
reinitialize}?}b/terminate{!{& self eq{exit}{E}?}loop E}b/suspend/terminate , d
/resume{` Pscript_Win_Data `}b U `/lucas 21690 d/featurebegin{countdictstack
lucas[}b/featurecleanup{stopped{cleartomark @ lucas eq{! exit}if}loop
countdictstack ~ sub @ 0 gt{{E}repeat}{!}?}b E/snap{transform 0.25 sub round
0.25 add ~ 0.25 sub round 0.25 add ~ itransform}b/dsnap{dtransform round ~
round ~ idtransform}b/nonzero_round{@ 0.5 ge{round}{@ -0.5 lt{round}{0 ge{1}
{-1}?}?}?}b/nonzero_dsnap{dtransform nonzero_round ~ nonzero_round ~
idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ - neg 0 - C}b/irp{4 -2 $ + +S fx 4 2
$ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/solid{[]0 sd}b/g
{@ not{U/DefIf_save save put}if U/DefIf_bool 2 ^ put}b/DefIf_El{if U/DefIf_bool
get not @{U/DefIf_save get restore}if}b/e{DefIf_El !}b/UDF{L2?{undefinefont}{!}
?}b/UDR{L2?{undefineresource}{! !}?}b/freeVM{/Courier findfont[40 0 0 -40 0 0]
makefont Ji 2 vmreclaim}b
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 0 1 -1 0 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 0.11999 0 0 -0.11999 12.99968 779.0003 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 13 13 779 599
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_WinNT_Compat 5.0 0
userdict/Pscript_WinNT_Compat 19 dict dup begin/bd{bind def}bind def/ld{load
def}bd/$x matrix def/ANSIVec[16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde
16#4/macron 16#5/breve 16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A
/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60
/grave 16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand 16#8A
/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash 16#98
/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe 16#9F
/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency 16#A5/yen 16#A6
/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB
/guillemotleft 16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron
16#B0/degree 16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute
16#B5/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf 16#BE
/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE
/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute
16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE
/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3
/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9
/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE
/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute
16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9
/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn
16#FF/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{pop
pop}ifelse}forall/initialize{currentdict exch begin begin}bind def/terminate{
/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate load def
/resume/initialize load def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}def/SS{/pagesave save def}def/CB{pop pop pop pop}def
/B{pop pop pop pop}def/:/gsave load def/;/grestore load def/N/newpath load def
end put
%%EndResource
end reinitialize
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
NP
192 192 m 6192 192 l 6192 4692 l 192 4692 l CP
eoclip
1 1 1 SC
NP
191 191 m 6192 191 l 6192 4692 l 191 4692 l CP
AF
GSE
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.5039 0.5039 0.5039 SC
NP
392 2992 m 1492 2992 l 1492 3742 l 392 3742 l CP
AF
GSE
0 GpPBeg
1 1 1 SC
NP
342 2942 m 1442 2942 l 1442 3692 l 342 3692 l CP
AF
GSE
1 0 8 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
342 2942 m 342 3692 l 1442 3692 l 1442 2942 l CP
S
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{3{~ !}repeat 3 -1 $ ! findfont 1
^ ~ definefont fM @ @ 5 0 put 4 0 put 90 matrix R matrix concatmatrix makefont
Pscript_Windows_Font 3 1 $ put}b/UmF{L2?{Pscript_Windows_Font ~ undef}{!}?}b
/UmF42{@ findfont/FDepVector get{/FontName get undefinefont}forall
undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Helvetica
F /F0 0 /256 T /Helvetica mF 
/F0S96 F0 [150 0 0 -150 0 0 ] mFS
F0S96 Ji 
400 3283 M (Spanning Tree)[100 83 83 83 84 33 83 83 42 93 50 83  0]xS 
471 3463 M (Construction)[108 83 83 75 42 50 83 75 42 33 84  0]xS 
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.5039 0.5039 0.5039 SC
NP
2692 2992 m 3742 2992 l 3742 3742 l 2692 3742 l CP
AF
GSE
0 GpPBeg
1 1 1 SC
NP
2642 2942 m 3692 2942 l 3692 3692 l 2642 3692 l CP
AF
GSE
1 0 8 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
2642 2942 m 2642 3692 l 3692 3692 l 3692 2942 l CP
S
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol 2700 3373 M (Reconciliation)[108 83 75 83 83 76 33 33 34 83 42 33 83  0]xS 
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.5039 0.5039 0.5039 SC
NP
5467 2992 m 5094 2992 4792 3160 4792 3367 c 4792 3574 5094 3742 5467 3742 c 5840 3742 6142 3574 6142 3367 c 6142 3160 5840 2992 5467 2992 c CP
AF
GSE
0 GpPBeg
1 1 1 SC
NP
5417 2942 m 5044 2942 4742 3110 4742 3317 c 4742 3524 5044 3692 5417 3692 c 5790 3692 6092 3524 6092 3317 c 6092 3110 5790 2942 5417 2942 c CP
AF
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
5417 2942 m 5044 2942 4742 3110 4742 3317 c 4742 3524 5044 3692 5417 3692 c 5790 3692 6092 3524 6092 3317 c 6092 3110 5790 2942 5417 2942 c CP
S
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol 4892 3283 M (Pulse Algorithm)[100 83 33 75 83 42 100 33 84 83 50 33 42 84  0]xS 
4930 3463 M (\(Synchronizer\))[50 101 73 83 76 83 50 83 84 33 75 83 50  0]xS 
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.5039 0.5039 0.5039 SC
NP
742 1042 m 2192 1042 l 2192 1592 l 742 1592 l CP
AF
GSE
0 GpPBeg
1 1 1 SC
NP
692 992 m 2142 992 l 2142 1542 l 692 1542 l CP
AF
GSE
1 0 8 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
692 992 m 692 1542 l 2142 1542 l 2142 992 l CP
S
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol 855 1323 M (Reset Procedure)[108 83 75 83 42 42 100 50 83 75 83 84 84 50  0]xS 
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.5039 0.5039 0.5039 SC
NP
3559 1193 m 3464 1202 3392 1273 3392 1358 c 3392 1417 3427 1472 3484 1501 c 3483 1499 l 3451 1530 3433 1570 3433 1612 c 3433 1704 3516 1778 3619 1778 c 3627 1778 3634 1777 3641 1776 c 3640 1778 l 3699 1869 3808 1926 3927 1926 c 3987 1926 4046 1911 4097 1884 c 4097 1884 l 4150 1955 4241 1998 4337 1998 c 4465 1998 4577 1924 4614 1815 c 4614 1817 l 4654 1839 4699 1850 4745 1850 c 4881 1850 4992 1753 4993 1632 c 4993 1632 l 5136 1613 5242 1505 5242 1377 c 5242 1320 5221 1265 5182 1220 c 5181 1220 l 5193 1194 5200 1167 5200 1140 c 5200 1048 5131 968 5031 944 c 5032 943 l 5014 856 4928 792 4827 792 c 4766 792 4708 816 4669 857 c 4669 857 l 4634 816 4579 792 4520 792 c 4449 792 4385 828 4353 884 c 4354 887 l 4311 849 4253 828 4193 828 c 4109 828 4031 870 3992 936 c 3991 937 l 3947 914 3896 902 3845 902 c 3685 902 3556 1017 3556 1159 c 3556 1170 3557 1182 3558 1193 c CP
AF
GSE
0 GpPBeg
1 1 1 SC
NP
3509 1143 m 3414 1152 3342 1223 3342 1308 c 3342 1367 3377 1422 3434 1451 c 3433 1449 l 3401 1480 3383 1520 3383 1562 c 3383 1654 3466 1728 3569 1728 c 3577 1728 3584 1727 3591 1726 c 3590 1728 l 3649 1819 3758 1876 3877 1876 c 3937 1876 3996 1861 4047 1834 c 4047 1834 l 4100 1905 4191 1948 4287 1948 c 4415 1948 4527 1874 4564 1765 c 4564 1767 l 4604 1789 4649 1800 4695 1800 c 4831 1800 4942 1703 4943 1582 c 4943 1582 l 5086 1563 5192 1455 5192 1327 c 5192 1270 5171 1215 5132 1170 c 5131 1170 l 5143 1144 5150 1117 5150 1090 c 5150 998 5081 918 4981 894 c 4982 893 l 4964 806 4878 742 4777 742 c 4716 742 4658 766 4619 807 c 4619 807 l 4584 766 4529 742 4470 742 c 4399 742 4335 778 4303 834 c 4304 837 l 4261 799 4203 778 4143 778 c 4059 778 3981 820 3942 886 c 3941 887 l 3897 864 3846 852 3795 852 c 3635 852 3506 967 3506 1109 c 3506 1120 3507 1132 3508 1143 c CP
AF
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
3509 1143 m 3414 1152 3342 1223 3342 1308 c 3342 1367 3377 1422 3434 1451 c 3433 1449 l 3401 1480 3383 1520 3383 1562 c 3383 1654 3466 1728 3569 1728 c 3577 1728 3584 1727 3591 1726 c 3590 1728 l 3649 1819 3758 1876 3877 1876 c 3937 1876 3996 1861 4047 1834 c 4047 1834 l 4100 1905 4191 1948 4287 1948 c 4415 1948 4527 1874 4564 1765 c 4564 1767 l 4604 1789 4649 1800 4695 1800 c 4831 1800 4942 1703 4943 1582 c 4943 1582 l 5086 1563 5192 1455 5192 1327 c 5192 1270 5171 1215 5132 1170 c 5131 1170 l 5143 1144 5150 1117 5150 1090 c 5150 998 5081 918 4981 894 c 4982 893 l 4964 806 4878 742 4777 742 c 4716 742 4658 766 4619 807 c 4619 807 l 4584 766 4529 742 4470 742 c 4399 742 4335 778 4303 834 c 4304 837 l 4261 799 4203 778 4143 778 c 4059 778 3981 820 3942 886 c 3941 887 l 3897 864 3846 852 3795 852 c 3635 852 3506 967 3506 1109 c 3506 1120 3507 1132 3508 1143 c CP
S
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
3434 1451 m 3462 1466 3495 1474 3528 1474 c 3533 1474 3538 1474 3542 1474 c S
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
3591 1726 m 3607 1725 3623 1721 3639 1716 c S
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
4018 1785 m 4026 1802 4035 1818 4047 1834 c S
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
4564 1765 m 4570 1748 4574 1730 4575 1712 c S
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
4943 1582 m 4943 1582 4943 1581 4943 1580 c 4943 1496 4889 1420 4804 1383 c S
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
5069 1245 m 5096 1224 5117 1199 5131 1170 c S
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
4985 929 m 4985 928 4985 927 4985 926 c 4985 915 4984 904 4982 893 c S
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
4619 807 m 4606 821 4595 836 4587 852 c S
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
4303 834 m 4296 846 4291 859 4288 873 c S
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
3997 925 m 3980 910 3961 898 3941 887 c S
GSE
1 1 10 6.2500 [] 0 1 GpPBeg
0.0039 0.0039 0.0039 SC
NP
3508 1143 m 3510 1157 3514 1170 3518 1183 c S
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol 3977 1275 M (Failure)[92 83 33 33 83 50  0]xS 
3943 1455 M (Detector)[108 83 42 83 75 42 83  0]xS 
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.0039 0.0039 0.0039 SC
NP
1442 3314 m 2600 3314 l 2602 3314 2603 3315 2603 3317 c 2603 3319 2602 3320 2600 3320 c 1442 3320 l 1440 3320 1439 3319 1439 3317 c 1439 3315 1440 3314 1442 3314 c CP
2592 3292 m 2642 3317 l 2592 3342 l CP
F
GSE
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.0039 0.0039 0.0039 SC
NP
3692 3314 m 4700 3314 l 4702 3314 4703 3315 4703 3317 c 4703 3319 4702 3320 4700 3320 c 3692 3320 l 3690 3320 3689 3319 3689 3317 c 3689 3315 3690 3314 3692 3314 c CP
4692 3292 m 4742 3317 l 4692 3342 l CP
F
GSE
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.0039 0.0039 0.0039 SC
NP
4269 1945 m 5388 2912 l 5389 2913 5389 2915 5388 2917 c 5387 2918 5385 2918 5383 2917 c 4265 1950 l 4264 1948 4263 1946 4265 1945 c 4266 1944 4268 1944 4269 1945 c CP
5396 2890 m 5417 2942 l 5363 2928 l CP
F
GSE
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.0039 0.0039 0.0039 SC
NP
4269 1949 m 3200 2916 l 3199 2917 3197 2917 3196 2916 c 3194 2915 3194 2913 3196 2912 c 4265 1945 l 4266 1944 4268 1944 4269 1945 c 4270 1946 4270 1948 4269 1949 c CP
3221 2927 m 3167 2942 l 3187 2890 l CP
F
GSE
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.0039 0.0039 0.0039 SC
NP
4268 1950 m 933 2933 l 931 2934 929 2933 929 2931 c 928 2929 929 2928 931 2927 c 4266 1944 l 4268 1944 4269 1945 4270 1946 c 4270 1948 4270 1950 4268 1950 c CP
947 2952 m 892 2942 l 933 2904 l CP
F
GSE
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.0039 0.0039 0.0039 SC
NP
3348 1348 m 2183 1273 l 2182 1273 2180 1271 2180 1269 c 2181 1268 2182 1266 2184 1267 c 3348 1342 l 3350 1342 3351 1344 3351 1345 c 3351 1347 3350 1348 3348 1348 c CP
2190 1295 m 2142 1267 l 2193 1245 l CP
F
GSE
userdict /GpPBeg {gsave initclip 13 dict begin /c {curveto} bind def /l {lineto} bind def /m {moveto} bind def /NP {newpath} bind def /CP {closepath} bind def /SC {setrgbcolor} bind def /S {stroke} bind def /F {fill} bind def /AF {eofill} bind def 1 eq {setdash setlinewidth setmiterlimit setlinejoin setlinecap} if} put /GSE {end grestore} def
0 GpPBeg
0.0039 0.0039 0.0039 SC
NP
1420 1543 m 910 2904 l 909 2906 907 2906 906 2906 c 904 2905 903 2903 904 2902 c 1414 1541 l 1415 1539 1416 1538 1418 1539 c 1420 1540 1421 1541 1420 1543 c CP
933 2904 m 892 2942 l 886 2886 l CP
F
GSE

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
/DeviceGray dup setcolorspace /colspABC exch def
0 0 scol 1602 3218 M (Tree_change)[93 50 83 83 83 75 83 83 83 83  0]xS 
3802 3218 M (Pulse_restart)[100 83 33 75 83 83 51 83 75 42 83 50  0]xS 
/F0S71I62 F0 [113 98.578 98.578 -113 0 0 ] mFS
F0S71I62 Ji 
4723 2250 M (Freeze)[69 61 38 32 63 55 62 55 57 49  0 0]zS 
/F0S73IFFFFFFA0 F0 [115.906 -95.207 -95.207 -115.906 0 0 ] mFS
F0S73IFFFFFFA0 Ji 
3241 2754 M (Freeze)[71 -58 39 -32 64 -53 64 -52 58 -48  0 0]zS 
/F0S8FIFFFFFFD4 F0 [143.52 -43.602 -43.602 -143.52 0 0 ] mFS
F0S8FIFFFFFFD4 Ji 
2278 2484 M (Freeze)[88 -27 48 -14 79 -24 80 -25 71 -21  0 0]zS 
/F0S34IFFFFFF73 F0 [52.762 -140.371 -140.371 -52.762 0 0 ] mFS
F0S34IFFFFFF73 Ji 
818 2862 M (Network_change)[38 -101 29 -78 16 -41 37 -99 29 -78 18 -47 26 -70 29 -78 27 -71 29 -77 30 -78 29 -79 29 -77  0 0]zS 
/F0S95I0A F0 [149.59 10.457 10.457 -149.59 0 0 ] mFS
F0S95I0A Ji 
2349 1239 M (Network_fail)[108 8 83 5 43 3 106 8 83 6 50 3 75 5 82 6 42 3 84 6 33 2  0 0]zS 
LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%+ font Helvetica
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_WinNT_Compat 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF

%%EndDocument
@endspecial 747 1677 a
 currentpoint currentpoint translate 1 0.40579 div 1 0.40579 div scale
neg exch neg exch translate
 747 1677 a Fs 1165 1873 a(Figure) 31
b(1:) 40 b(Conceptual) 32 b(Replication) g(Algorithm) p
1216 2093 2288 4 v 581 2093 2923 4 v 579 2193 4 100 v
Fv 782 2163 a(Input) p 1214 2193 V Fu 939 w(T) -7 b(ree_c) n
(hange\(\),) 26 b(F) -7 b(reeze) p 3502 2193 V 581 2196
2923 4 v 579 2295 4 100 v Fv 631 2266 a(Precondition) p
1214 2295 V Fu 361 w(Stable) 28 b(spanning) f(tree) g(o) n(v) n(er) f
(the) h(o) n(v) n(erla) n(y) e(net) n(w) n(ork) p 3502
2295 V 581 2299 2923 4 v 579 2398 4 100 v Fv 718 2369
a(Pro) m(vides) p 1214 2398 V Fu 187 w(Pulse) j(In) n(v) -5
b(arian) n(t,) 26 b(Iden) n(tical) h(state) h(within) g(connected) f
(comp) r(onen) n(t) p 3502 2398 V 581 2402 2923 4 v 579
2501 4 100 v Fv 746 2471 a(Output) p 1214 2501 V Fu 1026
w(Pulse_restart\(\)) p 3502 2501 V 581 2505 2923 4 v
Fs 1085 2659 a(T) -8 b(able) 32 b(4:) 40 b(Reconciliation) 32
b(Pro) s(cedure) g(Sp) s(eci\034cations) 50 2934 y(rebuilding) g(of) e
(the) g(tree) p Fq 885 2901 a(7) p Fs 925 2934 a(.) 191
3047 y(Consider) e(the) f(no) s(de) p Fr 28 w(i) p Fs
35 w(with) h(highest) f(pulse) h(n) m(um) m(b) s(er) p
Fr 28 w(maxpulse) p Fs(.) 41 b(The) 27 b(highest) h(completed) h(pulse)
e(in) g(the) h(sys-) 50 3159 y(tem) f(is) p Fr 26 w(maxpulse-1) p
Fs(.) 40 b(Ev) m(en) 28 b(though) f(some) g(messages) f(ma) m(y) h(ha) m
(v) m(e) h(b) s(een) e(sen) m(t) h(during) g(pulse) p
Fr 27 w(maxpulse) p Fs(,) i(since) d(that) 50 3272 y(pulse) 31
b(w) m(as) g(not) g(completed,) h(it) f(needs) g(to) g(b) s(e) f
(re-executed) i(in) f(order) g(to) g(guaran) m(tee) i(the) e(in) m(v) -5
b(arian) m(t) 33 b(preserv) -5 b(ation.) 50 3385 y(The) 31
b(Reconciliation) h(algorithm) h(will) e(reset) g(the) p
Fr 31 w(lo) -5 b(c) g(alClo) g(ck) p Fs 43 w(of) 30 b(the) h(tree) h
(ro) s(ot) e(to) p Fr 31 w(maxpulse-1) p Fq 3396 3352
a(8) p Fs 3438 3385 a(.) 41 b(In) 31 b(a) f(practical) 50
3498 y(implemen) m(tation) k(this) d(v) -5 b(alue) 32
b(can) f(b) s(e) g(trivially) g(determined) i(and) f(set) f(while) h
(building) g(the) g(spanning) g(tree.) 43 b(The) 50 3611
y(reconciliation) 30 b(algorithm) f(will) f(send) g(a) p
Fk 27 w(pulse_restart) p Fs(\(\)) g(noti\034cation) i(to) e(the) g
(Sync) m(hronizer) i(up) s(on) d(its) h(termi-) 50 3724
y(nation.) 41 b(The) 30 b(pulse) g(algorithm) h(resumes) f(with) g(the)
g(tree) g(ro) s(ot) f(generating) j(pulse) p Fr 29 w(maxpulse) p
Fs 38 w(and) e(re-sending) g(all) 50 3837 y(the) 25 b(messages) g
(corresp) s(onding) h(to) f(that) h(pulse.) 39 b(The) 25
b(Sync) m(hronizer) i(Algorithm) f(is) f(enhanced) h(with) g(the) f
(follo) m(wing) 50 3950 y(wrapp) s(er) 31 b(in) f(order) h(to) g
(handle) g(the) g(t) m(w) m(o) h(noti\034cations.) p
50 4074 3986 7 v Fk 50 4153 a(Algorithm) i(2) p Fs 30
w(W) -8 b(rapp) s(er) 31 b(for) f(Pulse) h(Algorithm) p
50 4191 3986 4 v Fm 99 4294 a(1:) p Fk 45 w(when:) p
Fs 30 w(receiv) m(e) p Fk 32 w(freeze) p Fs(\(\)) g(noti\034cation) h
(from) f(failure) f(detector) p Fk 62 w(do) p Fm 99 4407
a(2:) p Fs 136 w(freeze) h(execution) p Fm 99 4519 a(3:) p
Fk 45 w(when:) p Fs 30 w(receiv) m(e) p Fk 32 w(pulse_restart) p
Fs(\(\)) f(noti\034cation) j(from) d(reconciliation) j(mo) s(dule) p
Fk 61 w(do) p Fm 99 4632 a(4:) p Fk 136 w(if) p Fs 39
w(\() p Fj(par) s(ent) p Fh 25 w(=) p Fj 25 w(N) 10 b(I) d(L) p
Fs(\)) p Fk 60 w(then) p Fm 99 4745 a(5:) p Fs 226 w(execute) p
Fk 31 w(generate_next_pulse) p Fs(\(\)) p 50 4812 V Fk
50 5128 a(Lemma) 35 b(2) p Fr 45 w(A) n(lgorithms) d(2,1) g(maintain) f
(the) i(Pulse) g(invariant) f(under) h(a) g(ful) 5 b(ly) 31
b(c) -5 b(onne) g(cte) g(d) 35 b(dynamic) d(network) p
Fk 191 5249 a(Pro) s(of:) p 50 5311 1594 4 v Fn 153 5364
a(7) p Fm 188 5396 a(An) c(optimal) g(failure) h(detector) g(will) g
(notify) g(the) f(algorithm) h(of) g(a) f(net) n(w) n(ork) g(c) n
(hange,) i(only) e(if) h(that) f(c) n(hange) h(a\033ects) f(the) g
(existing) 50 5487 y(spanning) d(tree.) p Fn 153 5547
a(8) p Fm 188 5579 a(As) g(no) h(no) r(de) g(disconnects) g(w) n(e) g
(can) g(assume) f(that) g(the) h(new) f(spanning) h(tree) g(has) g(the)
f(same) g(ro) r(ot) i(as) f(the) f(old) h(one.) p Fs
2020 5953 a(7) p 90 rotate dyy eop
%%Page: 8 8
8 7 bop Fs 191 399 a(A) 26 b(new) h(pulse) g(is) f(generated) i(only) f
(if) f(the) g(algorithm) j(executes) d(line) p Fj 27
w(P) 13 b(A) p Fc 2685 413 a(17) p Fs 2787 399 a(\(line) 27
b(17) f(of) h(the) f(Pulse) h(Algorithm\)) 50 511 y(or) j(lines) p
Fj 31 w(W) p Fc 453 525 a(5) p Fs 522 511 a(\(line) h(5) f(of) g(the) h
(W) -8 b(rapp) s(er\).) 191 624 y(A) m(t) 21 b(b) s(oth) h(p) s(oin) m
(ts) g(the) p Fr 21 w(lo) -5 b(c) g(alClo) g(ck) p Fs
34 w(of) 21 b(the) g(ro) s(ot) h(is) f(incremen) m(ted) i(and) f(the) g
(next) f(consecutiv) m(e) i(pulse) e(is) g(generated.) 50
737 y(If) g(the) h(new) g(pulse) g(is) g(created) g(in) g(line) p
Fj 23 w(P) 13 b(A) p Fc 1468 751 a(17) p Fs 1543 737
a(,) 23 b(then) f(the) h(in) m(v) -5 b(arian) m(t) 23
b(is) f(main) m(tained) i(follo) m(wing) f(Lemma) g(1) f(as) f(it) h
(means) 50 850 y(the) 34 b(net) m(w) m(ork) h(w) m(as) e(static) h(for)
f(the) h(duration) h(of) e(the) h(pulse.) 49 b(If) 33
b(the) h(maxim) m(um) h(pulse) e(n) m(um) m(b) s(er) i(detected) g(in) e
(the) 50 963 y(system) d(is) p Fr 31 w(maxpulse) p Fs
39 w(then) h(there) h(w) m(as) f(a) g(no) s(de) p Fr
31 w(i) p Fs 39 w(that) h(previously) f(generated) h(pulse) f(n) m(um) m
(b) s(er) p Fr 33 w(maxpulse) p Fs(.) 43 b(That) 50 1076
y(could) 33 b(ha) m(v) m(e) g(happ) s(ened) g(only) f(in) g(lines) p
Fj 33 w(P) 13 b(A) p Fc 1569 1090 a(17) p Fs 1676 1076
a(or) p Fj 32 w(W) p Fc 1874 1090 a(5) p Fs 1913 1076
a(,) 33 b(as) e(men) m(tioned) k(b) s(efore.) 46 b(By) 31
b(induction,) j(since,) f(according) 50 1189 y(to) 42
b(the) f(algorithm,) 46 b(line) p Fj 42 w(W) p Fc 1057
1203 a(5) p Fs 1138 1189 a(will) c(nev) m(er) g(create) h(a) e(pulse) h
(n) m(um) m(b) s(er) h(that) f(w) m(asn't) h(already) f(in) g(the) g
(system,) i(it) 50 1302 y(follo) m(ws) 33 b(that) h(pulse) f(n) m(um) m
(b) s(er) p Fr 34 w(maxpulse) p Fs 41 w(w) m(as) g(initially) h
(originated) g(b) m(y) f(a) g(note) p Fr 33 w(j) p Fs
46 w(executing) g(line) p Fj 34 w(P) 13 b(A) p Fc 3654
1316 a(17) p Fs 3729 1302 a(.) 47 b(When) 50 1415 y(j) 32
b(created) p Fk 34 w(pulse) p Fs(\() p Fr(maxpulse) p
Fs 7 w(\)) i(all) f(the) h(no) s(des) f(in) g(the) g(tree) h(ha) m(v) m
(e) g(already) f(receiv) m(ed) h(the) g(data) f(corresp) s(onding) i
(to) 50 1528 y(pulse) p Fr 27 w(maxpulse-1) p Fs 41 w(\(the) 28
b(data) g(is) e(piggy-bac) m(k) m(ed) k(on) d(the) p
Fk 27 w(pulse) p Fs(\() p Fr(maxpulse-1) p Fs 12 w(\)) i(message\).) 40
b(When) 28 b(the) f(algorithm) 50 1641 y(restarts) j(the) h(pulse) g
(all) f(the) h(no) s(des) f(will) h(b) s(e) f(able) h(to) f(commit) i
(on) p 2347 1567 449 4 v Fj 30 w(\014) p Fi 2398 1656
a(maxpul) q(se) p Fd(\000) p Fc(1) p Fs 2796 1641 a(.) p
Fg 3967 1753 a(2) p Fp 50 1997 a(3.2) 112 b(F) -9 b(ail-Stop) 37
b(Net) m(w) m(ork) p Fs 50 2168 a(W) -8 b(e) 24 b(extend) h(the) f(mo) s
(del) h(to) f(supp) s(ort) g(no) s(de) h(failures) f(\(crashes\).) 39
b(A) m(t) 24 b(this) g(p) s(oin) m(t) h(w) m(e) g(consider) g(that) f
(failed) h(no) s(des) e(do) 50 2281 y(not) k(reco) m(v) m(er.) 41
b(W) -8 b(e) 27 b(also) g(consider) h(the) f(situation) h(where) g
(link) f(failures) g(can) h(partition) g(the) f(net) m(w) m(ork) i(in) m
(to) f(separate) 50 2394 y(comp) s(onen) m(ts) 39 b(whic) m(h) g(are) f
(unable) g(to) g(comm) m(unicate) i(with) e(eac) m(h) h(other.) 63
b(If,) 38 b(for) g(example,) i(w) m(e) e(ha) m(v) m(e) h(t) m(w) m(o) g
(suc) m(h) 50 2507 y(comp) s(onen) m(ts,) e(A) e(and) g(B,) g(they) g
(are) g(completely) h(disjoin) m(t) f(and) g(a) g(no) s(de) g(in) g(A) g
(cannot) g(comm) m(unicate) j(with) d(an) m(y) 50 2620
y(no) s(de) 30 b(in) h(B,) f(but) h(can) f(comm) m(unicate) j(with) e
(an) m(y) g(other) g(no) s(de) g(from) f(A.) 191 2733
y(Among) e(the) f(set) h(of) e(di\033eren) m(t) j(connected) g(comp) s
(onen) m(ts) g(w) m(e) f(will) f(iden) m(tify) h(exactly) g(one) f
(comp) s(onen) m(t) i(as) e(b) s(eing) 50 2846 y(the) p
Fr 36 w(primary) p Fs 43 w(comp) s(onen) m(t.) 60 b(The) 36
b(primary) h(comp) s(onen) m(t) g(is) f(determined) i(using) e(a) p
Fr 36 w(quorum) p Fs 44 w(system.) 57 b(The) 36 b(syn-) 50
2959 y(c) m(hronizer) e(algorithm) g(will) f(con) m(tin) m(ue) i(to) e
(execute) g(only) f(in) h(the) g(primary) g(comp) s(onen) m(t.) 48
b(In) 33 b(the) f(fail-stop) h(mo) s(del,) 50 3072 y(the) j(no) s(des) g
(that) g(b) s(ecome) h(disconnected) g(from) f(the) h(primary) f(comp) s
(onen) m(t) i(are) e(considered) h(failed) g(and) f(do) g(not) 50
3185 y(re-merge) 31 b(with) g(the) g(primary) -8 b(.) 191
3298 y(As) 35 b(men) m(tioned,) k(the) e(primary) f(comp) s(onen) m(t) i
(is) d(determined) j(using) e(a) g(quorum) g(system.) 57
b(Quorum) 37 b(systems) 50 3410 y(and) c(their) g(prop) s(erties) h(ha)
m(v) m(e) g(b) s(een) e(largely) i(studied) f(in) g(the) g(literature) h
([A) -10 b(W96,) 33 b(JM90) q(,) f(W) -8 b(o) s(o98) q(].) 48
b(Examples) 33 b(of) 50 3523 y(quorum) e(systems) e(include) j(ma) 5
b(jorit) m(y) -8 b(,) 31 b(monarc) m(h) m(y) -8 b(,) 33
b(tree-based) f(and) e(dynamic) i(linear) f(v) m(oting.) 191
3636 y(The) i(algorithm) i(remains) e(basically) h(the) f(same,) h(but)
f(the) g(reconciliation) i(phase) f(will) f(also) g(collect) h(the) f
(data) 50 3749 y(necessary) 43 b(to) g(determine) i(the) e(primary) h
(comp) s(onen) m(t.) 81 b(This) 43 b(information) h(could) g(b) s(e) f
(collected) h(b) m(y) g(the) f(tree) 50 3862 y(construction) 29
b(algorithm,) g(th) m(us) f(impro) m(ving) h(the) e(e\036ciency) -8
b(.) 41 b(F) -8 b(or) 28 b(clarit) m(y) h(purp) s(oses) e(ho) m(w) m
(ev) m(er,) j(w) m(e) e(prefer) g(to) f(k) m(eep) 50
3975 y(the) i(algorithm) i(blo) s(c) m(ks) d(indep) s(enden) m(t.) 42
b(The) 30 b(algorithm) g(stops) f(in) g(all) g(non-primary) i(comp) s
(onen) m(ts.) 41 b(In) 29 b(App) s(endix) 50 4088 y(A) h(w) m(e) h(sho)
m(w) g(a) f(sample) h(implemen) m(tation) i(of) d(a) h(quorum) g
(detection) g(mec) m(hanism) h(based) f(on) f(w) m(eigh) m(ted) j(ma) 5
b(jorit) m(y) -8 b(.) 191 4201 y(The) 35 b(fail-stop) g(mo) s(del) h
(exhibits) f(the) g(famous) g(Consensus) g(imp) s(ossibilit) m(y) g
(problem,) i(presen) m(ted) g(b) m(y) e(Fisc) m(her,) 50
4314 y(Lync) m(h) 23 b(and) f(P) m(aterson) i([FLP85) q(].) 38
b(Consider) p Fr 22 w(maxpulse) p Fs 30 w(to) 22 b(b) s(e) g(the) g
(maxim) m(um) h(lo) s(calClo) s(c) m(k) g(v) -5 b(alue) 22
b(in) g(a) g(comp) s(onen) m(t.) 50 4427 y(It) 32 b(is) g(p) s(ossible)
h(that) g(some) g(mem) m(b) s(ers) g(\(no) m(w) h(in) f(a) f
(di\033eren) m(t) i(comp) s(onen) m(t\)) h(completed) f(the) f(pulse) p
Fr 33 w(maxpulse) p Fs 40 w(and) 50 4540 y(mo) m(v) m(ed) 27
b(on) f(to) g(the) h(follo) m(wing) g(pulse,) g(committing) h(on) e
(the) g(messages) g(from) g(pulse) p Fr 26 w(maxpulse.) p
Fs 40 w(Alternativ) m(ely) -8 b(,) 28 b(it) e(is) 50
4652 y(p) s(ossible) g(that) i(there) f(are) g(no) s(des) g(that) g
(didn't) h(adv) -5 b(ance) 28 b(to) f(pulse) p Fr 27
w(maxpulse) p Fs 34 w(and) h(therefore) f(didn't) h(ev) m(en) g(commit)
50 4765 y(on) e(pulse) p Fr 27 w(maxpulse-1.) p Fs 40
w(If) f(all) i(the) f(no) s(des) g(in) h(the) f(curren) m(t) i(comp) s
(onen) m(t) g(ha) m(v) m(e) g(the) e(same) h(lo) s(cal) f(clo) s(c) m
(k,) h(they) g(cannot) 50 4878 y(tell) 35 b(whic) m(h) h(of) e(the) h
(ab) s(o) m(v) m(e) h(scenarios) f(is) f(presen) m(t) i(in) f(the) g
(system.) 53 b(Ho) m(w) m(ev) m(er,) 38 b(the) d(k) m(ey) f(elemen) m
(t) j(in) d(o) m(v) m(ercoming) 50 4991 y(this) c(problem) i(is) e(the)
g(fact) h(that) f(the) h(t) m(w) m(o) h(describ) s(ed) f(situations) g
(cannot) g(o) s(ccur) f(sim) m(ultaneously!) p Fk 50
5225 a(Lemma) 35 b(3) p Fr 45 w(The) e(algorithm) f(maintains) f(the) i
(Pulse) g(Invariant) f(under) h(the) g(fail-stop) f(network) h(mo) -5
b(del.) p Fk 191 5347 a(Pro) s(of:) p Fs 191 5459 a(Let) p
Fr 30 w(maxpulse) p Fs 38 w(b) s(e) 30 b(the) g(maxim) m(um) h(pulse) g
(n) m(um) m(b) s(er) g(in) f(the) g(primary) h(comp) s(onen) m(t.) 42
b(A) m(ccording) 31 b(to) f(Lemma) i(2,) 50 5572 y(the) f(in) m(v) -5
b(arian) m(t) 32 b(is) e(main) m(tained) i(for) e(all) p
Fr 31 w(p<maxpulse) p Fs(.) 42 b(As) 30 b(the) g(pulse) h(algorithm) h
(resumes,) e(all) h(the) g(messages) f(b) s(e-) 50 5685
y(longing) c(to) g(pulse) p Fr 25 w(maxpulse) p Fs 34
w(will) f(b) s(e) h(retransmitted.) 40 b(If) 25 b(there) h(exists) e
(\(outside) i(the) g(comp) s(onen) m(t\)) h(a) f(no) s(de) p
Fr 25 w(j) p Fs 38 w(with) 2020 5953 y(8) p 90 rotate
dyy eop
%%Page: 9 9
9 8 bop Fr 50 399 a(lo) -5 b(c) g(alClo) g(ck=maxpulse+1) p
Fs(,) 30 b(it) 24 b(means) g(that) p Fr 25 w(j) p Fs
37 w(already) h(committed) h(on) e(the) h(messages) f(of) g(pulse) p
Fr 24 w(maxpulse) p Fs(.) 40 b(In) 24 b(this) 50 511
y(case,) 29 b(all) g(the) h(no) s(des) e(in) h(the) h(primary) f(will) h
(ha) m(v) m(e) p Fr 30 w(lo) -5 b(c) g(alClo) g(ck=maxpulse) p
Fs 39 w(and) p Fj 30 w(\014) p Fi 2844 526 a(maxpul) q(se) p
Fh 3177 511 a(=) p 3273 438 359 4 v Fj 25 w(\014) p Fi
3324 526 a(maxpul) q(se) p Fs 3632 511 a(,) 29 b(therefore) 50
624 y(they) 22 b(will) h(commit) h(on) e(the) h(same) g(set) f(of) g
(messages) h(as) f(no) s(de) p Fr 22 w(j) p Fs 35 w(main) m(taining) j
(the) e(consistency) g(for) f(pulse) p Fr 22 w(maxpulse) p
Fs(.) 50 737 y(If) 34 b(ho) m(w) m(ev) m(er,) k(outside) e(the) f(new) g
(primary) h(comp) s(onen) m(t,) i(there) d(exists) f(a) h(no) s(de) p
Fr 35 w(i) p Fs(,) h(with) p Fr 35 w(lo) -5 b(c) g(alClo) g
(ck=maxpulse-1) p Fs(,) 50 850 y(then) 33 b(the) f(primary) i(will) e
(con) m(tin) m(ue) j(the) e(sync) m(hronizer) h(algorithm) f(from) g
(pulse) p Fr 33 w(maxpulse) p Fs 40 w(whic) m(h) g(do) s(es) f(not) h
(con-) 50 963 y(tradict) e(the) g(state) f(at) h(no) s(de) p
Fr 30 w(i) p Fs(.) 191 1076 y(A) m(ccording) j(to) e(the) g(quorum) h
(guaran) m(tees,) i(at) d(most) g(one) h(comp) s(onen) m(t) g(will) g
(b) s(e) f(c) m(hosen) h(as) f(primary) h(and) f(will) 50
1189 y(con) m(tin) m(ue) i(the) e(execution) h(of) f(the) g(Pulse) g
(algorithm.) 47 b(A) m(ccording) 34 b(to) e(the) g(algorithm) h(all) f
(the) h(other) f(comp) s(onen) m(ts) 50 1302 y(will) f(nev) m(er) g
(commit) g(an) m(y) g(action) g(from) f(this) h(momen) m(t) h(on.) 40
b(Th) m(us,) 32 b(the) e(in) m(v) -5 b(arian) m(t) 32
b(is) e(preserv) m(ed.) p Fg 3967 1415 a(2) p Fp 50 1658
a(3.3) 112 b(P) m(artitionable) 35 b(Net) m(w) m(ork) p
Fs 50 1830 a(W) -8 b(e) 41 b(\034nally) g(consider) h(the) f(most) g
(general) h(net) m(w) m(ork) g(mo) s(del) f(G\(V\(t\),) j(E\(t\)\)) d
(where) h(no) s(des) f(can) g(fail) f(and) i(sub-) 50
1943 y(sequen) m(tly) i(reco) m(v) m(er;) 53 b(link) 44
b(failures/reco) m(v) m(eries) j(can) d(cause) h(the) f(net) m(w) m
(ork) i(graph) f(to) f(partition) i(in) m(to) f(separate) 50
2056 y(comp) s(onen) m(ts) 34 b(and) f(partitioned) h(comp) s(onen) m
(ts) g(can) f(re-merge.) 49 b(All) 33 b(these) f(ev) m(en) m(ts) i(can)
f(o) s(ccur) g(indep) s(enden) m(tly) -8 b(,) 36 b(in) 50
2168 y(cascade) g(or) g(sim) m(ultaneously) -8 b(,) 39
b(in) d(an) m(y) g(com) m(bination.) 58 b(As) 35 b(b) s(efore,) i(at) f
(all) g(times) g(only) g(one) g(comp) s(onen) m(t) h(will) f(b) s(e) 50
2281 y(iden) m(ti\034ed) j(as) e(the) g(primary) h(comp) s(onen) m(t) h
(and) e(the) h(pulse) f(algorithm) i(will) e(b) s(e) g(executed) h
(only) f(in) h(the) f(primary) 50 2394 y(comp) s(onen) m(t.) j(Ho) m(w)
m(ev) m(er,) 27 b(the) d(no) s(des) g(in) g(the) g(non-primary) h(comp)
s(onen) m(ts) h(are) e(not) g(forev) m(er) g(stopp) s(ed;) j(instead,) f
(they) 50 2507 y(ma) m(y) h(exc) m(hange) h(information) g(with) f
(other) h(no) s(des,) f(as) g(the) g(net) m(w) m(ork) h(connectivit) m
(y) g(c) m(hanges,) h(and) e(ev) m(en) g(rejoin) g(the) 50
2620 y(primary) k(comp) s(onen) m(t.) 191 2733 y(This) 25
b(mo) s(del) g(in) m(tro) s(duces) h(a) f(new) g(complication.) 41
b(When) 25 b(sev) m(eral) h(previously) f(separated) h(comp) s(onen) m
(ts) g(merge,) 50 2846 y(they) 20 b(will) h(ha) m(v) m(e) h(di\033eren)
m(t) f(kno) m(wledge) h(ab) s(out) f(the) g(state) g(of) f(the) h
(system) e(and) i(will) g(need) g(to) g(b) s(e) f(up) s(dated) h(to) g
(the) g(most) 50 2959 y(recen) m(t) 32 b(information) h(a) m(v) -5
b(ailable) 32 b(in) f(the) h(comp) s(onen) m(t.) 44 b(F) -8
b(or) 32 b(simplicit) m(y) -8 b(,) 32 b(but) g(without) g(restricting) g
(the) g(generalit) m(y) -8 b(,) 50 3072 y(w) m(e) 30
b(can) f(assume) g(that) g(the) h(ro) s(ot) f(of) f(the) h(new) h(tree)
f(is) g(one) g(of) g(the) g(\020most) g(up) s(dated\021) 38
b(no) s(des) 28 b(in) i(the) f(comp) s(onen) m(t) h(\(it) 50
3185 y(has) 24 b(the) g(maxim) m(um) h(pulse) f(n) m(um) m(b) s(er\).)
40 b(This) 24 b(can) g(b) s(e) g(trivially) g(enforced) h(up) s(on) f
(the) g(construction) h(of) f(the) g(spanning) 50 3298
y(tree.) 191 3410 y(The) g(Reconciliation) h(pro) s(cedure) f(will) g
(bring) g(all) g(no) s(des) f(to) h(the) f(same) p Fr
24 w(lo) -5 b(c) g(alClo) g(ck) p Fs 35 w(v) g(alue) 24
b(and) g(up) s(date) g(the) g(lo) s(cal) 50 3523 y(bu\033ers) j
(corresp) s(ondingly) i(in) f(order) g(to) g(re-establish) g(the) g(in)
m(v) -5 b(arian) m(t.) 42 b(The) 28 b(more) g(up) s(dated) g(no) s(des)
g(will) g(pass) f(their) 50 3636 y(information) j(to) e(the) h(less) f
(up) s(dated) h(ones.) 40 b(A) m(ctions) 29 b(b) s(elonging) h(to) e
(completed) i(pulses) e(w) m(ere) i(already) f(committed) 50
3749 y(b) m(y) 36 b(the) h(primary) f(comp) s(onen) m(t) i(and) e
(therefore) h(can) g(b) s(e) f(safely) f(committed) j(b) m(y) e(the) g
(less) g(up) s(dated) h(mem) m(b) s(ers) g(at) 50 3862
y(this) d(time.) 51 b(This) 34 b(phase) g(pro) s(ceeds) g(lo) s(cally)
-8 b(,) 35 b(in) f(parallel) h(on) f(eac) m(h) g(link) g(of) g(the) g
(o) m(v) m(erla) m(y) h(net) m(w) m(ork.) 52 b(A) m(t) 34
b(the) h(same) 50 3975 y(time) c(the) f(ro) s(ot) g(will) h(start) f(a)
g(termination) i(detection) g(w) m(a) m(v) m(e) g(b) m(y) e(sending) h
(a) p Fk 30 w(reconcile) p Fs 30 w(message.) 41 b(When) 30
b(a) h(no) s(de) 50 4088 y(is) 38 b(reconciled) j(with) e(its) f(paren)
m(t,) 43 b(the) p Fk 39 w(reconcile) p Fs 39 w(message) c(is) f
(propagated) j(on) e(the) g(tree) g(to) m(w) m(ards) i(the) e(lea) m(v)
m(es.) 50 4201 y(When) 31 b(\034nished) g(reconciling,) i(the) e(lea) m
(v) m(es) h(of) e(the) h(tree) h(will) f(generate) p
Fk 32 w(reconcile_ac) m(k) p Fs 31 w(messages) g(marking) g(the) 50
4314 y(completion) c(of) d(the) i(pro) s(cedure.) 40
b(These) 25 b(ac) m(kno) m(wledgmen) m(ts) j(are) e(propagated) h(bac) m
(k) f(to) m(w) m(ards) g(the) g(ro) s(ot) f(once) h(eac) m(h) 50
4427 y(no) s(de) 34 b(has) h(receiv) m(ed) g(a) p Fk
35 w(reconcile_ac) m(k) p Fs 35 w(message) f(from) h(all) f(its) h(c) m
(hildren.) 54 b(This) 35 b(pro) s(cess) f(is) g(executed) h(for) f(an) m
(y) 50 4540 y(c) m(hanges) e(in) g(the) g(connectivit) m(y) -8
b(,) 33 b(and) f(will) g(b) s(e) f(triggered) i(ev) m(en) f(when) g
(non-primary) h(comp) s(onen) m(ts) g(merge.) 44 b(When) 50
4652 y(the) 28 b(reconciliation) h(phase) f(is) f(\034nished,) i(if) e
(the) g(newly) h(formed) g(comp) s(onen) m(t) h(has) f(the) f(quorum,) i
(it) f(will) f(restart) h(the) 50 4765 y(pulse) i(algorithm.) 191
4878 y(The) p Fr 27 w(r) -5 b(e) g(c) g(oncile) g(dPulse) p
Fs 37 w(v) g(ariable) 27 b(k) m(eeps) f(trac) m(k) h(of) f(the) h
(maxim) m(um) h(pulse) e(n) m(um) m(b) s(er) i(in) f(the) f(comp) s
(onen) m(t) i(in) f(order) 50 4991 y(to) 39 b(detect) i(the) e
(termination) i(of) e(the) p Fk 40 w(LinkUp) s(date) p
Fs 39 w(pro) s(cedure.) 69 b(The) p Fr 40 w(clo) -5 b(cks) p
Fs 7 w([]) 41 b(arra) m(y) g(in) e(the) p Fk 40 w(LinkUp) s(date) p
Fs 50 5104 a(pro) s(cedure) d(k) m(eeps) g(trac) m(k) h(of) e(the) h
(curren) m(t) h(state) f(of) f(eac) m(h) i(neigh) m(b) s(our) g(as) f
(far) f(as) g(this) h(no) s(de) g(kno) m(ws,) h(in) f(order) h(to) 50
5217 y(v) m(erify) 28 b(the) h(completion) h(of) e(the) h(up) s(dating)
h(pro) s(cedure.) 41 b(Note) 28 b(that) h(the) g(up) s(dating) g(mec) m
(hanism) i(is) d(not) h(restricted) 50 5330 y(to) h(the) g(tree) h
(links) e(but) i(can) f(use) g(all) g(a) m(v) -5 b(ailable) 31
b(connections) h(in) e(order) g(to) h(sp) s(eed) e(the) i(pro) s(cess.)
40 b(Ho) m(w) m(ev) m(er,) 31 b(as) f(it) g(is) 50 5443
y(presen) m(ted,) i(the) p Fk 31 w(LinkUp) s(date) p
Fs 31 w(pro) s(cedure) g(is) e(ine\036cien) m(t) j(b) s(ecause) e(sev) m
(eral) g(no) s(des) g(ma) m(y) g(redundan) m(tly) h(attempt) 50
5556 y(to) 40 b(up) s(date) h(the) g(same) f(no) s(de.) 71
b(This) 40 b(can) h(b) s(e) f(a) m(v) m(oided) i(with) e(more) h
(careful) g(information) h(exc) m(hange,) i(but) d(this) 50
5669 y(metho) s(d) 31 b(w) m(as) f(preferred) i(to) e(illustrate) h
(the) g(simplicit) m(y) h(of) d(the) i(basic) g(pro) s(cess.) 2020
5953 y(9) p 90 rotate dyy eop
%%Page: 10 10
10 9 bop 50 598 3986 7 v Fk 50 677 a(Algorithm) 34 b(3) p
Fs 30 w(Reconciliation) d(Algorithm) p 50 715 3986 4
v Fm 99 818 a(1:) p Fk 45 w(when:) p Fs 30 w(receiv) m(e) p
Fk 32 w(tree_c) m(hange) p Fs(\(\)) g(noti\034cation) i(from) d
(Spanning) i(T) -8 b(ree) 31 b(Construction) h(mo) s(dule) p
Fk 61 w(do) p Fm 99 931 a(2:) p Fs 136 w(execute) p Fk
31 w(LinkUp) s(date) p Fs(\(\)) e(pro) s(cedure) p Fm
99 1044 a(3:) p Fk 136 w(if) p Fs 39 w(\() p Fr(p) -5
b(ar) g(ent) p Fs 40 w(=) 31 b(NIL\)) p Fk 60 w(then) p
Fm 99 1157 a(4:) p Fs 226 w(send) p Fk 31 w(reconcile) p
Fs(\() p Fr(lo) -5 b(c) g(alClo) g(ck) p Fs 10 w(\)) 33
b(message) d(to) h(all) f(c) m(hildren) p Fm 99 1269
a(5:) p Fk 45 w(when:) p Fs 30 w(receiv) m(e) p Fk 32
w(reconcile) p Fs(\() p Fr(p) p Fs 6 w(\)) g(from) p
Fr 30 w(p) -5 b(ar) g(ent) p Fk 71 w(do) p Fm 99 1382
a(6:) p Fj 136 w(r) s(econcil) r(e) p Fo 26 w( ) p Fj
25 w(T) 13 b(R) q(U) d(E) p Fm 99 1495 a(7:) p Fj 136
w(r) s(econcil) r(edC) d(l) r(ock) p Fo 29 w( ) p Fj
25 w(p) p Fm 99 1608 a(8:) p Fk 45 w(when:) p Fs 30 w(\() p
Fr(r) -5 b(e) g(c) g(oncile) 36 b(=) p Fs 36 w(TR) m(UE\)) 31
b(and) f(\() p Fr(lo) -5 b(c) g(alClo) g(ck) p Fs 43
w(=) p Fr 31 w(r) g(e) g(c) g(oncile) g(dClo) g(ck) p
Fs 10 w(\)) p Fk 64 w(do) p Fm 99 1721 a(9:) p Fk 136
w(if) p Fs 39 w(\() p Fj(chil) r(dr) s(en) p Fs(_) p
Fj 1 w(l) r(ist) p Fo 25 w(6) p Fh(=) p Fj 25 w(N) 10
b(I) d(L) p Fs(\)) p Fk 61 w(then) p Fm 60 1834 a(10:) p
Fs 227 w(send) p Fk 31 w(reconcile) p Fs(\() p Fr(lo) -5
b(c) g(alClo) g(ck) p Fs 10 w(\)) 33 b(to) d(all) h(c) m(hildren) p
Fm 60 1947 a(11:) p Fk 137 w(else) p Fm 60 2060 a(12:) p
Fs 227 w(send) p Fk 31 w(reconcile_ac) m(k) p Fs 30 w(to) g(paren) m(t)
p Fm 60 2173 a(13:) p Fk 46 w(when:) p Fs 30 w(receiv) m(e) p
Fk 32 w(reconcile_ac) m(k) p Fs 30 w(from) p Fr 31 w(j) p
Fk 73 w(do) p Fm 60 2286 a(14:) p Fj 137 w(r) s(econcil) r(ed) p
Fh([) p Fj(j) p Fh 5 w(]) p Fo 27 w( ) p Fj 25 w(T) 13
b(R) q(U) d(E) p Fm 60 2399 a(15:) p Fk 137 w(if) p Fs
39 w(\() p Fr(r) -5 b(e) g(c) g(oncile) g(d) p Fs 9 w([) p
Fr(k) p Fs 10 w(]) 35 b(=) 30 b(TR) m(UE) h(for) f(all) p
Fr 30 w(k) p Fs 41 w(in) p Fr 30 w(childr) -5 b(en_list) p
Fs 9 w(\)) p Fk 61 w(then) p Fm 60 2511 a(16:) p Fk 227
w(if) p Fs 40 w(\() p Fj(par) s(ent) p Fo 24 w(6) p Fh(=) p
Fj 25 w(N) 10 b(I) d(L) p Fs(\)) p Fk 60 w(then) p Fm
60 2624 a(17:) p Fs 318 w(send) p Fk 30 w(reconcile_ac) m(k) p
Fs 31 w(to) p Fr 30 w(p) -5 b(ar) g(ent) p Fm 60 2737
a(18:) p Fk 227 w(else) 31 b(if) p Fs 40 w(\() p Fk(Quorum) p
Fs(\(\)\)) p Fk 59 w(then) p Fm 60 2850 a(19:) p Fs 318
w(send) p Fk 30 w(restart_pulse) p Fs(\(\)) g(noti\034cation) p
50 2917 V 50 3558 3986 7 v Fk 50 3638 a(Algorithm) j(4) p
Fs 30 w(LinkUp) s(date) d(pro) s(cedure) p 50 3675 3986
4 v Fm 99 3778 a(1:) p Fs 45 w(send) p Fk 31 w(state) p
Fs(\() p Fr(lo) -5 b(c) g(alClo) g(ck) p Fs 10 w(\)) 35
b(to) 30 b(all) h(neigh) m(b) s(ours) p Fm 99 3891 a(2:) p
Fk 45 w(when:) p Fs 30 w(receiv) m(e) p Fk 32 w(state) p
Fs(\() p Fr(clo) -5 b(ck) p Fs 10 w(\)) 34 b(from) c(j) p
Fk 60 w(do) p Fm 99 4004 a(3:) p Fj 136 w(cl) r(ock) s(s) p
Fh([) p Fj(j) p Fh 5 w(]) p Fo 27 w( ) p Fj 25 w(cl) r(ock) p
Fm 99 4117 a(4:) p Fs 136 w(execute) p Fk 31 w(Up) s(dateLinks) p
Fs(\(\)) p Fm 99 4230 a(5:) p Fk 45 w(when:) p Fs 30
w(receiv) m(e) p Fk 32 w(data_message) p Fs(\() p Fr(msg) p
Fs(,) p Fr 32 w(p) p Fs 6 w(\)) g(from) p Fr 30 w(j) p
Fk 73 w(do) p Fm 99 4343 a(6:) p Fs 136 w(store) p Fr
30 w(msg) p Fs 39 w(in) p Fj 30 w(\014) p Fi 862 4357
a(p) p Fm 99 4455 a(7:) p Fk 136 w(if) p Fs 39 w(\(receiv) m(ed) i(all)
e(messages) h(for) f(pulse) p Fr 30 w(p) p Fs 6 w(\)) p
Fk 60 w(then) p Fm 99 4568 a(8:) p Fk 226 w(commit) p
Fs 30 w(messages) g(in) p Fj 30 w(\014) p Fi 1294 4582
a(p) p Fm 99 4681 a(9:) p Fj 226 w(l) r(ocal) r(C) 7
b(l) r(ock) p Fo 29 w( ) p Fj 25 w(p) p Fh 20 w(+) 20
b(1) p Fm 60 4794 a(10:) p Fs 227 w(execute) p Fk 31
w(Up) s(dateLinks) p Fs(\(\)) p Fm 60 4907 a(11:) p Fk
46 w(when:) p Fs 30 w(in) m(v) m(ok) m(ed) p Fk 32 w(Up) s(dateLinks) p
Fs(\(\)) p Fk 61 w(do) p Fm 60 5020 a(12:) p Fk 137 w(for) 34
b(all) p Fs 30 w(neigh) m(b) s(ours) p Fr 32 w(k) p Fk
70 w(do) p Fm 60 5133 a(13:) p Fk 227 w(if) p Fs 40 w(\() p
Fr(lo) -5 b(c) g(alClo) g(ck) 35 b(>) d(clo) -5 b(cks) p
Fs 7 w([) p Fr(k) p Fs 10 w(]\)) p Fk 63 w(then) p Fm
60 5246 a(14:) p Fs 318 w(send) 30 b(in) h(order) g(all) f(messages) g
(in) p Fj 31 w(\014) p Fi 1688 5260 a(p) p Fs 1758 5246
a(to) p Fr 31 w(k) p Fs(,) p Fr 30 w(p) p Fs 6 w(=) p
Fr(clo) -5 b(cks) p Fs 7 w([) p Fr(k) p Fs 10 w(]..) p
Fr(lo) g(c) g(alClo) g(ck-1) p Fm 60 5359 a(15:) p Fj
318 w(cl) r(ock) s(s) p Fh([) p Fj(k) p Fh 3 w(]) p Fo
26 w( ) p Fj 25 w(l) r(ocal) r(C) 7 b(l) r(ock) p 50
5419 V Fs 1997 5953 a(10) p 90 rotate dyy eop
%%Page: 11 11
11 10 bop Fk 50 399 a(Lemma) 35 b(4) p Fr 45 w(The) e(algorithm) f(pr)
-5 b(eserves) 35 b(the) e(pulse) g(invariant) f(under) h(a) f(p) -5
b(artitionable) 33 b(network) g(mo) -5 b(del.) p Fk 191
520 a(Pro) s(of:) p Fs 191 633 a(Let's) 34 b(consider) g(t) m(w) m(o) h
(disjoin) m(t) f(comp) s(onen) m(ts) p Fj 35 w(C) p Fc
1837 647 a(1) p Fs 1909 633 a(and) p Fj 34 w(C) p Fc
2153 647 a(2) p Fs 2193 633 a(.) 49 b(Let's) 34 b(assume) g(that) g
(none) g(of) f(these) g(comp) s(onen) m(ts) 50 746 y(exp) s(erienced) 26
b(joins) g(or) f(merges) i(since) e(they) h(w) m(ere) h(disconnected) g
(from) f(the) g(primary) g(\(p) s(ossibly) f(they) h(exp) s(erienced) 50
858 y(sev) m(eral) e(lea) m(v) m(es/partitions\).) 40
b(The) 24 b(reconciliation) i(pro) s(cedure) e(will) g(only) f(up) s
(date) h(the) g(no) s(des) f(to) h(the) g(most) f(curren) m(t) 50
971 y(state,) 38 b(and) f(only) g(messages) f(already) i(committed) g
(b) m(y) f(some) g(no) s(de) f(will) h(b) s(e) g(committed,) j
(therefore) d(preserving) 50 1084 y(the) 31 b(in) m(v) -5
b(arian) m(t.) 42 b(Due) 31 b(to) g(the) g(quorum) g(prop) s(erties) g
(only) f(one) h(comp) s(onen) m(t) h(con) m(tin) m(ues) h(executing) e
(the) g(pulse) g(after) 50 1197 y(the) h(reconciliation) h(is) e
(completed.) 45 b(As) 31 b(guaran) m(teed) i(b) m(y) f(Lemma) g(3,) g
(the) g(in) m(v) -5 b(arian) m(t) 33 b(will) f(b) s(e) f(main) m
(tained) i(in) f(this) 50 1310 y(comp) s(onen) m(t) g(for) e(the) h
(incompleted) p Fr 32 w(maxpulse) p Fs 38 w(pulse) g(as) f(w) m(ell) h
(as) f(for) g(the) h(previous) f(pulses.) p Fg 3967 1423
a(2) p Fk 50 1657 a(Theorem) k(1) p Fr 46 w(The) e(algorithm) h
(satis\034es) f(the) g(Corr) -5 b(e) g(ctness) 34 b(and) e(Liveness) h
(pr) -5 b(op) g(erties) 34 b(sp) -5 b(e) g(ci\034e) g(d) 34
b(in) e(Se) -5 b(ction) 32 b(1.1.) p Fk 191 1778 a(Pro) s(of:) p
Fs -1 w(\(In) m(tuition\)) 191 1891 y(The) e(use) f(of) g(a) p
Fo 30 w(\005) p Fs(S) h(unreliable) h(failure) f(detector) g(guaran) m
(tees) i(that) e(a) f(fault) h(in) f(the) h(net) m(w) m(ork) h(will) f
(b) s(e) f(detected) 50 2004 y(and) 24 b(the) h(recon\034guration) i
(pro) s(cedure) e(triggered.) 40 b(Liv) m(eness) 24 b(is) g(then) h
(guaran) m(teed) h(as) e(none) h(of) f(the) h(comp) s(onen) m(ts) g(of)
50 2117 y(the) f(algorithm) h(can) e(blo) s(c) m(k) h(inde\034nitely) -8
b(,) 27 b(as) c(long) h(as) f(the) h(net) m(w) m(ork) h(is) e(stable) h
(for) f(a) g(su\036cien) m(t) i(p) s(erio) s(d) e(of) g(time.) 39
b(The) 50 2230 y(global) 30 b(total) g(order) f(is) g(guaran) m(teed) i
(b) m(y) f(the) f(t) m(w) m(o-la) m(y) m(ered) k(ordering) d(that) g
(the) f(algorithm) i(pro) m(vides:) 41 b(within) 30 b(eac) m(h) 50
2343 y(pulse) 25 b(messages) h(are) g(strictly) f(ordered) i
(preserving) f(FIF) m(O) f(prop) s(erties.) 40 b(The) 26
b(pulses) f(form) g(a) h(uniquely) g(increasing) 50 2456
y(sequence.) 64 b(When) 39 b(a) f(pulse) h(is) e(rep) s(eated,) 42
b(only) c(messages) g(that) h(w) m(ere) g(originally) g(part) g(of) f
(that) h(pulse) f(will) h(b) s(e) 50 2569 y(retransmitted) 34
b(and) e(their) h(order) g(will) f(remain) h(unaltered.) 47
b(Finally) -8 b(,) 34 b(the) e(quorum) h(mec) m(hanism) h(guaran) m
(tees) f(the) 50 2682 y(uniqueness) e(of) g(the) g(pulse) g(n) m(um) m
(b) s(er) i(sequence) e(whic) m(h) h(therefore) g(translates) g(in) f
(the) g(unique,) h(global) g(ordering) g(of) 50 2795
y(actions) p Fg 3967 2907 a(2) p Fs 191 3020 a(It) 43
b(is) h(imp) s(ortan) m(t) h(to) f(remark) h(that) f(the) g(ro) s(ot) g
(of) g(the) g(tree,) k(although) d(pla) m(ys) f(a) g(sp) s(ecial) g
(role) g(during) h(the) 50 3133 y(normal) 38 b(execution) g(of) f(the) h
(algorithm,) i(do) s(es) d(not) h(in) m(tro) s(duce) g(a) g(single) f
(p) s(oin) m(t) h(of) f(failure) h(in) m(to) g(the) f(system.) 61
b(A) 50 3246 y(crash/disconnection) 36 b(of) e(the) g(ro) s(ot) g(no) s
(de) g(is,) g(from) g(a) g(fault-tolerance) i(p) s(ersp) s(ectiv) m(e,)
f(indistinguishable) h(from) e(a) 50 3359 y(crash) 39
b(of) g(a) h(regular) g(no) s(de) g(of) f(the) g(primary) h(comp) s
(onen) m(t,) k(the) 39 b(algorithm) i(b) s(eing) f(able) g(to) f(con) m
(tin) m(ue) j(correctly) 50 3472 y(\(after) 30 b(recon\034guring\),) j
(as) d(long) h(as) f(a) g(quorum) h(remains) g(connected.) p
Ft 50 3758 a(4) 131 b(Discussion) p Fs 50 3961 a(In) 31
b(section) i(2.2) f(w) m(e) g(c) m(hose) h(to) f(only) f(allo) m(w) i
(the) g(ro) s(ot) e(of) h(the) g(spanning) h(tree) f(to) g(send) g
(messages) f(and) i(only) e(at) h(the) 50 4074 y(b) s(eginning) f(of) f
(a) g(pulse) g(\(piggy-bac) m(k) m(ed) i(on) f(the) f(pulse) g
(message\).) 41 b(This) 30 b(is) g(not) h(a) f(restriction) h(in) f
(the) h(mo) s(del,) f(but) 50 4187 y(merely) h(a) f(simpli\034cation) i
(to) e(allo) m(w) i(a) e(clearer) i(presen) m(tation) g(of) e(the) h
(algorithm.) 191 4300 y(Let's) g(consider) f(the) h(mo) s(del) g(where)
g(still) f(only) g(the) g(ro) s(ot) h(is) e(allo) m(w) m(ed) k(to) d
(send) g(data) h(messages,) f(but) h(messages) 50 4413
y(can) 40 b(b) s(e) g(sen) m(t) h(at) f(an) m(y) g(time) h(through) g
(the) g(course) f(of) g(a) g(pulse.) 70 b(In) 40 b(this) g(situation,) j
(when) e(a) f(no) s(de) p Fr 40 w(j) p Fs 53 w(receiv) m(es) p
Fk 50 4526 a(pulse) p Fs(\() p Fr(p+1) p Fs 12 w(\),) g(it) e(do) s
(esn't) g(ha) m(v) m(e) h(the) f(guaran) m(tee) h(that) g(all) f(the) g
(other) g(no) s(des) g(ha) m(v) m(e) h(receiv) m(ed) g(all) f(the) g
(messages) 50 4639 y(generated) 28 b(during) g(pulse) p
Fr 27 w(p) p Fs 33 w(and) f(cannot) h(y) m(et) f(commit) h(on) p
2106 4566 92 4 v Fj 28 w(\014) p Fi 2157 4653 a(p) p
Fs 2223 4639 a(\(although) h(j) d(has) h(all) g(these) g(messages\).) 40
b(If) p Fr 26 w(j) p Fs 39 w(w) m(ould) 50 4752 y(commit) 34
b(these) g(messages) f(it) g(is) g(p) s(ossible) g(that) h(all) f(the) h
(no) s(des) f(that) h(committed) h(on) e(this) g(set) h(are) f
(disconnected) 50 4865 y(from) 40 b(the) f(no) s(des) h(that) g(didn't)
g(y) m(et) g(receiv) m(e) h(the) f(complete) h(set.) 68
b(This) 40 b(second) g(set) f(of) g(no) s(des) h(can) g(go) f(on) h
(and) 50 4977 y(form) 33 b(the) g(next) h(primary) -8
b(.) 50 b(The) 33 b(in) m(v) -5 b(arian) m(t) 35 b(is) e(then) h
(violated) f(as) g(the) h(new) f(primary) h(commits) g(on) f(a) g
(smaller) h(set) 50 5090 y(and) j(incorrectly) i(adv) -5
b(ances) 37 b(to) h(the) f(next) g(pulse.) 62 b(Therefore) 38
b(the) f(algorithm) i(has) e(to) g(b) s(e) g(c) m(hanged) i(to) f
(commit) p 50 5130 182 4 v Fj 50 5203 a(\014) p Fi 101
5217 a(p) p Fd(\000) p Fc(1) p Fs 260 5203 a(only) 30
b(when) g(it) f(receiv) m(es) p Fk 30 w(pulse) p Fs(\() p
Fr(p+1) p Fs 12 w(\).) 41 b(The) 30 b(reconciliation) h(pro) s(cedure) g
(will) f(also) f(need) h(to) f(b) s(e) g(c) m(hanged) j(to) 50
5316 y(retransmit) k(messages) f(from) g(pulse) p Fr
36 w(maxpulse-1) p Fs 48 w(to) h(all) f(mem) m(b) s(ers) h(of) f(the) g
(comp) s(onen) m(t,) j(b) s(efore) d(restarting) h(the) 50
5429 y(pulse) p Fr 30 w(maxpulse) p Fs 37 w(as) 30 b(there) g(ma) m(y) g
(b) s(e) g(participan) m(ts) i(that) e(do) g(not) g(ha) m(v) m(e) h
(all) f(these) g(messages;) g(ho) m(w) m(ev) m(er,) i(the) e(no) s(des)
50 5542 y(with) p Fr 31 w(lo) -5 b(c) g(alClo) g(ck=maxpulse) p
Fs 41 w(are) 30 b(guaran) m(teed) j(to) d(ha) m(v) m(e) p
2036 5469 359 4 v Fj 32 w(\014) p Fi 2087 5557 a(maxpul) q(se) p
Fs 2425 5542 a(and) h(can) f(therefore) i(up) s(date) e(the) h(others.)
1997 5953 y(11) p 90 rotate dyy eop
%%Page: 12 12
12 11 bop Fs 191 399 a(It) 21 b(is) h(quite) g(straigh) m(tforw) m(ard)
i(no) m(w) f(to) f(see) g(that) g(an) m(y) g(no) s(de) g(can) g
(actually) h(generate) g(messages) f(and) g(disseminate) 50
511 y(them) 34 b(through) h(the) e(tree.) 51 b(Let) p
Fr 34 w(m) p Fs 40 w(b) s(e) 33 b(a) h(message) f(generated) i(b) m(y) f
(no) s(de) p Fr 34 w(i) p Fs 42 w(during) g(pulse) p
Fr 34 w(p) p Fs 6 w(;) p Fr 35 w(m) p Fs 40 w(is) f(disseminated) 50
624 y(through) h(the) f(tree) g(and) h(eac) m(h) g(no) s(de) f(will) g
(store) g(it) g(in) p Fj 33 w(\014) p Fi 1990 638 a(p) p
Fs 2062 624 a(as) g(it) g(receiv) m(es) g(it) p Fq 2663
591 a(9) p Fs 2703 624 a(.) 48 b(Since) p Fr 34 w(m) p
Fs 39 w(is) 32 b(generated) j(b) s(efore) d(the) p Fk
50 737 a(pulse_ac) m(k) p Fs(\() p Fr(p) p Fs 6 w(+1\)) h(message) g
(it) h(will) f(reac) m(h) h(the) g(ro) s(ot) f(of) f(the) i(tree) f(b) s
(efore) g(the) h(b) s(eginning) g(of) e(pulse) i(p+) p
Fr(2) p Fs(.) 49 b(An) m(y) 50 850 y(no) s(de) p Fr 28
w(j) p Fs 41 w(in) 28 b(the) g(comp) s(onen) m(t) i(is) d(guaran) m
(teed) k(to) d(receiv) m(e) p Fr 29 w(m) p Fs 34 w(b) s(efore) g(it) g
(receiv) m(es) p Fk 29 w(pulse) p Fs(\() p Fr(p+2) p
Fs 12 w(\)) g(and) h(will) f(b) s(e) g(able) h(to) 50
963 y(commit) i(on) g(it) f(up) s(on) h(reception) g(of) p
Fk 37 w(pulse) p Fs(\() p Fr(p+3) p Fs 12 w(\).) 191
1076 y(Another) 26 b(asp) s(ect) g(that) g(w) m(as) g(not) g(discussed)
g(explicitly) g(in) g(the) g(algorithm) h(is) f(the) g(need) g(for) g
(logging) g(to) g(p) s(erma-) 50 1189 y(nen) m(t) h(storage) f(in) g
(order) h(to) f(protect) h(the) g(algorithm) g(from) f(no) s(de) g
(crashes.) 39 b(Eac) m(h) 28 b(action) f(that) f(is) g(injected) g(in) m
(to) h(the) 50 1302 y(system) f(needs) h(to) g(b) s(e) f(written) h(to)
g(disk) f(b) m(y) h(at) g(least) g(one) g(no) s(de,) g(the) g(one) g
(creating) h(the) f(action.) 40 b(This) 27 b(is) f(needed) i(in) 50
1415 y(order) h(to) g(guaran) m(tee) h(that) f(the) g(action) g(is) f
(not) h(completely) h(lost) e(in) h(case) f(of) g(a) h(quorum) g
(crash,) g(when) g(some) g(no) s(des) 50 1528 y(committed) j(the) e
(action) i(while) f(others) f(w) m(ere) i(ab) s(out) f(to.) 191
1641 y(Also) h(eac) m(h) i(no) s(de) e(that) h(b) s(ecomes) g(part) g
(of) f(the) h(primary) g(comp) s(onen) m(t) h(needs) f(to) g(mark) f
(this) h(mem) m(b) s(ership) g(on) 50 1753 y(disk.) 42
b(When) 31 b(a) g(mem) m(b) s(er) h(of) f(the) g(quorum) h(reco) m(v) m
(ers) g(after) f(a) g(crash,) h(it) f(cannot) h(b) s(ecome) f(part) h
(of) f(a) g(new) g(quorum) 50 1866 y(unless) f(it) h(\034nds) g(out) g
(that) g(the) g(quorum) h(he) f(w) m(as) g(part) g(of) f(w) m(as) i
(sup) s(erseded) e(b) m(y) h(subsequen) m(t) h(quorums,) f(or) g
(unless) 50 1979 y(it) 39 b(talks) g(with) h(all) g(the) g(mem) m(b) s
(ers) g(of) f(the) h(quorum) g(he) g(w) m(as) g(a) f(mem) m(b) s(er) i
(of) e(\(this) g(is) h(needed) g(when) g(the) g(whole) 50
2092 y(quorum) f(crashed\),) h(as) e(the) h(no) s(de) f(needs) g(to) h
(guaran) m(tee) h(that) e(he) h(has) f(the) g(complete) h(information) h
(ab) s(out) e(the) 50 2205 y(actions) j(committed) g(in) g(the) f
(pulse) h(that) g(he) f(w) m(as) h(part) g(of) e(b) s(efore) i(it) f
(can) h(restart) f(executing) h(the) g(algorithm.) 50
2318 y(These) 30 b(requiremen) m(ts) i(are) f(iden) m(tical) h(to) f
(the) f(ones) h(needed) g(b) m(y) g([A) -8 b(T02) q(]) 30
b(and) h(are) f(further) h(detailed) h(there.) 191 2431
y(The) f(algorithm) i(app) s(ears) e(to) g(su\033er) g(in) g
(comparison) i(to) e(other) h(solutions) f(as) g(it) g(commits) h
(\020together\021) 40 b(all) 31 b(the) 50 2544 y(actions) 25
b(that) h(w) m(ere) g(generated) h(during) f(a) f(giv) m(en) h(pulse.)
39 b(Group) 25 b(comm) m(unication) k(based) c(solutions) g(do,) i(in) e
(realit) m(y) -8 b(,) 50 2657 y(the) 26 b(same) h(thing:) 39
b(they) 26 b(commit) h(an) f(action) h(when) g(the) f(total) h(order) g
(primitiv) m(e) h(has) d(established) i(the) g(order) g(of) e(the) 50
2770 y(action.) 45 b(An) 32 b(e\036cien) m(t) h(group) g(comm) m
(unication) h(implemen) m(tation) h(will) d(actually) h(use) e(a) h
(metho) s(d) g(\(ring) h(proto) s(col,) 50 2883 y(tree\)) g(that) f
(also) g(aggregates) h(the) g(ordering) g(of) f(all) g(the) g(messages)
g(that) h(o) s(ccur) f(during) h(a) f(roundtrip) i(time) e(whic) m(h) 50
2995 y(is) 38 b(what) h(w) m(e) g(do) g(as) f(w) m(ell.) 67
b(T) -8 b(w) m(o-phase) 40 b(commit) g(do) s(es) e(commit) i(eac) m(h) f
(action) h(individually) -8 b(,) 42 b(but) d(it) f(tak) m(es) h(just) 50
3108 y(as) 34 b(m) m(uc) m(h) h(time) g(as) f(our) g(algorithm) h
(needs) g(to) f(aggregate) h(and) g(commit) g(sev) m(eral) f(actions.)
53 b(One) 34 b(other) h(apparen) m(t) 50 3221 y(dra) m(wbac) m(k) c(of)
d(the) h(algorithm) i(is) d(the) h(fact) g(that) h(an) m(y) f(top) s
(ology) g(c) m(hange) h(that) g(a\033ects) e(the) i(constructed) g
(spanning) 50 3334 y(tree) k(will) h(cause) f(the) g(execution) h(of) f
(a) g(reconciliation) i(phase) e(and) g(the) h(rebuilding) g(of) f(a) g
(tree.) 52 b(This) 34 b(is) f(a) h(design) 50 3447 y(c) m(hoice,) 27
b(based) d(on) g(the) g(assumption) h(that) f(failures) g(are) h(rare) f
(enough) h(that) g(signi\034can) m(t) g(amoun) m(t) h(of) d(actions) i
(can) f(b) s(e) 50 3560 y(committed.) 40 b(F) -8 b(urthermore,) 29
b(this) d(situation) g(can) g(b) s(e) f(impro) m(v) m(ed) j(b) m(y) d
(appropriately) j(selecting) e(the) g(quorum) g(no) s(des) 50
3673 y(\(their) 33 b(n) m(um) m(b) s(er) h(and) e(their) h(lo) s
(cation\)) g(either) g(based) g(on) f(stabilit) m(y) h(measures) g(or) f
(on) h(randomized,) h(probabilistic) 50 3786 y(principles.) 191
3899 y(This) 26 b(analysis) h(sho) m(ws) f(the) h(generalit) m(y) h(of)
e(our) h(algorithm) h(despite) f(its) f(apparen) m(t) i(simplicit) m(y)
-8 b(.) 41 b(The) 27 b(simplicit) m(y) -8 b(,) 50 4012
y(ho) m(w) m(ev) m(er,) 39 b(is) c(a) h(great) g(b) s(on) m(us) g(as) g
(it) g(allo) m(ws) g(the) g(design) g(of) g(a) f(clean,) j(pro) m(v) -5
b(ably) 37 b(correct) f(implemen) m(tation.) 60 b(F) -8
b(ur-) 50 4125 y(thermore,) 33 b(although) g(the) f(v) m(ersion) g(of) f
(the) h(algorithm) h(presen) m(ted) g(in) e(this) h(pap) s(er) f(do) s
(es) g(not) h(ha) m(v) m(e) h(this) e(prop) s(ert) m(y) -8
b(,) 50 4237 y(w) m(e) 31 b(b) s(eliev) m(e) g(that) g(a) f
(self-stabilizing) h(v) m(ersion) g(of) f(the) h(algorithm) h(can) e(b)
s(e) g(designed.) p Ft 50 4524 a(5) 131 b(Complexit) l(y) 45
b(Analysis) p Fs 50 4727 a(W) -8 b(e) 43 b(no) m(w) h(compare) g(the) f
(analytical) h(complexit) m(y) g(of) f(our) g(algorithm) i(with) e
(some) g(of) g(the) g(existing) g(solutions.) 50 4840
y(Since) c(our) g(algorithm) h(is) e(fully) g(sp) s(eci\034ed) h
(starting) g(from) f(the) h(net) m(w) m(ork) h(lev) m(el,) i(our) c
(analysis) h(includes) p Fr 39 w(al) 5 b(l) p Fs 47 w(the) 50
4953 y(comm) m(unication) 23 b(that) e(the) g(algorithm) h(en) m
(tails.) 38 b(Because) 21 b(of) f(this,) i(w) m(e) g(attempt) f(to) g
(analyze) g(the) g(existing) f(solutions) 50 5065 y(at) 44
b(the) g(same) h(lev) m(el,) j(rather) d(than) f(using) h(standard) f
(analysis) g(metho) s(ds) g(that) h(hide) g(the) f(o) m(v) m(erall) h
(complexit) m(y) 50 5178 y(in) 39 b(the) g(use) g(of) f(v) -5
b(arious) 39 b(abstractions) h(-) f(suc) m(h) g(as) g(totally) g
(ordered) h(m) m(ulticast) g(messages) f(emplo) m(y) m(ed) i(b) m(y) e
(group) 50 5291 y(comm) m(unication) 34 b(solutions.) 43
b(W) -8 b(e) 31 b(consider) h(that) g(an) f(all-inclusiv) m(e) i
(analysis) e(is) f(v) -5 b(aluable) 32 b(in) f(the) h(understanding) p
50 5353 1594 4 v Fn 153 5407 a(9) p Fm 188 5438 a(In) e(the) g
(previous) h(sections) h(w) n(e) f(referred) g(to) p
Ff 31 w(\014) p Fe 1578 5446 a(p) p Fm 1645 5438 a(as) g(storing) h
(the) e(messages) i(receiv) n(ed) e(in) h(pulse) g(p,) h(rather) e
(than) h(those) g(created) 50 5530 y(in) c(pulse) g(p.) 39
b(In) 27 b(the) g(curren) n(t) f(setup) h(there) g(is) h(a) g
(di\033erence) f(b) r(et) n(w) n(een) g(the) g(t) n(w) n(o) g(and) g
(the) g(correctness) i(follo) n(ws) g(more) e(naturally) g(if) h(w) n
(e) 50 5621 y(consider) e(the) f(bu\033ers) g(storing) i(messages) f
(based) g(on) g(their) f(creation) i(pulse.) p Fs 1997
5953 a(12) p 90 rotate dyy eop
%%Page: 13 13
13 12 bop 420 410 3244 4 v 418 510 4 100 v Fu 470 480
a(Algorithm\\Measure) p 1234 510 V 98 w(Space) p 1541
510 V 102 w(#Mesgs) p 1936 510 V 102 w(disk) 27 b(writes) p
2426 510 V 104 w(time) p 2697 510 V 104 w(space) p 2990
510 V 108 w(#mesgs) p 3391 510 V 114 w(time) p 3663 510
V 420 513 3244 4 v 420 530 V 418 629 4 100 v 621 599
a(2PC[GR93]) p 1234 629 V 269 w(O\(1\)) p 1541 629 V
245 w(3) p 1936 629 V 345 w(n+1) p 2426 629 V 282 w(2) p
2697 629 V 240 w(0) p 2990 629 V 306 w(0) p 3391 629
V 294 w(0) p 3663 629 V 420 633 3244 4 v 418 732 4 100
v 562 702 a(P) n(axos) f([Lam98) o(]) p 1234 732 V 209
w(O\(1\)) p 1541 732 V 245 w(4) p 1936 732 V 324 w(2n+1) p
2426 732 V 261 w(3) p 2697 732 V 240 w(0) p 2990 732
V 306 w(0) p 3391 732 V 294 w(0) p 3663 732 V 420 736
3244 4 v 418 835 4 100 v 562 805 a([Ami95) o(,) i(A) -7
b(T02) o(]) p 1234 835 V 275 w(0) p 1541 835 V Fb 182
w(1) 18 b(+) g(2) p Fa(=) p Fb(\001) p 1936 835 V Fu
229 w(1/n) p 2426 835 V 230 w(O\(1\)) p 2697 835 V Fb
109 w(\012\() p Fa(n) p Fb(\)) p 2990 835 V 173 w(\012\() p
Fa(n) p Fb(\)) p 3391 835 V Fa 164 w(O) p Fb 2 w(\(1\)) p
3663 835 V 420 839 3244 4 v 418 938 4 100 v Fu 631 908
a(This) 27 b(pap) r(er) p 1234 938 V 343 w(0) p 1541
938 V Fb 182 w(1) 18 b(+) g(2) p Fa(=) p Fb(\001) p 1936
938 V Fu 229 w(1/n) p 2426 938 V 294 w(2) p 2697 938
V Fa 175 w(O) p Fb 2 w(\(1\)) p 2990 938 V Fa 112 w(O) p
Fb 2 w(\(log) p Fa 15 w(n) p Fb(\)) p 3391 938 V Fa 100
w(O) p Fb 2 w(\(1\)) p 3663 938 V 420 941 3244 4 v 418
1041 4 100 v Fu 655 1011 a(Ov) n(erhead) p 1234 1041
V 688 w(p) r(er) 28 b(transaction) p 2697 1041 V 529
w(p) r(er) g(top) r(ological) e(c) n(hange) p 3663 1041
V 420 1044 3244 4 v Fs 1384 1198 a(T) -8 b(able) 32 b(5:) 40
b(Complexit) m(y) 32 b(Comparison) 50 1473 y(of) e(the) g(v) -5
b(arious) 31 b(trade-o\033s) g(b) s(et) m(w) m(een) h(metho) s(ds.) 191
1586 y(W) -8 b(e) 31 b(in) m(tro) s(duce) g(a) g(set) f(of) g
(complexit) m(y) h(measures) g(and) g(argue) g(their) g(relev) -5
b(ance) 31 b(for) f(distributed) i(algorithms.) p Fo
186 1799 a(\017) p Fs 46 w(Space) p Fr 36 w(p) -5 b(er) 39
b(no) -5 b(de) p Fs 42 w(of) 36 b(the) g(o) m(v) m(erla) m(y) h(net) m
(w) m(ork.) 58 b(W) -8 b(e) 35 b(consider) i(the) f(size) f(of) g(the) h
(data) g(structures) h(that) f(eac) m(h) 277 1912 y(no) s(de) 31
b(needs) f(to) h(store.) p Fo 186 2099 a(\017) p Fs 46
w(Comm) m(unication) p Fr 39 w(p) -5 b(er) 39 b(e) -5
b(dge) p Fs 45 w(of) 36 b(the) g(o) m(v) m(erla) m(y) i(net) m(w) m
(ork.) 60 b(W) -8 b(e) 36 b(consider) h(this) g(measure) g(more) f
(relev) -5 b(an) m(t) 38 b(for) 277 2212 y(p) s(eer) 24
b(to) g(p) s(eer) g(systems) e(than) j(the) f(more) g(frequen) m(tly) g
(used) g(\020total) h(n) m(um) m(b) s(er) g(of) e(messages\021) 32
b(measure,) 26 b(b) s(ecause) 277 2325 y(it) 31 b(captures) g(the) f
(congestion) i(that) f(the) f(algorithm) i(induces) f(on) g(eac) m(h) g
(link.) p Fo 186 2513 a(\017) p Fs 46 w(Time) 41 b(elapsed) f(from) g
(input) h(to) f(output) h(\(latency\),) p Fr 44 w(normalize) -5
b(d) p Fs 49 w(o) m(v) m(er) 41 b(net) m(w) m(ork) h(diameter) f(\(n) m
(um) m(b) s(er) h(of) 277 2626 y(roundtrips\).) p Fo
186 2813 a(\017) p Fs 46 w(F) -8 b(orced) 32 b(disk) d(writes) i
(required) g(p) s(er) f(transaction) i(in) f(the) f(system.) 50
3026 y(T) -8 b(able) 35 b(5) g(compares) g(our) g(solution) g(with) f
(the) h(standard) g(2PC) g(and) g(with) g(a) f(solution) h(that) g
(uses) f(group) h(comm) m(u-) 50 3139 y(nication) e(to) e(impro) m(v) m
(e) j(p) s(erformance) e(during) h(normal) g(op) s(eration) f(while) h
(pa) m(ying) f(a) g(higher) g(cost) g(p) s(er) f(top) s(ological) 50
3252 y(c) m(hange.) 53 b(Note) 35 b(again) f(that) h(our) g(analysis) f
(considers) p Fk 34 w(all) p Fs 34 w(the) h(tra\036c) g(that) g(the) f
(proto) s(col) h(generates,) h(including) 50 3365 y(the) g(messages) f
(that) h(the) g(group) g(comm) m(unication) j(la) m(y) m(er) d(uses) f
(in) h(order) g(to) g(pro) m(vide) g(ordering) h(guaran) m(tees) g(and)
50 3478 y(the) 31 b(messages) f(needed) h(to) g(re-establish) g(the) f
(underlying) i(graph) f(when) g(a) f(top) s(ological) i(c) m(hange) g
(o) s(ccurs.) 191 3590 y(W) -8 b(e) 37 b(can) g(distinguish) h(b) s(et)
m(w) m(een) h(complexit) m(y) f(of) e(storing) i(and) f(comm) m
(unicating) j(the) p Fr 37 w(data) p Fs 44 w(and) d(complexit) m(y) 50
3703 y(of) 31 b(the) i(\(proto) s(col-induced\)) h(o) m(v) m(erhead) g
(in) e(messages) g(and) h(data) f(structures.) 46 b(This) 33
b(o) m(v) m(erhead) g(can) g(b) s(e) f(traced) h(to) 50
3816 y(resp) s(onses) d(to) g(top) s(ological) i(c) m(hanges) f(as) f
(w) m(ell) h(as) f(to) h(resp) s(onses) f(to) g(transactions.) 191
3929 y(The) 36 b(curren) m(t) i(solution) e(has) g(smaller) g(o) m(v) m
(erhead) i(p) s(er) d(transaction,) k(but) d(pa) m(ys) g(more) g(p) s
(er) g(top) s(ology) g(c) m(hange.) 50 4042 y(This) c(is) f(ho) m(w) m
(ev) m(er) k(desirable) d(as) g(it) g(is) g(assumed) g(that) h(the) f
(transaction) h(frequency) f(is) g(signi\034can) m(tly) h(higher) g
(than) 50 4155 y(the) f(rate) h(of) e(net) m(w) m(ork) j(c) m(hanges.)
46 b(The) 33 b(n) m(um) m(b) s(er) g(of) f(messages) g(sen) m(t) g(p) s
(er) g(transaction,) i(p) s(er) e(link) g(is) p Fh 31
w(1) 22 b(+) p Fc 3690 4119 a(2) p 3678 4134 59 4 v 3678
4186 a(\001) p Fs 3747 4155 a(,) 32 b(where) p Fh 50
4268 a(\001) p Fs 39 w(is) 38 b(the) i(aggregation) h(co) s(e\036cien) m
(t) f(\(i.e) g(the) f(n) m(um) m(b) s(er) i(of) e(transactions) h(p) s
(er) f(pulse) g(in) h(our) f(algorithm,) k(or) c(the) 50
4381 y(n) m(um) m(b) s(er) 33 b(of) e(transactions) h(p) s(er) g(tok) m
(en) g(cycle) g(in) f(the) h(group) g(comm) m(unication) j(implemen) m
(tation) f(based) e(on) g(a) f(ring) 50 4494 y(proto) s(col\).) 40
b(The) 27 b(2PC/3PC) i(based) e(solutions) g(pa) m(y) g(a) g(larger) h
(comm) m(unication) h(cost) e(b) s(ecause) g(they) g(do) g(not) g
(de\034ne) 50 4607 y(an) k(explicit) g(e\036cien) m(t) i(underlying) f
(comm) m(unication) i(structure.) 42 b(They) 31 b(also) g(pa) m(y) g(a)
g(hea) m(vy) g(price) h(in) f(disk) f(writes,) 50 4720
y(in) g(order) h(to) g(protect) g(from) g(crashes) f(and) h(top) s
(ological) g(c) m(hanges.) 191 4832 y(T) -8 b(o) 42 b(measure) g(the) g
(o) m(v) m(erhead) h(paid) f(for) f(a) h(top) s(ology) g(c) m(hange) g
(w) m(e) h(consider) f(as) f(one) h(top) s(ology) f(c) m(hange) i(an) m
(y) 50 4945 y(n) m(um) m(b) s(er) 26 b(of) e(failures) h(that) g(are) g
(detected) h(\020sim) m(ultaneously\021.) 40 b(The) 25
b(presen) m(t) h(algorithm) g(has) e(constan) m(t) i(o) m(v) m(erhead) h
(in) 50 5058 y(time) 22 b(and) g(space,) i(and) p Fh
22 w(log) p Fj 17 w(n) p Fs 21 w(o) m(v) m(erhead) f(in) f(n) m(um) m
(b) s(er) h(of) f(messages) f(sen) m(t) h(p) s(er) f(link) h(p) s(er) f
(set) h(of) f(top) s(ological) i(c) m(hanges) p Fq 3934
5025 a(10) p Fs 4010 5058 a(.) 50 5171 y(The) e(logarithmic) h(factor) f
(is) f(the) g(price) h(paid) g(to) g(compute) g(a) g(spanning) g(tree) g
([GHS83,) g(A) -8 b(w) m(e87) q(].) 37 b(Previous) 21
b(solutions) 50 5284 y(based) 38 b(on) g(group) h(comm) m(unication) h
(require) f(linear) f(\() p Fh(\012\() p Fj(n) p Fh(\)) p
Fs(,) i(where) p Fr 38 w(n) p Fs 45 w(is) d(the) h(n) m(um) m(b) s(er) i
(of) d(no) s(des\)) h(o) m(v) m(erhead) i(in) 50 5397
y(comm) m(unication) c(and) e(space,) h(b) s(ecause) e(of) g(the) h
(inheren) m(t) i(\020mem) m(b) s(ership) f(learning\021) 42
b(comp) s(onen) m(t,) 36 b(making) e(them) p 50 5458
1594 4 v Fn 123 5512 a(10) p Fm 188 5544 a(Note) 26 b(that) g(this) h
(is) g(a) f(w) n(orst-case) i(analysis.) 38 b(If) 27
b(only) f(one) g(failure) i(o) r(ccurs) f(at) g(a) f(giv) n(en) g
(momen) n(t,) f(the) h(comm) n(unication) f(o) n(v) n(erhead) 50
5635 y(of) h(our) g(algorithm) g(will) h(b) r(e) e(O\(1\)) h(p) r(er) f
(edge) h(p) r(er) g(top) r(ological) i(c) n(hange.) p
Fs 1997 5953 a(13) p 90 rotate dyy eop
%%Page: 14 14
14 13 bop 747 1835 a
 currentpoint currentpoint translate 0.79704 0.79704 scale neg exch
neg exch translate
 747 1835 a @beginspecial 60 @llx
500 @lly 450 @urx 730 @ury 3900 @rwi @clip @setspecial
%%BeginDocument: cairn.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: Microsoft Word - Document1
%%Creator: Pscript.dll Version 5.0
%%CreationDate: 12/7/2002 15:34:19
%%BoundingBox: 60 500 450 730
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (Lexmark Optra S 1625 Laser Printer) (2014)
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 13 13 599 779
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if showpage initgraphics courier setfont lmargin 720 moveto
errorname(VMError)eq{PrtVMMsg}{(ERROR: )prnt errorname prnt nl
(OFFENDING COMMAND: )prnt/command load prnt $error/ostack known{nl nl(STACK:)
prnt nl nl $error/ostack get aload length{==}repeat}if}ifelse systemdict
/showpage get exec(%%[ Error: )print errorname =print(; OffendingCommand: )
print/command load =print( ]%%)= flush}if end end end}dup 0 systemdict put dup
4 $brkpage put bind readonly put/currentpacking where{pop/setpacking where{pop
oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup length dict
begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding{ISOLatin1Encoding}
stopped{StandardEncoding}if def currentdict end/ErrFont-Latin1 exch definefont}
ifelse exch scalefont setfont counttomark 3 div cvi{moveto show}repeat showpage
quit}{cleartomark}ifelse}bind def
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/ADO_mxRot ~ d/TextInitialised? F d reinitialize E}{U
/Pscript_Win_Data 230 dict @ ` put/ADO_mxRot ~ d/TextInitialised? F d
reinitialize}?}b/terminate{!{& self eq{exit}{E}?}loop E}b/suspend/terminate , d
/resume{` Pscript_Win_Data `}b U `/lucas 21690 d/featurebegin{countdictstack
lucas[}b/featurecleanup{stopped{cleartomark @ lucas eq{! exit}if}loop
countdictstack ~ sub @ 0 gt{{E}repeat}{!}?}b E/snap{transform 0.25 sub round
0.25 add ~ 0.25 sub round 0.25 add ~ itransform}b/dsnap{dtransform round ~
round ~ idtransform}b/nonzero_round{@ 0.5 ge{round}{@ -0.5 lt{round}{0 ge{1}
{-1}?}?}?}b/nonzero_dsnap{dtransform nonzero_round ~ nonzero_round ~
idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ - neg 0 - C}b/irp{4 -2 $ + +S fx 4 2
$ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/solid{[]0 sd}b/g
{@ not{U/DefIf_save save put}if U/DefIf_bool 2 ^ put}b/DefIf_El{if U/DefIf_bool
get not @{U/DefIf_save get restore}if}b/e{DefIf_El !}b/UDF{L2?{undefinefont}{!}
?}b/UDR{L2?{undefineresource}{! !}?}b/freeVM{/Courier findfont[40 0 0 -40 0 0]
makefont Ji 2 vmreclaim}b
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 0.11999 0 0 -0.11999 12.99968 779.0003 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 13 13 599 779
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T[1 0 0 1 0 0]{PaintData}imagemask E}b & mx makepattern setpattern E fEOFill{O}
{L}? ;}b
%%EndResource
end reinitialize
N 1194 731 M 1159 765 I 1108 725 I 1108 875 I 1052 1042 I 1056 1099 I 1026 1151 I 1044 1202 I 1040 1249 I 1070 1312 I 1070 1346 I 1079 1376 I 1065 1399 I 1108 1456 I 1108 1513 I 1181 1560 I 1181 1588 I 1220 1612 I 1220 1658 I 1314 1663 I 1473 1749 I 1597 1760 I 1597 1738 I 1661 1744 I 1739 1813 I 1755 1865 I 1824 1899 I 1855 1854 I 1906 1859 I 1997 2026 I 2087 2055 I 2099 2032 I 2081 1981 I 2081 1922 I 2219 1819 I 2275 1830 I 2322 1825 I 2314 1842 I 2352 1842 I 2369 1825 I 2378 1836 I 2407 1813 I 2416 1836 I 2433 1836 I 2442 1819 I 2421 1790 I 2407 1773 I 2447 1760 I 2480 1760 I 2537 1736 I 2584 1755 I 2584 1773 I 2610 1773 I 2644 1744 I 2721 1778 I 2721 1847 I 2738 1854 I 2755 1894 I 2816 1940 I 2816 1958 I 2837 1975 I 2862 1951 I 2876 1951 I 2880 1911 I 2866 1836 I 2828 1790 I 2828 1767 I 2768 1698 I 2760 1641 I 2824 1525 I 2833 1491 I 2862 1473 I 2862 1456 I 2885 1421 I 2910 1421 I 2932 1370 I 2932 1335 I 2897 1289 I 2914 1226 I 2914 1162 I 2926 1099 I 2914 1088 I 2949 1070 I 2974 1054 I 2987 1025 I 3005 995 I 3009 1007 I 3043 1007 I 3043 978 I 3026 949 I 3013 972 I 2992 943 I 2992 898 I 3026 840 I 3047 829 I 3047 811 I 3082 754 I 3043 765 I 3026 754 I 2979 668 I 2958 695 I 2940 691 I 2940 765 I 2914 834 I 2807 875 I 2777 943 I 2781 955 I 2768 978 I 2712 990 I 2695 1025 I 2699 1036 I 2627 1122 I 2605 1134 I 2592 1145 I 2558 1134 I 2580 1058 I 2550 1007 I 2532 1019 I 2520 943 I 2455 938 I 2455 949 I 2421 990 I 2412 1036 I 2416 1054 I 2433 1099 I 2433 1145 I 2407 1169 I 2391 1151 I 2378 1081 I 2391 984 I 2369 978 I 2378 955 I 2412 938 I 2447 920 I 2485 920 I 2447 875 I 2387 910 I 2361 915 I 2344 899 I 2322 903 I 2330 869 I 2257 926 I 2241 926 I 2241 910 I 2207 920 I 2245 875 I 2280 851 I 2202 851 I 2095 829 I 1803 846 I 1499 811 I 1194 731 I C 
/DeviceGray dup setcolorspace /colspABC exch def
0.754 0 scol  O 0 0 scol Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{3{~ !}repeat 3 -1 $ ! findfont 1
^ ~ definefont fM @ @ 5 0 put 4 0 put 90 matrix R matrix concatmatrix makefont
Pscript_Windows_Font 3 1 $ put}b/UmF{L2?{Pscript_Windows_Font ~ undef}{!}?}b
/UmF42{@ findfont/FDepVector get{/FontName get undefinefont}forall
undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Helvetica-Bold
F /F0 0 /256 T /Helvetica-Bold mF 
/F0S39 F0 [57.785 0 0 -57.785 0 0 ] mFS
F0S39 Ji 
1177 1793 M (ISIPC)[16 39 16 39  0]xS 
N 1295 1585 M 1280 1600 I 1366 1687 I 1382 1671 I C 
 L 1 Lj 1 Lc 8 Lw solid N 1412 1680 M 1412 1663 1397 1650 1378 1650 -c 1359 1650 1345 1663 1345 1680 -c 1345 1696 1359 1710 1378 1710 -c 1397 1710 1412 1696 1412 1680 -c C 
: 0.105 0 scol  O ; : 0.602 0.602 +S K 
; N 2655 1324 M 2640 1340 I 2727 1427 I 2742 1411 I C 
 L N 2676 1331 M 2676 1315 2661 1302 2643 1302 -c 2624 1302 2610 1315 2610 1331 -c 2610 1347 2624 1361 2643 1361 -c 2661 1361 2676 1347 2676 1331 -c C 
: 0.297 0 scol  O ; : 0.602 0.602 +S K 
; N 2643 1300 M 2652 1307 I 2970 903 I 2962 896 I C 
 L N 2730 1416 M 2739 1422 I 2855 1249 I 2846 1243 I C 
 L N 1402 1674 M 1404 1684 I 2736 1424 I 2734 1414 I C 
 L N 1234 1302 M 1224 1305 I 1282 1594 I 1292 1591 I C 
 L N 1257 1304 M 1257 1288 1242 1275 1223 1275 -c 1204 1275 1190 1288 1190 1304 -c 1190 1320 1204 1334 1223 1334 -c 1242 1334 1257 1320 1257 1304 -c C 
: 0.535 0 scol  O ; : 0.602 0.602 +S K 
; 1056 1707 M (ISIPC4)[16 39 16 39 41  0]xS 
N 1315 1591 M 1315 1575 1300 1562 1281 1562 -c 1262 1562 1248 1575 1248 1591 -c 1248 1607 1262 1621 1281 1621 -c 1300 1621 1315 1607 1315 1591 -c C 
: 0.344 0 scol  O ; : 0.602 0.602 +S K 
; N 2888 1244 M 2888 1228 2873 1215 2854 1215 -c 2835 1215 2821 1228 2821 1244 -c 2821 1260 2835 1274 2854 1274 -c 2873 1274 2888 1260 2888 1244 -c C 
: 0.891 0 scol  O ; : 0.602 0.602 +S K 
; N 2772 1419 M 2772 1403 2757 1390 2738 1390 -c 2719 1390 2705 1403 2705 1419 -c 2705 1435 2719 1449 2738 1449 -c 2757 1449 2772 1435 2772 1419 -c C 
: 0.297 0 scol  O ; : 0.602 0.602 +S K 
; N 2995 900 M 2995 883 2979 870 2961 870 -c 2942 870 2927 883 2927 900 -c 2927 916 2942 930 2961 930 -c 2979 930 2995 916 2995 900 -c C 
: 0.699 0 scol  O ; : 0.602 0.602 +S K 
; 1140 1244 M (TISWPC)[35 16 39 55 39  0]xS 
2538 1551 M (ISEPC3)[16 39 38 39 41  0]xS 
2410 1360 M (ISEPC)[16 39 38 39  0]xS 
2812 1204 M (UDELPC)[41 42 38 36 39  0]xS 
2740 927 M (MITPC)[48 17 35 39  0]xS 

%%IncludeResource: font Helvetica
F /F1 0 /256 T /Helvetica mF 
/F1S43 F1 [67.414 0 0 -67.414 0 0 ] mFS
F1S43 Ji 
2018 1646 M (38.8 ms)[38 37 19 37 18 58  0]xS 
1930 1727 M (1.86Mbits/sec)[38 18 38 37 56 38 15 19 33 19 34 37  0]xS 
1400 1392 M (1.4 ms)[37 19 37 18 57  0]xS 
1293 1473 M (1.47Mbits/sec)[37 19 37 38 56 37 15 19 34 18 34 38  0]xS 
2555 1126 M (4.9 ms)[38 18 38 18 57  0]xS 
2277 1213 M (9.81Mbits/sec)[38 18 38 37 56 38 15 18 34 19 34 37  0]xS 
2970 1305 M (3.6 ms)[37 19 37 18 57  0]xS 
2863 1386 M (1.42Mbits/sec)[37 19 37 38 56 37 15 19 34 18 34 38  0]xS 
1177 1877 M (100 Mb/s)[37 38 37 19 56 37 19  0]xS 
1223 1958 M (< 1ms)[39 19 37 57  0]xS 
2480 1617 M (100 Mb/s)[38 37 38 18 56 38 19  0]xS 
2535 1698 M (<1ms)[40 36 58  0]xS 
N 2459 1246 M 2452 1246 I 2445 1247 I 2438 1249 I 2431 1252 I 2425 1255 I 2419 1258 I 2408 1267 I 2400 1278 I 2396 1284 I 2393 1290 I 2390 1296 I 2388 1303 I 2388 1311 I 2387 1318 I 2387 1780 I 2388 1787 I 2388 1795 I 2390 1802 I 2393 1808 I 2396 1814 I 2400 1820 I 2408 1831 I 2419 1840 I 2425 1843 I 2431 1847 I 2438 1849 I 2445 1851 I 2452 1852 I 2459 1852 I 2749 1852 I 2756 1852 I 2763 1851 I 2771 1849 I 2777 1847 I 2783 1843 I 2789 1840 I 2800 1831 I 2809 1820 I 2812 1814 I 2816 1808 I 2818 1802 I 2820 1795 I 2821 1787 I 2821 1780 I 2821 1318 I 2821 1311 I 2820 1303 I 2818 1296 I 2816 1290 I 2812 1284 I 2809 1278 I 2800 1267 I 2789 1258 I 2783 1255 I 2777 1252 I 2771 1249 I 2763 1247 I 2756 1246 I 2749 1246 I C 
: 0.602 0.602 +S K 
; 0.156 0 scol 
%%IncludeResource: font Helvetica-Oblique
F /F2 0 /256 T /Helvetica-Oblique mF 
/F2S56 F2 [86.676 0 0 -86.676 0 0 ] mFS
F2S56 Ji 
2468 1815 M (Virginia)[58 19 29 48 19 49 19  0]xS 
2863 1116 M (Delaware)[63 48 20 48 62 48 29  0]xS 
2818 833 M (Boston)[57 49 43 24 49  0]xS 
1122 1174 M (San Jose)[57 49 48 24 43 49 43  0]xS 
0 0 scol N 1118 1535 M 1108 1535 I 1099 1536 I 1091 1539 I 1082 1542 I 1074 1545 I 1067 1550 I 1059 1556 I 1053 1562 I 1047 1568 I 1042 1575 I 1037 1583 I 1033 1591 I 1030 1599 I 1028 1607 I 1027 1616 I 1026 1626 I 1026 2050 I 1027 2059 I 1028 2068 I 1030 2077 I 1033 2085 I 1037 2094 I 1042 2101 I 1047 2108 I 1053 2115 I 1059 2120 I 1067 2126 I 1074 2130 I 1082 2134 I 1091 2137 I 1099 2140 I 1108 2141 I 1118 2141 I 1485 2141 I 1494 2141 I 1503 2140 I 1512 2137 I 1520 2134 I 1529 2130 I 1536 2126 I 1543 2120 I 1550 2115 I 1555 2108 I 1561 2101 I 1565 2094 I 1569 2085 I 1572 2077 I 1575 2068 I 1576 2059 I 1576 2050 I 1576 1626 I 1576 1616 I 1575 1607 I 1572 1599 I 1569 1591 I 1565 1583 I 1561 1575 I 1555 1568 I 1550 1562 I 1543 1556 I 1536 1550 I 1529 1545 I 1520 1542 I 1512 1539 I 1503 1536 I 1494 1535 I 1485 1535 I C 
: 0.602 0.602 +S K 
; 0.156 0 scol 1064 2075 M (Los Angeles)[48 48 44 24 58 48 48 48 20 48  0]xS 
0 0 scol 0 Lj : 642 492 2789 1801 rc N 3423 494 M 644 494 I 644 2285 I 3423 2285 I C 
: 0.602 0.602 +S K 
; ; N 1194 731 M 1159 765 I 1108 725 I 1108 875 I 1052 1042 I 1056 1099 I 1026 1151 I 1044 1202 I 1040 1249 I 1070 1312 I 1070 1346 I 1079 1376 I 1065 1399 I 1108 1456 I 1108 1513 I 1181 1560 I 1181 1588 I 1220 1612 I 1220 1658 I 1314 1663 I 1473 1749 I 1597 1760 I 1597 1738 I 1661 1744 I 1739 1813 I 1755 1865 I 1824 1899 I 1855 1854 I 1906 1859 I 1997 2026 I 2087 2055 I 2099 2032 I 2081 1981 I 2081 1922 I 2219 1819 I 2275 1830 I 2322 1825 I 2314 1842 I 2352 1842 I 2369 1825 I 2378 1836 I 2407 1813 I 2416 1836 I 2433 1836 I 2442 1819 I 2421 1790 I 2407 1773 I 2447 1760 I 2480 1760 I 2537 1736 I 2584 1755 I 2584 1773 I 2610 1773 I 2644 1744 I 2721 1778 I 2721 1847 I 2738 1854 I 2755 1894 I 2816 1940 I 2816 1958 I 2837 1975 I 2862 1951 I 2876 1951 I 2880 1911 I 2866 1836 I 2828 1790 I 2828 1767 I 2768 1698 I 2760 1641 I 2824 1525 I 2833 1491 I 2862 1473 I 2862 1456 I 2885 1421 I 2910 1421 I 2932 1370 I 2932 1335 I 2897 1289 I 2914 1226 I 2914 1162 I 2926 1099 I 2914 1088 I 2949 1070 I 2974 1054 I 2987 1025 I 3005 995 I 3009 1007 I 3043 1007 I 3043 978 I 3026 949 I 3013 972 I 2992 943 I 2992 898 I 3026 840 I 3047 829 I 3047 811 I 3082 754 I 3043 765 I 3026 754 I 2979 668 I 2958 695 I 2940 691 I 2940 765 I 2914 834 I 2807 875 I 2777 943 I 2781 955 I 2768 978 I 2712 990 I 2695 1025 I 2699 1036 I 2627 1122 I 2605 1134 I 2592 1145 I 2558 1134 I 2580 1058 I 2550 1007 I 2532 1019 I 2520 943 I 2455 938 I 2455 949 I 2421 990 I 2412 1036 I 2416 1054 I 2433 1099 I 2433 1145 I 2407 1169 I 2391 1151 I 2378 1081 I 2391 984 I 2369 978 I 2378 955 I 2412 938 I 2447 920 I 2485 920 I 2447 875 I 2387 910 I 2361 915 I 2344 899 I 2322 903 I 2330 869 I 2257 926 I 2241 926 I 2241 910 I 2207 920 I 2245 875 I 2280 851 I 2202 851 I 2095 829 I 1803 846 I 1499 811 I 1194 731 I C 
0.754 0 scol  O 0 0 scol F0S39 Ji 
1177 1793 M (ISIPC)[16 39 16 39  0]xS 
N 1295 1585 M 1280 1600 I 1366 1687 I 1382 1671 I C 
 L 1 Lj N 1412 1680 M 1412 1663 1397 1650 1378 1650 -c 1359 1650 1345 1663 1345 1680 -c 1345 1696 1359 1710 1378 1710 -c 1397 1710 1412 1696 1412 1680 -c C 
: 0.105 0 scol  O ; : 0.602 0.602 +S K 
; N 2655 1324 M 2640 1340 I 2727 1427 I 2742 1411 I C 
 L N 2676 1331 M 2676 1315 2661 1302 2643 1302 -c 2624 1302 2610 1315 2610 1331 -c 2610 1347 2624 1361 2643 1361 -c 2661 1361 2676 1347 2676 1331 -c C 
: 0.297 0 scol  O ; : 0.602 0.602 +S K 
; N 2643 1300 M 2652 1307 I 2970 903 I 2962 896 I C 
 L N 2730 1416 M 2739 1422 I 2855 1249 I 2846 1243 I C 
 L N 1402 1674 M 1404 1684 I 2736 1424 I 2734 1414 I C 
 L N 1234 1302 M 1224 1305 I 1282 1594 I 1292 1591 I C 
 L N 1257 1304 M 1257 1288 1242 1275 1223 1275 -c 1204 1275 1190 1288 1190 1304 -c 1190 1320 1204 1334 1223 1334 -c 1242 1334 1257 1320 1257 1304 -c C 
: 0.535 0 scol  O ; : 0.602 0.602 +S K 
; 1056 1707 M (ISIPC4)[16 39 16 39 41  0]xS 
N 1315 1591 M 1315 1575 1300 1562 1281 1562 -c 1262 1562 1248 1575 1248 1591 -c 1248 1607 1262 1621 1281 1621 -c 1300 1621 1315 1607 1315 1591 -c C 
: 0.344 0 scol  O ; : 0.602 0.602 +S K 
; N 2888 1244 M 2888 1228 2873 1215 2854 1215 -c 2835 1215 2821 1228 2821 1244 -c 2821 1260 2835 1274 2854 1274 -c 2873 1274 2888 1260 2888 1244 -c C 
: 0.891 0 scol  O ; : 0.602 0.602 +S K 
; N 2772 1419 M 2772 1403 2757 1390 2738 1390 -c 2719 1390 2705 1403 2705 1419 -c 2705 1435 2719 1449 2738 1449 -c 2757 1449 2772 1435 2772 1419 -c C 
: 0.297 0 scol  O ; : 0.602 0.602 +S K 
; N 2995 900 M 2995 883 2979 870 2961 870 -c 2942 870 2927 883 2927 900 -c 2927 916 2942 930 2961 930 -c 2979 930 2995 916 2995 900 -c C 
: 0.699 0 scol  O ; : 0.602 0.602 +S K 
; 1140 1244 M (TISWPC)[35 16 39 55 39  0]xS 
2538 1551 M (ISEPC3)[16 39 38 39 41  0]xS 
2410 1360 M (ISEPC)[16 39 38 39  0]xS 
2812 1204 M (UDELPC)[41 42 38 36 39  0]xS 
2740 927 M (MITPC)[48 17 35 39  0]xS 
F1S43 Ji 
2018 1646 M (38.8 ms)[38 37 19 37 18 58  0]xS 
1930 1727 M (1.86Mbits/sec)[38 18 38 37 56 38 15 19 33 19 34 37  0]xS 
1400 1392 M (1.4 ms)[37 19 37 18 57  0]xS 
1293 1473 M (1.47Mbits/sec)[37 19 37 38 56 37 15 19 34 18 34 38  0]xS 
2555 1126 M (4.9 ms)[38 18 38 18 57  0]xS 
2277 1213 M (9.81Mbits/sec)[38 18 38 37 56 38 15 18 34 19 34 37  0]xS 
2970 1305 M (3.6 ms)[37 19 37 18 57  0]xS 
2863 1386 M (1.42Mbits/sec)[37 19 37 38 56 37 15 19 34 18 34 38  0]xS 
1177 1877 M (100 Mb/s)[37 38 37 19 56 37 19  0]xS 
1223 1958 M (< 1ms)[39 19 37 57  0]xS 
2480 1617 M (100 Mb/s)[38 37 38 18 56 38 19  0]xS 
2535 1698 M (<1ms)[40 36 58  0]xS 
N 2459 1246 M 2452 1246 I 2445 1247 I 2438 1249 I 2431 1252 I 2425 1255 I 2419 1258 I 2408 1267 I 2400 1278 I 2396 1284 I 2393 1290 I 2390 1296 I 2388 1303 I 2388 1311 I 2387 1318 I 2387 1780 I 2388 1787 I 2388 1795 I 2390 1802 I 2393 1808 I 2396 1814 I 2400 1820 I 2408 1831 I 2419 1840 I 2425 1843 I 2431 1847 I 2438 1849 I 2445 1851 I 2452 1852 I 2459 1852 I 2749 1852 I 2756 1852 I 2763 1851 I 2771 1849 I 2777 1847 I 2783 1843 I 2789 1840 I 2800 1831 I 2809 1820 I 2812 1814 I 2816 1808 I 2818 1802 I 2820 1795 I 2821 1787 I 2821 1780 I 2821 1318 I 2821 1311 I 2820 1303 I 2818 1296 I 2816 1290 I 2812 1284 I 2809 1278 I 2800 1267 I 2789 1258 I 2783 1255 I 2777 1252 I 2771 1249 I 2763 1247 I 2756 1246 I 2749 1246 I C 
: 0.602 0.602 +S K 
; 0.156 0 scol F2S56 Ji 
2468 1815 M (Virginia)[58 19 29 48 19 49 19  0]xS 
2863 1116 M (Delaware)[63 48 20 48 62 48 29  0]xS 
2818 833 M (Boston)[57 49 43 24 49  0]xS 
1122 1174 M (San Jose)[57 49 48 24 43 49 43  0]xS 
0 0 scol N 1118 1535 M 1108 1535 I 1099 1536 I 1091 1539 I 1082 1542 I 1074 1545 I 1067 1550 I 1059 1556 I 1053 1562 I 1047 1568 I 1042 1575 I 1037 1583 I 1033 1591 I 1030 1599 I 1028 1607 I 1027 1616 I 1026 1626 I 1026 2050 I 1027 2059 I 1028 2068 I 1030 2077 I 1033 2085 I 1037 2094 I 1042 2101 I 1047 2108 I 1053 2115 I 1059 2120 I 1067 2126 I 1074 2130 I 1082 2134 I 1091 2137 I 1099 2140 I 1108 2141 I 1118 2141 I 1485 2141 I 1494 2141 I 1503 2140 I 1512 2137 I 1520 2134 I 1529 2130 I 1536 2126 I 1543 2120 I 1550 2115 I 1555 2108 I 1561 2101 I 1565 2094 I 1569 2085 I 1572 2077 I 1575 2068 I 1576 2059 I 1576 2050 I 1576 1626 I 1576 1616 I 1575 1607 I 1572 1599 I 1569 1591 I 1565 1583 I 1561 1575 I 1555 1568 I 1550 1562 I 1543 1556 I 1536 1550 I 1529 1545 I 1520 1542 I 1512 1539 I 1503 1536 I 1494 1535 I 1485 1535 I C 
: 0.602 0.602 +S K 
; 0.156 0 scol 1064 2075 M (Los Angeles)[48 48 44 24 58 48 48 48 20 48  0]xS 
0 0 scol 0 Lj : 642 492 2789 1801 rc N 3423 494 M 644 494 I 644 2285 I 3423 2285 I C 
: 0.602 0.602 +S K 
; ; 
%%IncludeResource: font Times-Roman
F /F3 0 /256 T /Times-Roman mF 
/F3S64 F3 [100 0 0 -100 0 0 ] mFS
F3S64 Ji 
3431 2293 M ( )S 
LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%+ font Helvetica-Bold
%%+ font Helvetica
%%+ font Helvetica-Oblique
%%+ font Times-Roman
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF

%%EndDocument
@endspecial 747 1835 a
 currentpoint currentpoint translate 1 0.79704 div 1 0.79704 div scale
neg exch neg exch translate
 747 1835 a Fs 1322 2031 a(Figure) 31
b(2:) 41 b(Wide) 30 b(Area) h(Net) m(w) m(ork) g(Setup) 50
2306 y(unscalable.) 40 b(Mem) m(b) s(ership) 29 b(learning) g(means) e
(that) h(all) g(the) g(no) s(des) f(m) m(ust) h(kno) m(w) h(the) e
(iden) m(ti\034er) j(of) d(all) h(other) g(no) s(des) 50
2419 y(in) c(the) g(same) h(connected) g(comp) s(onen) m(t,) i(whic) m
(h) f(requires) e(comm) m(unicating) j(linear) e(\() p
Fh(\012\() p Fj(n) p Fh(\)) p Fs(\)) f(amoun) m(t) i(of) d(information)
50 2532 y(o) m(v) m(er) i(a) f(single) g(edge,) i(as) e(w) m(ell) h(as)
f(storing) h(linear) g(\() p Fh(\012\() p Fj(n) p Fh(\)) p
Fs(\)) f(information) h(at) f(eac) m(h) i(no) s(de.) 38
b(The) 25 b(additional) g(cost) f(pa) m(y) m(ed) 50 2645
y(p) s(er) 34 b(transaction) h(b) m(y) f(the) h(2PC/3PC) h(metho) s(ds)
e(pa) m(ys) g(o\033) g(in) g(the) g(presence) h(of) f(top) s(ological) h
(c) m(hanges) g(whic) m(h) g(are) 50 2757 y(supp) s(orted) c(at) f(no) h
(additional) h(cost.) 191 2870 y(The) 26 b(time) h(complexities) g(of) e
(all) h(these) g(solutions) h(are) f(of) f(the) i(order) f(of) g
(magnitude) h(of) f(cross-net) m(w) m(ork) i(latency) -8
b(,) 50 2983 y(i.e.) 41 b(constan) m(t) 31 b(factor) g(a) m(w) m(a) m
(y) h(from) e(optim) m(um.) p Ft 50 3270 a(6) 131 b(P) l(erformance) 44
b(Ev) -7 b(aluation) p Fs 50 3473 a(W) f(e) 37 b(ha) m(v) m(e) g
(implemen) m(ted) j(a) c(protot) m(yp) s(e) i(of) e(the) h(algorithm) h
(presen) m(ted) g(in) f(this) g(pap) s(er) g(and) g(w) m(e) g(ha) m(v) m
(e) h(ev) -5 b(aluated) 50 3586 y(its) 44 b(p) s(erformance) g(in) h(b)
s(oth) f(lo) s(cal) g(and) g(wide-area) i(net) m(w) m(ork) f(settings) g
(and) f(compared) h(it) g(with) f(t) m(w) m(o) i(existing) 50
3698 y(solutions:) 62 b(an) p Fr 42 w(upp) -5 b(er-b) g(ound) p
Fs 53 w(v) m(ersion) 42 b(of) f(t) m(w) m(o-phase) i(commit) f(\(2PC\))
h(and) e(a) g(group) h(comm) m(unication) i(based) 50
3811 y(solution) e(\([A) -8 b(T02) q(]\).) 73 b(The) 42
b(2PC) g(implemen) m(tation) i(that) e(w) m(e) g(used) f(assumes) g
(that) h(all) f(the) h(lo) s(c) m(ks) f(are) g(gran) m(ted) 50
3924 y(instan) m(tly) -8 b(,) 32 b(th) m(us) f(ensuring) g(the) g
(maxim) m(um) h(lev) m(el) g(of) e(concurrency) i(the) f(2PC) g(metho) s
(d) g(can) g(supp) s(ort.) 42 b(The) 31 b(group) 50 4037
y(comm) m(unication) i(solution) e(w) m(as) g(implemen) m(ted) i(using)
d(the) h(Spread) g(group) g(comm) m(unication) j(to) s(olkit) c
(\([AS98) q(]\).) 191 4150 y(In) 36 b(the) i(\034rst) e(set) h(of) g
(exp) s(erimen) m(ts) g(w) m(e) h(compared) g(the) f(maxim) m(um) i
(throughput) f(of) f(the) g(three) g(solutions) h(in) 50
4263 y(a) d(100Mbit) g(Ethernet) i(LAN) d(setup) i(consisting) f(of) f
(14) i(PI) s(I) s(I) d(667MHz) i(replicas) g(with) h(256MB) f(RAM) e
(and) j(9GB) 50 4376 y(SCSI) 25 b(disks) f(running) j(Lin) m(ux.) 39
b(The) 26 b(second) g(set) f(of) f(exp) s(erimen) m(ts) i(w) m(as) g
(run) g(on) f(an) g(em) m(ulated) i(Wide-Area) f(net) m(w) m(ork) 50
4489 y(setup) 32 b(consisting) h(of) f(7) g(PI) s(I) s(I) e(850MHz) j
(computers) g(with) g(512MB) f(RAM) f(and) i(40G) f(IDE) h(hard) f
(driv) m(es,) i(running) 50 4602 y(Lin) m(ux.) 42 b(The) 31
b(wide-area) h(net) m(w) m(ork) g(setup) f(w) m(as) g(designed) h(to) e
(em) m(ulate) j(the) e(CAIRN) e(US-wide) i(net) m(w) m(ork) h(depicted)
50 4715 y(in) 25 b(Figure) h(2.) 39 b(Eac) m(h) 26 b(clien) m(t) g
(submits) g(one) f(action) h(at) f(a) g(time.) 40 b(Once) 25
b(the) h(action) g(is) e(committed) j(the) f(clien) m(t) g(receiv) m
(es) 50 4828 y(an) k(ac) m(kno) m(wledgemen) m(t) k(from) d(the) g
(serv) m(er) f(it) h(w) m(as) f(connected) i(to) f(and) g(can) f
(generate) i(a) e(new) h(action.) 191 4940 y(The) e(left-side) f(graph)
i(in) e(Figure) h(3) g(compares) g(the) g(throughput) h(of) e(the) h
(three) g(algorithms) g(on) g(the) g(lo) s(cal) f(area) 50
5053 y(net) m(w) m(ork.) 42 b(The) 29 b(upp) s(er-b) s(ound) h(2PC) g
(algorithm) g(can) g(only) f(sustain) g(a) g(com) m(bined) i
(throughput) f(of) f(60) g(actions) h(p) s(er) 50 5166
y(second.) 40 b(Our) 27 b(mo) s(dular) g(solution) h(reac) m(hes) g(an)
f(aggregate) h(throughput) h(comparable) f(to) f(the) h(one) f(reac) m
(hed) h(b) m(y) f(the) 50 5279 y(group) g(comm) m(unication) j(approac)
m(h) f(\(800) e(and) g(1000) g(actions) h(p) s(er) e(second) i(resp) s
(ectiv) m(ely\),) g(pro) m(ving) g(the) f(similarit) m(y) 50
5392 y(of) j(the) g(t) m(w) m(o) i(approac) m(hes) g(and) f(their) g
(e\036ciency) -8 b(.) 191 5505 y(The) 27 b(wide-area) i(exp) s(erimen) m
(ts) f(sho) m(w) f(a) g(similar) g(b) s(eha) m(viour.) 41
b(The) 27 b(2PC) h(algorithm) g(quic) m(kly) f(reac) m(hes) h(its) f
(limit) 50 5618 y(of) 33 b(ab) s(out) i(80) f(actions) h(p) s(er) e
(second) i(while) g(the) f(other) h(algorithms) g(are) f(able) h(to) f
(reac) m(h) h(350) g(actions) f(p) s(er) g(second.) 1997
5953 y(14) p 90 rotate dyy eop
%%Page: 15 15
15 14 bop 6 1693 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2376 @rwi @setspecial
%%BeginDocument: lan.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: lan.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sat Dec  7 15:11:58 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -53 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
816 480 M
63 0 V
6049 0 R
-63 0 V
720 480 M
(0) Rshow
816 1160 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(200) Rshow
816 1840 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(400) Rshow
816 2520 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(600) Rshow
816 3200 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(800) Rshow
816 3880 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(1000) Rshow
816 4560 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(1200) Rshow
816 480 M
0 63 V
0 4017 R
0 -63 V
816 320 M
(0) Cshow
1689 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(20) Cshow
2562 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(40) Cshow
3435 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(60) Cshow
4309 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(80) Cshow
5182 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(100) Cshow
6055 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(120) Cshow
6928 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(140) Cshow
1.000 UL
LTb
816 480 M
6112 0 V
0 4080 V
-6112 0 V
816 480 L
160 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Thoughput\(actions/second\)) Cshow
grestore
3872 80 M
(Number of clients updating 14 replicas) Cshow
3872 4800 M
(LAN Throughput Comparison) Cshow
1.000 UP
1.000 UL
LT0
6193 4417 M
(Spread Engine) Rshow
6289 4417 M
447 0 V
860 739 M
43 237 V
44 274 V
44 293 V
43 286 V
44 334 V
44 329 V
43 207 V
44 311 V
44 246 V
43 107 V
44 243 V
44 267 V
43 216 V
262 -35 V
349 -10 V
612 -104 V
611 -68 V
1222 17 V
1223 -8 V
1222 -20 V
860 739 Pls
903 976 Pls
947 1250 Pls
991 1543 Pls
1034 1829 Pls
1078 2163 Pls
1122 2492 Pls
1165 2699 Pls
1209 3010 Pls
1253 3256 Pls
1296 3363 Pls
1340 3606 Pls
1384 3873 Pls
1427 4089 Pls
1689 4054 Pls
2038 4044 Pls
2650 3940 Pls
3261 3872 Pls
4483 3889 Pls
5706 3881 Pls
6928 3861 Pls
6512 4417 Pls
1.000 UP
1.000 UL
LT1
6193 4257 M
(Pulse) Rshow
6289 4257 M
447 0 V
860 548 M
174 187 V
219 228 V
174 251 V
611 663 V
612 1000 V
611 99 V
1222 6 V
1223 92 V
1222 85 V
860 548 Crs
1034 735 Crs
1253 963 Crs
1427 1214 Crs
2038 1877 Crs
2650 2877 Crs
3261 2976 Crs
4483 2982 Crs
5706 3074 Crs
6928 3159 Crs
6512 4257 Crs
1.000 UP
1.000 UL
LT2
6193 4097 M
(2PC upper-bound) Rshow
6289 4097 M
447 0 V
860 649 M
43 31 V
44 15 V
44 -12 V
43 8 V
44 -10 V
44 3 V
43 2 V
44 -2 V
44 -1 V
43 0 V
44 3 V
44 -5 V
43 0 V
611 -1 V
612 -3 V
611 2 V
1222 -2 V
1223 -1 V
1222 -3 V
860 649 Star
903 680 Star
947 695 Star
991 683 Star
1034 691 Star
1078 681 Star
1122 684 Star
1165 686 Star
1209 684 Star
1253 683 Star
1296 683 Star
1340 686 Star
1384 681 Star
1427 681 Star
2038 680 Star
2650 677 Star
3261 679 Star
4483 677 Star
5706 676 Star
6928 673 Star
6512 4097 Star
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
@endspecial 2093 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 2376 @rwi @setspecial
%%BeginDocument: wan.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: wan.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sat Dec  7 15:12:31 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -53 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
720 480 M
63 0 V
6145 0 R
-63 0 V
624 480 M
(0) Rshow
720 990 M
63 0 V
6145 0 R
-63 0 V
624 990 M
(50) Rshow
720 1500 M
63 0 V
6145 0 R
-63 0 V
-6241 0 R
(100) Rshow
720 2010 M
63 0 V
6145 0 R
-63 0 V
-6241 0 R
(150) Rshow
720 2520 M
63 0 V
6145 0 R
-63 0 V
-6241 0 R
(200) Rshow
720 3030 M
63 0 V
6145 0 R
-63 0 V
-6241 0 R
(250) Rshow
720 3540 M
63 0 V
6145 0 R
-63 0 V
-6241 0 R
(300) Rshow
720 4050 M
63 0 V
6145 0 R
-63 0 V
-6241 0 R
(350) Rshow
720 4560 M
63 0 V
6145 0 R
-63 0 V
-6241 0 R
(400) Rshow
720 480 M
0 63 V
0 4017 R
0 -63 V
720 320 M
(0) Cshow
1548 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(20) Cshow
2375 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(40) Cshow
3203 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(60) Cshow
4031 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(80) Cshow
4859 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(100) Cshow
5686 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(120) Cshow
6514 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(140) Cshow
1.000 UL
LTb
720 480 M
6208 0 V
0 4080 V
-6208 0 V
720 480 L
160 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Thoughput\(actions/second\)) Cshow
grestore
3824 80 M
(Number of clients updating 7 replicas) Cshow
3824 4800 M
(WAN Throughput Comparison) Cshow
1.000 UP
1.000 UL
LT0
2256 4417 M
(Spread Engine) Rshow
2352 4417 M
447 0 V
761 527 M
42 33 V
41 40 V
42 33 V
41 35 V
41 75 V
42 12 V
289 276 V
290 314 V
290 286 V
290 353 V
289 304 V
290 296 V
290 283 V
289 309 V
290 298 V
1449 628 V
289 3 V
290 23 V
290 -61 V
289 -41 V
290 -44 V
290 -32 V
124 -21 V
761 527 Pls
803 560 Pls
844 600 Pls
886 633 Pls
927 668 Pls
968 743 Pls
1010 755 Pls
1299 1031 Pls
1589 1345 Pls
1879 1631 Pls
2169 1984 Pls
2458 2288 Pls
2748 2584 Pls
3038 2867 Pls
3327 3176 Pls
3617 3474 Pls
5066 4102 Pls
5355 4105 Pls
5645 4128 Pls
5935 4067 Pls
6224 4026 Pls
6514 3982 Pls
6804 3950 Pls
2575 4417 Pls
1.000 UP
1.000 UL
LT1
2256 4257 M
(Pulse) Rshow
2352 4257 M
447 0 V
761 511 M
249 153 V
289 163 V
290 275 V
290 123 V
290 224 V
289 275 V
290 153 V
290 215 V
289 132 V
290 21 V
579 295 V
870 674 V
289 214 V
1159 530 V
414 88 V
761 511 Crs
1010 664 Crs
1299 827 Crs
1589 1102 Crs
1879 1225 Crs
2169 1449 Crs
2458 1724 Crs
2748 1877 Crs
3038 2092 Crs
3327 2224 Crs
3617 2245 Crs
4196 2540 Crs
5066 3214 Crs
5355 3428 Crs
6514 3958 Crs
2575 4257 Crs
1.000 UP
1.000 UL
LT2
2256 4097 M
(2PC upper-bound) Rshow
2352 4097 M
447 0 V
1010 670 M
289 214 V
290 174 V
290 94 V
290 48 V
289 13 V
290 35 V
290 -3 V
289 12 V
290 -4 V
1449 1 V
1448 0 V
1010 670 Star
1299 884 Star
1589 1058 Star
1879 1152 Star
2169 1200 Star
2458 1213 Star
2748 1248 Star
3038 1245 Star
3327 1257 Star
3617 1253 Star
5066 1254 Star
6514 1254 Star
2575 4097 Star
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
@endspecial Fs 1140 1848 a(Figure) 31 b(3:) 41 b(Aggregate) 31
b(Throughput) h(Comparison) 747 3737 y
 currentpoint currentpoint translate 0.86343 0.86343 scale neg exch
neg exch translate
 747 3737 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 3600 @rwi @clip @setspecial
%%BeginDocument: impact.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: impact.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sun Dec  8 13:53:26 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -53 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
816 480 M
63 0 V
6049 0 R
-63 0 V
720 480 M
(0) Rshow
816 933 M
63 0 V
6049 0 R
-63 0 V
720 933 M
(500) Rshow
816 1387 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(1000) Rshow
816 1840 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(1500) Rshow
816 2293 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(2000) Rshow
816 2747 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(2500) Rshow
816 3200 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(3000) Rshow
816 3653 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(3500) Rshow
816 4107 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(4000) Rshow
816 4560 M
63 0 V
6049 0 R
-63 0 V
-6145 0 R
(4500) Rshow
816 480 M
0 63 V
0 4017 R
0 -63 V
816 320 M
(0) Cshow
1580 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(100) Cshow
2344 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(200) Cshow
3108 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(300) Cshow
3872 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(400) Cshow
4636 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(500) Cshow
5400 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(600) Cshow
6164 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(700) Cshow
6928 480 M
0 63 V
0 4017 R
0 -63 V
0 -4177 R
(800) Cshow
1.000 UL
LTb
816 480 M
6112 0 V
0 4080 V
-6112 0 V
816 480 L
160 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Thoughput\(actions/second\)) Cshow
grestore
3872 80 M
(Number of clients) Cshow
3872 4800 M
(Forced Disk Writes Impact Analysis) Cshow
1.000 UP
1.000 UL
LT0
6193 4417 M
(forced in LAN) Rshow
6289 4417 M
447 0 V
824 498 M
30 50 V
38 61 V
31 67 V
107 177 V
107 266 V
107 26 V
214 2 V
214 25 V
214 22 V
214 -8 V
213 26 V
214 -6 V
214 -12 V
214 -13 V
214 6 V
214 -12 V
214 -4 V
214 2 V
214 -12 V
535 -3 V
534 -30 V
535 -2 V
1070 -10 V
824 498 Pls
854 548 Pls
892 609 Pls
923 676 Pls
1030 853 Pls
1137 1119 Pls
1244 1145 Pls
1458 1147 Pls
1672 1172 Pls
1886 1194 Pls
2100 1186 Pls
2313 1212 Pls
2527 1206 Pls
2741 1194 Pls
2955 1181 Pls
3169 1187 Pls
3383 1175 Pls
3597 1171 Pls
3811 1173 Pls
4025 1161 Pls
4560 1158 Pls
5094 1128 Pls
5629 1126 Pls
6699 1116 Pls
6512 4417 Pls
1.000 UP
1.000 UL
LT1
6193 4257 M
(nonforced in LAN) Rshow
6289 4257 M
447 0 V
824 499 M
30 41 V
38 50 V
31 79 V
107 549 V
107 1770 V
107 502 V
214 419 V
214 235 V
214 14 V
214 4 V
213 83 V
214 -141 V
214 -2 V
214 -86 V
214 12 V
214 6 V
214 -13 V
214 5 V
214 -5 V
535 4 V
534 -343 V
535 -138 V
1070 -94 V
824 499 Crs
854 540 Crs
892 590 Crs
923 669 Crs
1030 1218 Crs
1137 2988 Crs
1244 3490 Crs
1458 3909 Crs
1672 4144 Crs
1886 4158 Crs
2100 4162 Crs
2313 4245 Crs
2527 4104 Crs
2741 4102 Crs
2955 4016 Crs
3169 4028 Crs
3383 4034 Crs
3597 4021 Crs
3811 4026 Crs
4025 4021 Crs
4560 4025 Crs
5094 3682 Crs
5629 3544 Crs
6699 3450 Crs
6512 4257 Crs
1.000 UP
1.000 UL
LT2
6193 4097 M
(forced in WAN) Rshow
6289 4097 M
447 0 V
824 483 M
45 13 V
54 15 V
53 24 V
54 11 V
53 20 V
54 25 V
53 13 V
54 19 V
53 12 V
54 2 V
107 26 V
160 60 V
54 19 V
214 47 V
427 44 V
428 36 V
428 12 V
428 2 V
428 32 V
1069 33 V
1605 5 V
824 483 Star
869 496 Star
923 511 Star
976 535 Star
1030 546 Star
1083 566 Star
1137 591 Star
1190 604 Star
1244 623 Star
1297 635 Star
1351 637 Star
1458 663 Star
1618 723 Star
1672 742 Star
1886 789 Star
2313 833 Star
2741 869 Star
3169 881 Star
3597 883 Star
4025 915 Star
5094 948 Star
6699 953 Star
6512 4097 Star
1.000 UP
1.000 UL
LT3
6193 3937 M
(nonforced in WAN) Rshow
6289 3937 M
447 0 V
824 483 M
45 13 V
54 18 V
53 21 V
54 8 V
53 18 V
54 28 V
53 27 V
54 3 V
53 7 V
54 34 V
107 31 V
160 41 V
54 43 V
214 24 V
427 31 V
428 5 V
428 11 V
428 25 V
428 1 V
1069 63 V
1605 16 V
824 483 Box
869 496 Box
923 514 Box
976 535 Box
1030 543 Box
1083 561 Box
1137 589 Box
1190 616 Box
1244 619 Box
1297 626 Box
1351 660 Box
1458 691 Box
1618 732 Box
1672 775 Box
1886 799 Box
2313 830 Box
2741 835 Box
3169 846 Box
3597 871 Box
4025 872 Box
5094 935 Box
6699 951 Box
6512 3937 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
@endspecial 747 3737 a
 currentpoint currentpoint translate 1 0.86343 div 1 0.86343 div scale
neg exch neg exch translate
 747 3737 a Fs 729 3933 a(Figure) f(4:) 41
b(Impact) 31 b(of) f(F) -8 b(orced) 31 b(Disk) f(W) -8
b(rites) 30 b(on) h(Aggregate) g(Throughput) 50 4208
y(W) -8 b(e) 28 b(ha) m(v) m(e) h(ran) f(more) g(exp) s(erimen) m(ts) g
(with) h(the) f(pulse-based) g(algorithm) h(and) f(w) m(e) h(reac) m
(hed) g(its) e(saturation) i(p) s(oin) m(t) g(at) 50
4320 y(appro) m(ximately) i(500) e(actions) g(p) s(er) g(second) h
(when) f(560) h(clien) m(ts) g(push) f(actions) g(in) m(to) h(the) f
(system,) g(as) g(can) g(b) s(e) g(noted) 50 4433 y(in) k(\034gure) g
(4.) 48 b(These) 33 b(results) f(w) m(ere) i(not) f(plotted) h(on) f
(the) g(comparison) h(graph) f(since) g(w) m(e) g(did) g(not) h(ha) m
(v) m(e) f(su\036cien) m(t) 50 4546 y(exp) s(erimen) m(tal) f(data) f
(for) f(the) g(other) h(algorithms.) 191 4659 y(In) 23
b(b) s(oth) h(exp) s(erimen) m(ts) g(w) m(e) g(notice) g(that) g(the) g
(pulse-based) g(solution) h(exp) s(eriences) e(a) h(higher) g(latency) g
(p) s(er) f(trans-) 50 4772 y(action) 33 b(than) f(the) g(group) h
(comm) m(unication) i(solution.) 45 b(This) 32 b(is) g(re\035ected) h
(in) f(the) g(slo) m(w) m(er) h(increasing) g(throughput) 50
4885 y(curv) m(e) 28 b(-) g(more) g(clien) m(ts) h(are) e(needed) i(in)
f(order) g(to) g(pro) s(duce) g(the) g(same) g(aggregated) h
(throughput.) 42 b(Ho) m(w) m(ev) m(er,) 30 b(in) d(the) 50
4998 y(wide-area) 32 b(net) m(w) m(ork) g(setup,) e(the) h(mo) s(dular)
g(solution) g(reac) m(hes) h(a) e(higher) h(aggregated) h(throughput.)
191 5111 y(W) -8 b(e) 26 b(ha) m(v) m(e) g(also) g(ev) -5
b(aluated) 26 b(the) g(p) s(erformance) g(of) f(the) h(pulse-based) h
(algorithm) g(when) f(w) m(e) g(allo) m(w) h(async) m(hronous) 50
5224 y(disk-writes) h(instead) g(of) f(the) h(forced) g(disk) f(writes)
h(that) h(are) f(necessary) f(to) h(guaran) m(tee) i(the) e(algorithm) h
(correctness) 50 5337 y(in) h(the) g(presence) h(of) e(faults) h
(\(Figure) g(4.) 41 b(This) 30 b(ev) -5 b(aluation) 31
b(sho) m(ws) f(the) g(actual) h(p) s(oten) m(tial) g(of) e(the) i(sync)
m(hronization) 50 5450 y(metho) s(d) 24 b(and) h(could) g(b) s(e) e
(practically) j(recreated) f(in) f(a) g(system) g(that) g(emplo) m(ys) h
(sp) s(ecialized,) h(fast) e(p) s(ersisten) m(t) g(storage) 50
5563 y(as) 42 b(used) h(in) g(critical) h(high-p) s(erformance) h
(database) f(systems.) 77 b(In) 43 b(these) g(exp) s(erimen) m(ts) h
(the) f(pulse) g(algorithm) 50 5675 y(reac) m(hed) e(its) e(p) s(eak) g
(at) h(o) m(v) m(er) g(4000) g(actions/second) h(on) f(LAN) f(and) h
(520) g(actions/second) g(in) g(the) g(W) -10 b(AN) 38
b(setup.) 1997 5953 y(15) p 90 rotate dyy eop
%%Page: 16 16
16 15 bop Fs 50 399 a(The) 39 b(results) g(illustrate) h(ho) m(w) g
(the) f(p) s(erformance) h(b) s(ottlenec) m(k) g(shifts) e(from) h(the)
g(disk) g(op) s(erations,) i(in) e(the) h(lo) s(cal) 50
511 y(area) 27 b(setup,) h(to) f(the) g(a) m(v) -5 b(ailable) 28
b(bandwidth) g(in) f(the) g(wide-area) h(exp) s(erimen) m(ts.) 40
b(In) 27 b(wide-area) h(settings) f(it) f(b) s(ecomes) 50
624 y(increasingly) 31 b(imp) s(ortan) m(t) h(to) e(use) h(an) f
(optimized) i(comm) m(unication) h(pattern.) p Ft 50
911 a(7) 131 b(Conclusions) p Fs 50 1114 a(W) -8 b(e) 39
b(ha) m(v) m(e) i(presen) m(ted) f(a) g(consisten) m(t) g(distributed) g
(commit) h(algorithm) f(designed) g(b) m(y) g(com) m(bining) h(a) e(n) m
(um) m(b) s(er) i(of) 50 1227 y(simple,) 35 b(w) m(ell-de\034ned) h(mo)
s(dules.) 52 b(The) 34 b(algorithm) h(functions) g(correctly) f(in) h
(the) f(presence) g(of) g(an) m(y) g(com) m(bination) 50
1339 y(of) 29 b(net) m(w) m(ork/serv) m(er) i(faults.) 40
b(The) 30 b(mo) s(dular) f(approac) m(h) i(allo) m(ws) f(for) f(an) h
(easier) f(understanding) i(of) e(the) g(solution) h(as) 50
1452 y(w) m(ell) 35 b(as) e(pro) m(ving) i(its) e(correctness.) 52
b(W) -8 b(e) 34 b(analytically) g(compare) h(the) f(solution) h(with) f
(existing) g(metho) s(ds) g(and) g(w) m(e) 50 1565 y(v) -5
b(alidate) 31 b(the) g(analysis) f(through) h(practical) h(exp) s
(erimen) m(ts.) 191 1678 y(W) -8 b(e) 27 b(sho) m(w) h(that) f(simple) g
(design) g(can) g(yield) g(an) g(e\036cien) m(t) i(solution) e(to) g(a)
g(problem) h(that) g(traditionally) g(required) 50 1791
y(v) m(ery) h(complex) i(algorithmic) g(solutions.) 41
b(The) 30 b(mo) s(dular) g(design) g(can) g(b) s(e) f(used) h(for) f(a)
h(future) g(detailed) h(analysis) e(of) 50 1904 y(the) i(trade-o\033s) g
(in) m(v) m(olv) m(ed) h(and) f(\034ner) h(tuning) f(to) g(the) g(sp) s
(eci\034c) g(net) m(w) m(ork) h(en) m(vironmen) m(ts) h(in) e(whic) m
(h) h(the) f(solution) g(is) 50 2017 y(deplo) m(y) m(ed.) p
Ft 50 2303 a(References) p Fs 50 2506 a([AA) m(G87]) 46
b(Y.) 20 b(Afek,) i(B.) f(A) -8 b(w) m(erbuc) m(h,) 25
b(and) d(E.) f(Gafni.) k(Applying) c(static) g(net) m(w) m(ork) h
(proto) s(cols) g(to) f(dynamic) g(net) m(w) m(orks.) 440
2619 y(In) p Fr 30 w(IEEE) 32 b(Symp) -5 b(osium) 32
b(on) g(F) -7 b(oundations) 32 b(of) g(Computer) h(Scienc) -5
b(e) p Fs(,) 32 b(pages) e(358\025370,) i(1987.) 50 2807
y([Ami95]) 82 b(Y.) 26 b(Amir.) p Fr 33 w(R) -5 b(eplic) g(ation) 29
b(Using) f(Gr) -5 b(oup) 30 b(Communic) -5 b(ation) 27
b(over) j(a) e(Partitione) -5 b(d) 29 b(Network) p Fs(.) 34
b(PhD) 27 b(thesis,) 440 2920 y(Hebrew) k(Univ) m(ersit) m(y) g(of) f
(Jerusalem,) h(Israel,) g(1995.) 50 3107 y([AS98]) 132
b(Y.) 26 b(Amir) h(and) g(J.) g(Stan) m(ton.) 36 b(The) 27
b(spread) g(wide) h(area) f(group) g(comm) m(unication) j(system.) k(T)
-8 b(ec) m(hnical) 29 b(Re-) 440 3220 y(p) s(ort) 22
b(CNDS) h(98-4,) h(Johns) f(Hopkins) f(Univ) m(ersit) m(y) -8
b(,) 25 b(Cen) m(ter) f(for) e(Net) m(w) m(orking) i(and) f
(Distributed) g(Systems,) 440 3333 y(1998.) 50 3521 y([A) -8
b(T02]) 125 b(Y.) 30 b(Amir) g(and) h(C.) g(T) -8 b(utu.) 41
b(F) -8 b(rom) 31 b(total) g(order) g(to) g(database) g(replication.) 42
b(In) p Fr 30 w(Pr) -5 b(o) g(c) g(e) g(e) g(dings) 36
b(of) c(the) p Fh 33 w(22) p Fi 3951 3488 a(nd) p Fr
440 3634 a(International) f(Confer) -5 b(enc) g(e) 34
b(on) e(Distribute) -5 b(d) 34 b(Computing) e(Systems) p
Fs(,) d(Vienna,) i(Austria,) g(July) g(2002.) 50 3821
y([A) -10 b(W96]) 99 b(Y.) 38 b(Amir) h(and) g(A.) f(W) -8
b(o) s(ol.) 65 b(Ev) -5 b(aluating) 40 b(quorum) f(systems) f(o) m(v) m
(er) h(the) g(in) m(ternet.) 67 b(In) p Fr 38 w(Symp) -5
b(osium) 39 b(on) 440 3934 y(F) -7 b(ault-T) g(oler) i(ant) 33
b(Computing) p Fs(,) d(pages) h(26\02535,) g(1996.) 50
4122 y([A) -8 b(w) m(e85]) 88 b(Baruc) m(h) 27 b(A) -8
b(w) m(erbuc) m(h.) 35 b(Complexit) m(y) 28 b(of) d(net) m(w) m(ork) j
(sync) m(hronization.) p Fr 35 w(Journal) h(of) e(the) i(A) n(CM) p
Fs(,) c(32\(4\):804\025) 440 4235 y(823,) 31 b(1985.) 50
4422 y([A) -8 b(w) m(e87]) 88 b(Baruc) m(h) 22 b(A) -8
b(w) m(erbuc) m(h.) 27 b(Optimal) 22 b(distributed) f(algorithms) h
(for) f(minim) m(um) h(w) m(eigh) m(t) h(spanning) e(tree,) i(coun) m
(t-) 440 4535 y(ing,) g(leader) e(election) h(and) f(related) h
(problems) f(\(detailed) h(summary\).) j(In) p Fr 20
w(A) n(CM) d(Symp) -5 b(osium) 23 b(on) g(The) -5 b(ory) 440
4648 y(of) 32 b(Computing) p Fs(,) e(pages) g(230\025240,) i(1987.) 50
4836 y([CT96]) 120 b(T.) 34 b(D.) f(Chandra) i(and) f(S.) g(T) -8
b(oueg.) 51 b(Unreliable) 35 b(failure) f(detectors) g(for) g(reliable)
h(distributed) f(systems.) p Fr 440 4949 a(Journal) f(of) f(the) h(A) n
(CM) p Fs(,) c(43\(2\):225\025267,) k(Marc) m(h) e(1996.) 50
5136 y([FLP85]) 74 b(M.) 28 b(H.) g(Fisc) m(her,) h(N.) f(A.) g(Lync) m
(h,) i(and) e(M.) g(S.) g(P) m(aterson.) 39 b(Imp) s(ossibilit) m(y) 28
b(of) g(consensus) g(with) h(one) f(fault) m(y) 440 5249
y(pro) s(cess.) p Fr 40 w(Journal) 33 b(of) f(the) h(A) n(CM) p
Fs(,) c(32\(2\):374\025382,) k(April) d(1985.) 50 5437
y([FLS01]) 85 b(A.) 31 b(F) -8 b(ek) m(ete,) 32 b(N.) f(Lync) m(h,) h
(and) g(A.) e(Sh) m(v) -5 b(artsman.) 44 b(Sp) s(ecifying) 31
b(and) h(using) f(a) g(partitionable) i(group) f(com-) 440
5550 y(m) m(unication) g(service.) p Fr 41 w(A) n(CM) f(T) -7
b(r) i(ansactions) 32 b(on) g(Computer) h(Systems) p
Fs(,) d(19\(2\):171\025216,) i(Ma) m(y) f(2001.) 1997
5953 y(16) p 90 rotate dyy eop
%%Page: 17 17
17 16 bop Fs 50 399 a([GHS83]) 61 b(R.) 30 b(Gallager,) j(P) -8
b(.) 32 b(Hum) m(blet,) g(and) g(P) -8 b(.) 32 b(Spira.) 44
b(A) 30 b(distributed) j(algorithm) f(for) f(minim) m(um-w) m(eigh) m
(t) k(span-) 440 511 y(ning) c(trees.) p Fr 40 w(A) n(CM) h(T) -7
b(r) i(ans.) 31 b(Pr) -5 b(o) g(gr) g(amming) 34 b(L) -5
b(anguage) 34 b(Syst.) p Fs(,) 29 b(5\(1\):66\02577,) j(1983.) 50
699 y([GR93]) 112 b(J.) 28 b(N.) g(Gra) m(y) h(and) f(A.) g(Reuter.) p
Fr 38 w(T) -7 b(r) i(ansaction) 30 b(Pr) -5 b(o) g(c) g(essing:) 42
b(c) -5 b(onc) g(epts) 32 b(and) e(te) -5 b(chniques) p
Fs(.) 39 b(Data) 29 b(Manage-) 440 812 y(men) m(t) i(Systems.) f
(Morgan) h(Kaufmann) h(Publishers,) f(Inc.,) f(San) h(Mateo) g(\(CA\),)
g(USA,) f(1993.) 50 1000 y([JM90]) 121 b(S.) 30 b(Ja) 5
b(jo) s(dia) 30 b(and) h(D.) f(Mutc) m(hler.) 41 b(Dynamic) 31
b(v) m(oting) g(algorithms) g(for) f(main) m(taining) i(the) f
(consistency) f(of) 440 1112 y(a) g(replicated) i(database.) p
Fr 41 w(A) n(CM) g(T) -7 b(r) i(ansactions) 32 b(on) g(Datab) -5
b(ase) 33 b(Systems) p Fs(,) d(15\(2\):230\025280,) j(1990.) 50
1300 y([KD95]) 111 b(I.) 27 b(Keidar) h(and) g(D.) f(Dolev.) 36
b(Increasing) 28 b(the) g(resilience) g(of) f(atomic) i(commit) f(at) g
(no) f(additional) i(cost.) 36 b(In) p Fr 440 1413 a(Symp) -5
b(osium) 32 b(on) g(Principles) g(of) g(Datab) -5 b(ase) 34
b(Systems) p Fs(,) c(pages) g(245\025254,) i(1995.) 50
1601 y([Kei94]) 115 b(I.) 37 b(Keidar.) 62 b(A) 37 b(highly) g(a) m(v)
-5 b(ailable) 39 b(paradigm) g(for) e(consisten) m(t) h(ob) 5
b(ject) 38 b(replication.) 63 b(Master's) 37 b(thesis,) 440
1714 y(Institute) 23 b(of) g(Computer) i(Science,) h(The) e(Hebrew) g
(Univ) m(ersit) m(y) g(of) f(Jerusalem,) j(Jerusalem,) g(Israel,) f
(1994.) 50 1901 y([Lam98]) 74 b(Leslie) 46 b(Lamp) s(ort.) 85
b(The) 46 b(part-time) h(parliamen) m(t.) p Fr 87 w(A) n(CM) e(T) -7
b(r) i(ansactions) 45 b(on) h(Computer) g(Systems) p
Fs(,) 440 2014 y(16\(2\):133\025169,) 32 b(1998.) 50
2202 y([Lam01]) 74 b(Butler) 30 b(Lampson.) 39 b(The) 30
b(ABCDs) e(of) h(paxos.) 38 b(Presen) m(ted) 31 b(at) f(Principles) g
(of) f(Distributed) h(Computing,) 440 2315 y(2001.) 50
2502 y([LL93]) 138 b(B.) 33 b(Lampson) h(and) g(D.) f(Lomet.) 50
b(A) 33 b(new) h(presumed) g(commit) g(optimization) h(for) e(t) m(w) m
(o) i(phase) e(commit.) 440 2615 y(T) -8 b(ec) m(hnical) 31
b(Rep) s(ort) d(CRL) g(93/1,) i(Digital) f(Cam) m(bridge) h(Researc) m
(h) f(Lab) s(oratory) -8 b(,) 31 b(One) e(Kendall) g(Square,) 440
2728 y(Cam) m(bridge,) j(Massac) m(h) m(ussets) f(02139,) g(F) -8
b(ebruary) 32 b(1993.) 50 2916 y([Sk) m(e82]) 115 b(D.) 29
b(Sk) m(een.) 39 b(A) 29 b(quorum-based) h(commit) h(proto) s(col.) 39
b(Berkley) 29 b(W) -8 b(orkshop) 29 b(on) h(Distributed) g(Data) g
(Man-) 440 3029 y(agemen) m(t) i(and) f(Computer) g(Net) m(w) m(orks,) h
(F) -8 b(ebruary) 31 b(1982.) 50 3216 y([W) -8 b(o) s(o98]) 72
b(A.) 22 b(W) -8 b(o) s(ol.) 27 b(Quorum) c(systems) f(in) g
(replicated) i(databases) e(science) h(or) f(\034ction.) p
Fr 28 w(Bul) 5 b(letin) 25 b(of) g(the) g(T) -7 b(e) i(chnic) g(al) 440
3329 y(Commite) g(e) 32 b(on) g(Data) h(Engine) -5 b(ering) p
Fs(,) 31 b(21\(4\):3\02511,) h(Decem) m(b) s(er) g(1998.) 1997
5953 y(17) p 90 rotate dyy eop
%%Page: 18 18
18 17 bop Ft 50 399 a(A) 132 b(Classic) 44 b(Algorithms) p
Fs 50 601 a(The) 28 b(app) s(endix) g(con) m(tains) i(simple) e(sample)
g(implemen) m(tations) j(of) c(spanning) i(tree) g(construction,) h
(reset) e(pro) s(cedure) 50 714 y(and) 35 b(quorum) h(detection) g
(algorithm.) 55 b(They) 35 b(can) h(b) s(e) e(replaced) i(b) m(y) f(an)
m(y) h(other) f(standard) h(or) f(more) g(p) s(erforman) m(t) 50
827 y(implemen) m(tation.) p 50 951 3986 7 v Fk 50 1031
a(Algorithm) f(5) p Fs 30 w(Static) d(Spanning) h(T) -8
b(ree) 31 b(Algorithm) p 50 1068 3986 4 v Fk 140 1171
a(when:) p Fs 30 w(receiv) m(e) p Fk 31 w(net) m(w) m(ork_c) m(hange) p
Fs(\(\)) g(from) g(Reset) f(pro) s(cedure) p Fk 61 w(do) p
Fj 231 1284 a(l) r(eader) p Fo 28 w( ) p Fj 25 w(sel) r(f) p
Fs 231 1397 a(send) p Fk 30 w(ID) p Fs(\() p Fr(self) 9
b(\)) p Fs 34 w(to) 30 b(all) h(neigh) m(b) s(ours) p
Fk 140 1510 a(when:) p Fs 30 w(receiv) m(e) p Fk 31 w(ID) p
Fs(\() p Fr(id) p Fs 9 w(\)) f(from) p Fr 31 w(n) p Fk
67 w(do) 231 1623 y(if) p Fr 39 w(le) -5 b(ader) p Fs
42 w(<) p Fr 30 w(id) p Fk 69 w(then) p Fj 321 1736 a(l) r(eader) p
Fo 29 w( ) p Fj 25 w(id) 321 1848 y(par) s(ent) p Fo
24 w( ) p Fj 25 w(n) p Fs 321 1961 a(forw) m(ard) p Fk
31 w(ID) p Fs(\(id\)) 31 b(to) f(all) h(neigh) m(b) s(ours) p
Fk 231 2074 a(else) p Fs 321 2187 a(send) p Fk 30 w(A) m(CK) p
Fs(\(0\)) h(to) e(n) p Fk 140 2300 a(when:) p Fs 30 w(receiv) m(e) p
Fk 31 w(A) m(CK) p Fs(\(b\)) i(from) e(j) p Fk 60 w(do) 231
2413 y(if) p Fs 39 w(\() p Fr(b) p Fs 36 w(=) h(1\)) p
Fk 60 w(then) p Fs 321 2526 a(add) p Fr 31 w(j) p Fs
43 w(to) p Fr 30 w(childr) -5 b(en_list) p Fk 231 2639
a(if) p Fs 39 w(receiv) m(ed) p Fk 31 w(A) m(CK) p Fs
31 w(messages) 31 b(from) f(all) h(neigh) m(b) s(ours) g(except) p
Fr 31 w(p) -5 b(ar) g(ent) p Fk 70 w(then) 321 2752 y(if) p
Fs 39 w(\() p Fj(par) s(ent) p Fo 25 w(6) p Fh(=) p Fj
25 w(N) 10 b(I) d(L) p Fs(\)) p Fk 60 w(then) p Fs 411
2865 a(send) p Fk 31 w(A) m(CK) p Fs(\(1\)) 31 b(to) p
Fr 31 w(p) -5 b(ar) g(ent) p Fk 321 2978 a(else) p Fs
411 3090 a(send) p Fk 31 w(tree_c) m(hange) p Fs(\(\)) 31
b(noti\034cation) i(to) d(Reconciliation) i(Algorithm) p
50 3157 V 50 3363 3986 7 v Fk 50 3442 a(Algorithm) i(6) p
Fs 30 w(Reset) 29 b(Pro) s(cedure) p 50 3480 3986 4 v
Fk 140 3583 a(when:) p Fs 30 w(receiv) m(e) p Fk 31 w(net) m(w) m
(ork_fail) p Fs(\(\)) i(from) f(failure) h(detector) p
Fk 62 w(do) p Fj 231 3696 a(chang) s(eN) 10 b(o) p Fo
26 w( ) p Fj 25 w(chang) s(eN) g(o) p Fh 22 w(+) 20 b(1) p
Fs 231 3809 a(execute) p Fk 31 w(BroadcastChange) p Fs(\(\)) p
Fk 140 3921 a(when:) p Fs 30 w(receiv) m(e) p Fk 31 w(c) m(hange) p
Fs(\() p Fr(change) p Fs 7 w(\)) p Fk 63 w(do) 231 4034
y(if) p Fs 39 w(\() p Fr(change) 34 b(>) e(changeNo) p
Fs 6 w(\)) p Fk 62 w(then) p Fj 321 4147 a(chang) s(eN) 10
b(o) p Fo 27 w( ) p Fj 25 w(chang) s(e) p Fk 140 4260
a(when:) p Fs 30 w(in) m(v) m(ok) m(ed) p Fk 32 w(BroadcastChange) p
Fs(\(\)) p Fk 61 w(do) p Fs 231 4373 a(send) p Fk 30
w(c) m(hange) p Fs(\() p Fr(changeNo) p Fs 6 w(\)) 32
b(to) f(all) f(neigh) m(b) s(ours) 231 4486 y(send) p
Fk 30 w(net) m(w) m(ork_c) m(hange) p Fs(\() p Fr(changeNo) p
Fs 6 w(\)) p 50 4553 V 191 4747 a(The) h(quorum) g(algorithm) h
(implemen) m(ts) g(a) e(simple) h(w) m(eigh) m(ted) i(ma) 5
b(jorit) m(y) 31 b(algorithm.) 42 b(Eac) m(h) 32 b(no) s(de) p
Fr 30 w(i) p Fs 39 w(will) f(write) 50 4860 y(to) c(p) s(ermanen) m(t) i
(storage) e(its) g(w) m(eigh) m(t) p Fj 29 w(w) p Fi
1385 4874 a(i) p Fs 1440 4860 a(.) 39 b(The) 28 b(distributed) g(pro) s
(cedure) g(will) f(add) h(these) f(v) -5 b(alues) 27
b(for) g(the) g(mem) m(b) s(ers) 50 4973 y(of) 35 b(the) h(curren) m(t)
h(comp) s(onen) m(t.) 59 b(The) 36 b(ro) s(ot) f(of) h(the) g(tree) g
(can) g(decide) g(if) g(the) g(quorum) g(condition) h(is) e
(satis\034ed) h(and) 50 5086 y(will) i(b) s(e) e(able) i(to) g(start) f
(the) h(pulse) f(algorithm.) 63 b(This) 37 b(particular) i(quorum) f
(metho) s(d) g(requires) f(that) h(ev) m(eryb) s(o) s(dy) 50
5199 y(kno) m(ws) f(apriori) g(the) g(total) g(w) m(eigh) m(t) h(of) e
(the) h(system) p Fr 36 w(qweight) p Fs 46 w(in) f(order) h(to) g
(detect) g(the) g(presence) g(of) f(a) g(ma) 5 b(jorit) m(y) -8
b(.) 50 5312 y(This) 32 b(limitation) j(is) d(not) h(inheren) m(t) h
(to) f(the) g(whole) g(algorithm,) i(but) e(only) f(to) h(the) g
(particular) h(quorum) f(algorithm) 50 5425 y(that) e(w) m(e) g(use) f
(in) g(this) h(example.) 1997 5953 y(18) p 90 rotate
dyy eop
%%Page: 19 19
19 18 bop 50 2256 3986 7 v Fk 50 2341 a(Algorithm) 34
b(7) p Fs 30 w(Quorum) d(Pro) s(cedure) h(\(part) f(of) f
(Reconciliation) i(Algorithm\)) p 50 2384 3986 4 v Fm
99 2481 a(1:) p Fr 45 w(curr) -5 b(ent_weight) p Fs 42
w(<-) p Fj 30 w(w) p Fi 1037 2495 a(i) p Fm 99 2594 a(2:) p
Fk 45 w(if) p Fs 40 w(\() p Fr(childr) g(en_list) p Fs
39 w(=) 31 b(NIL\)) p Fk 60 w(then) p Fm 99 2707 a(3:) p
Fs 136 w(send) f(message) h(w) m(eigh) m(t\() p Fj(w) p
Fi 1202 2721 a(i) p Fs 1232 2707 a(\)) g(to) p Fr 30
w(p) -5 b(ar) g(ent) p Fm 99 2820 a(4:) p Fk 45 w(when:) p
Fs 30 w(receiv) m(e) 32 b(w) m(eigh) m(t\() p Fr(w) p
Fs 10 w(\)) g(from) e(c) m(hild) p Fk 62 w(do) p Fm 99
2933 a(5:) p Fj 136 w(cur) s(r) s(ent) p Fr(_) p Fj -1
w(w) r(eig) s(ht) p Fo 27 w( ) p Fj 26 w(cur) s(r) s(ent) p
Fr(_) p Fj -1 w(w) r(eig) s(ht) p Fh 22 w(+) p Fj 20
w(w) p Fm 99 3046 a(6:) p Fk 136 w(if) p Fs 39 w(receiv) m(ed) i(w) m
(eigh) m(t) g(message) f(from) f(all) h(c) m(hildren) p
Fk 62 w(then) p Fm 99 3159 a(7:) p Fk 226 w(if) p Fs
40 w(\() p Fj(par) s(ent) p Fo 24 w(6) p Fh(=) p Fj 25
w(nil) p Fs 2 w(\)) p Fk 60 w(then) p Fm 99 3271 a(8:) p
Fs 317 w(send) f(w) m(eigh) m(t\() p Fr(curr) -5 b(ent_weight) p
Fs 9 w(\)) 35 b(to) p Fr 30 w(p) -5 b(ar) g(ent) p Fm
99 3384 a(9:) p Fk 226 w(else) 31 b(if) p Fs 40 w(\() p
Fr(curr) -5 b(ent_weight) p Fs 41 w(>) p Fi 1463 3344
a(q) r(w) r(eig) r(ht) p 1463 3363 246 4 v Fc 1568 3416
a(2) p Fs 1718 3384 a(\)) p Fk 61 w(then) p Fm 60 3497
a(10:) p Fk 318 w(return) p Fs 29 w(TR) m(UE) p Fm 60
3610 a(11:) p Fk 227 w(else) p Fm 60 3723 a(12:) p Fk
318 w(return) p Fs 29 w(F) -10 b(ALSE) p 50 3761 3986
4 v 1997 5953 a(19) p 90 rotate dyy eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
